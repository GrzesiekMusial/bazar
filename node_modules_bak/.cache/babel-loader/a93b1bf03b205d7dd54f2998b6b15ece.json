{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport * as imagesBase from \"../services/images\";\nimport * as noticeBase from \"../services/notices\";\nimport * as productBase from \"../services/products\";\n\nconst noticeSave = async (item, edit, image) => {\n  return await save(item, edit, image, noticeBase);\n};\n\nconst productSave = async (item, edit, image) => {\n  item.price = await checkPrice(item.price);\n  return await save(item, edit, image, productBase);\n};\n\nconst save = async (item, edit, image, base) => {\n  item.images = await imageSave(item, edit, image);\n  const form = new FormData();\n  item.images.new.forEach(img => form.append(\"image\", img));\n  console.log(\"ITEM\", item);\n\n  if (edit) {\n    item._id = edit._id;\n    const response = await base.edit(item);\n    if (!response.ok) throw toast.error(\"Error occured on saving!\");\n    return response.data;\n  }\n\n  const response = await base.add(item);\n  if (!response.ok) throw toast.error(response.data);\n  return response.data;\n};\n\nconst imageSave = async (item, edit, images) => {\n  if (!(images.length > 0)) return [];\n  const result = {\n    old: [],\n    new: []\n  };\n  images.forEach(img => {\n    typeof img === \"string\" ? result.old.push(img) : result.new.push(img);\n  });\n  return result;\n};\n\nconst checkPrice = async price => {\n  try {\n    if (price) {\n      price = price.trim();\n      price = +parseFloat(price).toFixed(2);\n    } else {\n      price = 0;\n    }\n  } catch (e) {}\n\n  return price;\n};\n\nconst uploadImage = image => {\n  const form = new FormData();\n  image.forEach(img => form.append(\"image\", img));\n  return imagesBase.add(form);\n};\n\nexport { noticeSave, productSave };","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/methods/save.js"],"names":["toast","imagesBase","noticeBase","productBase","noticeSave","item","edit","image","save","productSave","price","checkPrice","base","images","imageSave","form","FormData","new","forEach","img","append","console","log","_id","response","ok","error","data","add","length","result","old","push","trim","parseFloat","toFixed","e","uploadImage"],"mappings":"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","sourcesContent":["import { toast } from \"react-toastify\";\r\n\r\nimport * as imagesBase from \"../services/images\";\r\nimport * as noticeBase from \"../services/notices\";\r\nimport * as productBase from \"../services/products\";\r\n\r\nconst noticeSave = async (item, edit, image) => {\r\n    return await save(item, edit, image, noticeBase);\r\n};\r\n\r\nconst productSave = async (item, edit, image) => {\r\n    item.price = await checkPrice(item.price);\r\n    return await save(item, edit, image, productBase);\r\n};\r\n\r\nconst save = async (item, edit, image, base) => {\r\n    item.images = await imageSave(item, edit, image);\r\n\r\n    const form = new FormData();\r\n\r\n    item.images.new.forEach((img) => form.append(\"image\", img));\r\n\r\n    console.log(\"ITEM\", item);\r\n\r\n    if (edit) {\r\n        item._id = edit._id;\r\n        const response = await base.edit(item);\r\n        if (!response.ok) throw toast.error(\"Error occured on saving!\");\r\n        return response.data;\r\n    }\r\n\r\n    const response = await base.add(item);\r\n    if (!response.ok) throw toast.error(response.data);\r\n    return response.data;\r\n};\r\n\r\nconst imageSave = async (item, edit, images) => {\r\n    if (!(images.length > 0)) return [];\r\n\r\n    const result = { old: [], new: [] };\r\n\r\n    images.forEach((img) => {\r\n        typeof img === \"string\" ? result.old.push(img) : result.new.push(img);\r\n    });\r\n\r\n    return result;\r\n};\r\n\r\nconst checkPrice = async (price) => {\r\n    try {\r\n        if (price) {\r\n            price = price.trim();\r\n            price = +parseFloat(price).toFixed(2);\r\n        } else {\r\n            price = 0;\r\n        }\r\n    } catch (e) {}\r\n    return price;\r\n};\r\n\r\nconst uploadImage = (image) => {\r\n    const form = new FormData();\r\n    image.forEach((img) => form.append(\"image\", img));\r\n    return imagesBase.add(form);\r\n};\r\n\r\nexport { noticeSave, productSave };\r\n"]},"metadata":{},"sourceType":"module"}