{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\app\\\\components\\\\login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport { RiUserAddLine } from \"react-icons/ri\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { apiClient } from \"../../api/client\";\nimport { pick } from \"lodash\";\nimport * as authBase from \"../../api/auth\";\nimport AddInputBox from \"./common/form/addInputBox.jsx\";\nimport AddSubmitButton from \"./common/form/submitButton.jsx\";\nimport Buttons from \"./common/buttons.jsx\";\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().trim().required(\"Podaj email.\").label(\"Email\").email(),\n  password: Yup.string().min(5).max(6000)\n});\n\nconst Login = (props, {\n  setUser\n}) => {\n  _s();\n\n  useEffect(() => {\n    props.title(\"login\");\n  }, []);\n\n  const handleLogin = async user => {\n    user = pick(user, [\"email\", \"password\"]);\n    const response = await authBase.login(user);\n\n    if (response.ok) {\n      localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\n      apiClient.setHeader(\"x-auth-token\", token); // setToken(response.headers[\"x-auth-token\"]);\n\n      props.history.push(\"/\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      onSubmit: values => handleLogin(values),\n      validationSchema: validationSchema,\n      children: ({}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login__buttons\",\n            children: [/*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/register\",\n              children: /*#__PURE__*/_jsxDEV(RiUserAddLine, {\n                className: \"specialBtn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n              buttons: [{\n                name: /*#__PURE__*/_jsxDEV(RiUserAddLine, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 51\n                }, this),\n                ref: \"/register\"\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(AddInputBox // className=\"addBoard__title\"\n            , {\n              name: \"email\",\n              label: \"Email\",\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(AddInputBox // className=\"addBoard__title\"\n            , {\n              label: \"Password\",\n              name: \"password\",\n              type: \"password\",\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(AddSubmitButton, {\n            className: \"actionBtn\",\n            title: \"LOGIN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/app/components/login.jsx"],"names":["React","useEffect","NavLink","Redirect","Route","Switch","RiUserAddLine","Formik","Yup","apiClient","pick","authBase","AddInputBox","AddSubmitButton","Buttons","validationSchema","object","shape","email","string","trim","required","label","password","min","max","Login","props","setUser","title","handleLogin","user","response","login","ok","localStorage","setItem","headers","setHeader","token","history","push","values","name","ref"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { Redirect, Route, Switch } from \"react-router\";\r\n\r\nimport { RiUserAddLine } from \"react-icons/ri\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { apiClient } from \"../../api/client\";\r\n\r\nimport { pick } from \"lodash\";\r\n\r\nimport * as authBase from \"../../api/auth\";\r\n\r\nimport AddInputBox from \"./common/form/addInputBox.jsx\";\r\nimport AddSubmitButton from \"./common/form/submitButton.jsx\";\r\nimport Buttons from \"./common/buttons.jsx\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    email: Yup.string().trim().required(\"Podaj email.\").label(\"Email\").email(),\r\n    password: Yup.string().min(5).max(6000),\r\n});\r\n\r\nconst Login = (props, { setUser }) => {\r\n    useEffect(() => {\r\n        props.title(\"login\");\r\n    }, []);\r\n\r\n    const handleLogin = async (user) => {\r\n        user = pick(user, [\"email\", \"password\"]);\r\n        const response = await authBase.login(user);\r\n\r\n        if (response.ok) {\r\n            localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\r\n            apiClient.setHeader(\"x-auth-token\", token);\r\n            // setToken(response.headers[\"x-auth-token\"]);\r\n            props.history.push(\"/\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            <Formik\r\n                initialValues={{\r\n                    email: \"\",\r\n                    password: \"\",\r\n                }}\r\n                onSubmit={(values) => handleLogin(values)}\r\n                validationSchema={validationSchema}\r\n            >\r\n                {({}) => (\r\n                    <>\r\n                        <div className=\"login\">\r\n                            <div className=\"login__buttons\">\r\n                                <NavLink to=\"/register\">\r\n                                    <RiUserAddLine className=\"specialBtn\" />\r\n                                </NavLink>\r\n\r\n                                <Buttons\r\n                                    buttons={[\r\n                                        {\r\n                                            name: <RiUserAddLine />,\r\n                                            ref: \"/register\",\r\n                                        },\r\n                                    ]}\r\n                                />\r\n\r\n                                <AddInputBox\r\n                                    // className=\"addBoard__title\"\r\n                                    name=\"email\"\r\n                                    label=\"Email\"\r\n                                    placeholder=\"Email\"\r\n                                />\r\n\r\n                                <AddInputBox\r\n                                    // className=\"addBoard__title\"\r\n                                    label=\"Password\"\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                />\r\n                            </div>\r\n\r\n                            <AddSubmitButton\r\n                                className=\"actionBtn\"\r\n                                title=\"LOGIN\"\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}