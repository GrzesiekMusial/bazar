{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\app\\\\components\\\\common\\\\form\\\\imageInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ImageSlider from \"../imageSlider\";\nimport { BiImageAdd } from \"react-icons/bi\";\nimport * as imagesBase from \"../../../../api/images\";\n\nconst ImageInput = ({\n  handleChange,\n  img\n}) => {\n  _s();\n\n  const [preview, setPreview] = useState(img);\n\n  const imageArr = arr => {\n    const result = [];\n\n    for (let key in arr) {\n      if (arr[key][\"lastModified\"]) {\n        result.push(arr[key]);\n      }\n    }\n\n    handleChange(result);\n  };\n\n  const checkSrc = data => {\n    const result = typeof data == String ? imagesBase.get(data) : URL.createObjectURL(img);\n    return result;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"imageInput\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imageInput__images\",\n      children: preview && preview.map(prev => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: checkSrc(prev)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 43\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imageInput__label\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"asd\",\n        onClick: () => document.getElementById(\"asd\").setAttribute(\"checked\", true),\n        children: /*#__PURE__*/_jsxDEV(BiImageAdd, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"imageInput--input\",\n      checked: false,\n      id: \"asd\",\n      type: \"file\",\n      name: \"images\",\n      multiple: true,\n      onChange: e => imageArr(e.target.files)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ImageInput, \"OVf5mXMR2v7a64hqlE+q9s1PEyI=\");\n\n_c = ImageInput;\nexport default ImageInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageInput\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/app/components/common/form/imageInput.jsx"],"names":["React","useState","useEffect","ImageSlider","BiImageAdd","imagesBase","ImageInput","handleChange","img","preview","setPreview","imageArr","arr","result","key","push","checkSrc","data","String","get","URL","createObjectURL","map","prev","document","getElementById","setAttribute","e","target","files"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,SAASC,UAAT,QAA2B,gBAA3B;AAEA,OAAO,KAAKC,UAAZ,MAA4B,wBAA5B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAA2B;AAAA;;AAC1C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAACO,GAAD,CAAtC;;AAEA,QAAMG,QAAQ,GAAIC,GAAD,IAAS;AACtB,UAAMC,MAAM,GAAG,EAAf;;AAEA,SAAK,IAAIC,GAAT,IAAgBF,GAAhB,EAAqB;AACjB,UAAIA,GAAG,CAACE,GAAD,CAAH,CAAS,cAAT,CAAJ,EAA8B;AAC1BD,QAAAA,MAAM,CAACE,IAAP,CAAYH,GAAG,CAACE,GAAD,CAAf;AACH;AACJ;;AAEDP,IAAAA,YAAY,CAACM,MAAD,CAAZ;AACH,GAVD;;AAYA,QAAMG,QAAQ,GAAIC,IAAD,IAAU;AACvB,UAAMJ,MAAM,GACR,OAAOI,IAAP,IAAeC,MAAf,GACMb,UAAU,CAACc,GAAX,CAAeF,IAAf,CADN,GAEMG,GAAG,CAACC,eAAJ,CAAoBb,GAApB,CAHV;AAIA,WAAOK,MAAP;AACH,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,gBACKJ,OAAO,IACJA,OAAO,CAACa,GAAR,CAAaC,IAAD,iBAAU;AAAK,QAAA,GAAG,EAAEP,QAAQ,CAACO,IAAD;AAAlB;AAAA;AAAA;AAAA;AAAA,cAAtB;AAFR;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACI;AACI,QAAA,OAAO,EAAC,KADZ;AAEI,QAAA,OAAO,EAAE,MACLC,QAAQ,CACHC,cADL,CACoB,KADpB,EAEKC,YAFL,CAEkB,SAFlB,EAE6B,IAF7B,CAHR;AAAA,+BAQI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ,eAmBI;AACI,MAAA,SAAS,EAAC,mBADd;AAEI,MAAA,OAAO,EAAE,KAFb;AAGI,MAAA,EAAE,EAAC,KAHP;AAII,MAAA,IAAI,EAAC,MAJT;AAKI,MAAA,IAAI,EAAC,QALT;AAMI,MAAA,QAAQ,MANZ;AAOI,MAAA,QAAQ,EAAGC,CAAD,IAAOhB,QAAQ,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV;AAP7B;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CAtDD;;GAAMvB,U;;KAAAA,U;AAwDN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport ImageSlider from \"../imageSlider\";\r\n\r\nimport { BiImageAdd } from \"react-icons/bi\";\r\n\r\nimport * as imagesBase from \"../../../../api/images\";\r\n\r\nconst ImageInput = ({ handleChange, img }) => {\r\n    const [preview, setPreview] = useState(img);\r\n\r\n    const imageArr = (arr) => {\r\n        const result = [];\r\n\r\n        for (let key in arr) {\r\n            if (arr[key][\"lastModified\"]) {\r\n                result.push(arr[key]);\r\n            }\r\n        }\r\n\r\n        handleChange(result);\r\n    };\r\n\r\n    const checkSrc = (data) => {\r\n        const result =\r\n            typeof data == String\r\n                ? imagesBase.get(data)\r\n                : URL.createObjectURL(img);\r\n        return result;\r\n    };\r\n\r\n    return (\r\n        <div className=\"imageInput\">\r\n            <div className=\"imageInput__images\">\r\n                {preview &&\r\n                    preview.map((prev) => <img src={checkSrc(prev)}></img>)}\r\n            </div>\r\n\r\n            <div className=\"imageInput__label\">\r\n                <label\r\n                    htmlFor=\"asd\"\r\n                    onClick={() =>\r\n                        document\r\n                            .getElementById(\"asd\")\r\n                            .setAttribute(\"checked\", true)\r\n                    }\r\n                >\r\n                    <BiImageAdd />\r\n                </label>\r\n            </div>\r\n\r\n            <input\r\n                className=\"imageInput--input\"\r\n                checked={false}\r\n                id=\"asd\"\r\n                type=\"file\"\r\n                name=\"images\"\r\n                multiple\r\n                onChange={(e) => imageArr(e.target.files)}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageInput;\r\n"]},"metadata":{},"sourceType":"module"}