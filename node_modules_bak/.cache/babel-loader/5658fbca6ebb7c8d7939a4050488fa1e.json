{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\app\\\\components\\\\board\\\\addBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport * as noticeBase from \"../../../api/notices\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Formik } from \"formik\";\nimport AddTextBox from \"../common/form/addTextBox\";\nimport AddInputBox from \"../common/form/addInputBox.jsx\";\nimport AddSubmitButton from \"../common/form/submitButton.jsx\";\nimport ImageInput from \"../common/form/imageInput\";\nimport { validationSchema } from \"./models/board\";\nimport { handleSave } from \"../../../methods/save\";\n\nconst AddBoard = props => {\n  _s();\n\n  const [image, setImage] = useState([]);\n  const [edit, setEdit] = useState(null);\n  useEffect(() => {\n    props.title(\"ogłoszenie\");\n    checkEdit();\n  }, []);\n\n  const checkEdit = async () => {\n    if (props.match.params.id) {\n      const response = await noticeBase.notice(props.match.params.id);\n      if (!response.ok) props.history.push(\"/board\");\n      setEdit(response.data);\n      setImage(response.data.images);\n    }\n  };\n\n  const save = async values => {\n    const result = await handleSave(values, edit, image, noticeBase);\n    if (result) props.history.push(\"/board\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addBoard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addBoard__images\",\n          children: /*#__PURE__*/_jsxDEV(ImageInput, {\n            handleChange: setImage,\n            preview: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          enableReinitialize: true,\n          initialValues: edit ? {\n            text: edit.text,\n            title: edit.title\n          } : {\n            text: \"\",\n            title: \"\"\n          },\n          onSubmit: values => save(values),\n          validationSchema: validationSchema,\n          children: ({}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(AddInputBox, {\n              className: \"addBoard__title\",\n              name: \"title\",\n              placeholder: \"Nazwa\",\n              defaultValue: edit ? edit.title : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(AddTextBox, {\n              className: \"addBoard__text\",\n              name: \"text\",\n              placeholder: \"Opis...\",\n              defaultValue: edit ? edit.text : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"addBoard__buttons\",\n              children: /*#__PURE__*/_jsxDEV(AddSubmitButton, {\n                className: \"actionBtn\",\n                title: edit ? \"ZAPISZ\" : \"OPUBLIKUJ\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddBoard, \"IuQ/Mg+awQ76U122wcKnM2HKDp8=\");\n\n_c = AddBoard;\nexport default AddBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBoard\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/app/components/board/addBoard.jsx"],"names":["React","useEffect","useState","noticeBase","ToastContainer","toast","Formik","AddTextBox","AddInputBox","AddSubmitButton","ImageInput","validationSchema","handleSave","AddBoard","props","image","setImage","edit","setEdit","title","checkEdit","match","params","id","response","notice","ok","history","push","data","images","save","values","result","text"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport * as noticeBase from \"../../../api/notices\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { Formik } from \"formik\";\r\n\r\nimport AddTextBox from \"../common/form/addTextBox\";\r\nimport AddInputBox from \"../common/form/addInputBox.jsx\";\r\nimport AddSubmitButton from \"../common/form/submitButton.jsx\";\r\nimport ImageInput from \"../common/form/imageInput\";\r\n\r\nimport { validationSchema } from \"./models/board\";\r\n\r\nimport { handleSave } from \"../../../methods/save\";\r\n\r\nconst AddBoard = (props) => {\r\n    const [image, setImage] = useState([]);\r\n    const [edit, setEdit] = useState(null);\r\n\r\n    useEffect(() => {\r\n        props.title(\"ogłoszenie\");\r\n        checkEdit();\r\n    }, []);\r\n\r\n    const checkEdit = async () => {\r\n        if (props.match.params.id) {\r\n            const response = await noticeBase.notice(props.match.params.id);\r\n            if (!response.ok) props.history.push(\"/board\");\r\n\r\n            setEdit(response.data);\r\n            setImage(response.data.images);\r\n        }\r\n    };\r\n\r\n    const save = async (values) => {\r\n        const result = await handleSave(values, edit, image, noticeBase);\r\n        if (result) props.history.push(\"/board\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            <ToastContainer />\r\n            <div className=\"screen__container\">\r\n                <div className=\"addBoard\">\r\n                    <div className=\"addBoard__images\">\r\n                        <ImageInput handleChange={setImage} preview={image} />\r\n                    </div>\r\n\r\n                    <Formik\r\n                        enableReinitialize={true}\r\n                        initialValues={\r\n                            edit\r\n                                ? {\r\n                                      text: edit.text,\r\n                                      title: edit.title,\r\n                                  }\r\n                                : {\r\n                                      text: \"\",\r\n                                      title: \"\",\r\n                                  }\r\n                        }\r\n                        onSubmit={(values) => save(values)}\r\n                        validationSchema={validationSchema}\r\n                    >\r\n                        {({}) => (\r\n                            <>\r\n                                <AddInputBox\r\n                                    className=\"addBoard__title\"\r\n                                    name=\"title\"\r\n                                    placeholder=\"Nazwa\"\r\n                                    defaultValue={edit ? edit.title : null}\r\n                                />\r\n                                <AddTextBox\r\n                                    className=\"addBoard__text\"\r\n                                    name=\"text\"\r\n                                    placeholder=\"Opis...\"\r\n                                    defaultValue={edit ? edit.text : null}\r\n                                />\r\n                                <div className=\"addBoard__buttons\">\r\n                                    <AddSubmitButton\r\n                                        className=\"actionBtn\"\r\n                                        title={edit ? \"ZAPISZ\" : \"OPUBLIKUJ\"}\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddBoard;\r\n"]},"metadata":{},"sourceType":"module"}