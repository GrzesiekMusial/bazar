{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\app\\\\components\\\\user\\\\login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport config from \"../../config/config.json\";\nimport * as auth from \"../../../services/auth\";\nimport * as base from \"../../../methods/data\";\nimport LoginForm from \"./forms/loginForm\";\nimport Post from \"./../board/post\";\nimport Card from \"./../shop/card\";\nimport ButtonBack from \"./../common/form/buttonBack\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Login = props => {\n  _s();\n\n  const {\n    user,\n    title,\n    location,\n    history,\n    match\n  } = props;\n  const [posts, setPosts] = useState(null);\n  const [sell, setSell] = useState(null);\n  const [authorData, setAuthorData] = useState(null);\n\n  function redirect() {\n    window.location = location.state ? location.state.from.pathname : \"/user\";\n  }\n\n  useEffect(() => {\n    console.log(match.params);\n    if (!posts && !sell) return;\n    const data = posts ? posts : sell;\n    console.log(data);\n    const result = data.filter(card => card.author && card.author._id == user._id);\n    console.log(result);\n    setAuthorData(result);\n    console.log(match.params);\n  }, [posts, sell]);\n  useEffect(() => {\n    title(user ? config.headers.user : config.headers.login);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: [posts && /*#__PURE__*/_jsxDEV(Post, {\n      data: authorData,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }, this), sell && /*#__PURE__*/_jsxDEV(Card, {\n      data: authorData,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 22\n    }, this), (posts || sell) && /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => {\n        setPosts(null);\n        setSell(null);\n        setAuthorData(null);\n      },\n      children: /*#__PURE__*/_jsxDEV(ButtonBack, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), !authorData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: user && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: config.info.loggedAs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: user.login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(NavLink, {\n            to: {\n              pathname: \"/user/sell\",\n              return: location.pathname\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"actionBtn\",\n              children: config.user.sell\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"actionBtn\",\n            onClick: async () => setPosts(await base.getNotices()),\n            children: config.user.posts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"actionBtn\",\n          onClick: () => auth.logout(),\n          children: config.actions.logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) || !user && /*#__PURE__*/_jsxDEV(LoginForm, {\n        redirect: redirect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 35\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"DH8bAuzhdX+GRT8zViqPcQHJAgA=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/app/components/user/login.jsx"],"names":["React","useEffect","useState","config","auth","base","LoginForm","Post","Card","ButtonBack","NavLink","Login","props","user","title","location","history","match","posts","setPosts","sell","setSell","authorData","setAuthorData","redirect","window","state","from","pathname","console","log","params","data","result","filter","card","author","_id","headers","login","info","loggedAs","return","getNotices","logout","actions"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport config from \"../../config/config.json\";\r\n\r\nimport * as auth from \"../../../services/auth\";\r\nimport * as base from \"../../../methods/data\";\r\n\r\nimport LoginForm from \"./forms/loginForm\";\r\nimport Post from \"./../board/post\";\r\nimport Card from \"./../shop/card\";\r\nimport ButtonBack from \"./../common/form/buttonBack\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n    const { user, title, location, history, match } = props;\r\n    const [posts, setPosts] = useState(null);\r\n    const [sell, setSell] = useState(null);\r\n    const [authorData, setAuthorData] = useState(null);\r\n\r\n    function redirect() {\r\n        window.location = location.state\r\n            ? location.state.from.pathname\r\n            : \"/user\";\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(match.params);\r\n\r\n        if (!posts && !sell) return;\r\n        const data = posts ? posts : sell;\r\n        console.log(data);\r\n        const result = data.filter(\r\n            (card) => card.author && card.author._id == user._id\r\n        );\r\n        console.log(result);\r\n        setAuthorData(result);\r\n        console.log(match.params);\r\n    }, [posts, sell]);\r\n\r\n    useEffect(() => {\r\n        title(user ? config.headers.user : config.headers.login);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            {posts && <Post data={authorData} {...props} />}\r\n            {sell && <Card data={authorData} {...props} />}\r\n            {(posts || sell) && (\r\n                <span\r\n                    onClick={() => {\r\n                        setPosts(null);\r\n                        setSell(null);\r\n                        setAuthorData(null);\r\n                    }}\r\n                >\r\n                    <ButtonBack />\r\n                </span>\r\n            )}\r\n\r\n            {!authorData && (\r\n                <div className=\"login\">\r\n                    {(user && (\r\n                        <>\r\n                            <div className=\"login__info\">\r\n                                <div>{config.info.loggedAs}</div>\r\n                                <div>{user.login}</div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <NavLink\r\n                                    to={{\r\n                                        pathname: \"/user/sell\",\r\n                                        return: location.pathname,\r\n                                    }}\r\n                                >\r\n                                    <button className=\"actionBtn\">\r\n                                        {config.user.sell}\r\n                                    </button>\r\n                                </NavLink>\r\n\r\n                                <button\r\n                                    className=\"actionBtn\"\r\n                                    onClick={async () =>\r\n                                        setPosts(await base.getNotices())\r\n                                    }\r\n                                >\r\n                                    {config.user.posts}\r\n                                </button>\r\n                            </div>\r\n                            <button\r\n                                className=\"actionBtn\"\r\n                                onClick={() => auth.logout()}\r\n                            >\r\n                                {config.actions.logout}\r\n                            </button>\r\n                        </>\r\n                    )) ||\r\n                        (!user && <LoginForm redirect={redirect} />)}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}