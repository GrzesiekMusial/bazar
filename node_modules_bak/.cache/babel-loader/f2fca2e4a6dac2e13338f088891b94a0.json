{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\app\\\\components\\\\shop\\\\addProduct.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Formik } from \"formik\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { validationSchema } from \"./models/product\";\nimport * as Forms from \"../common/form/forms\";\nimport * as base from \"../../../methods/data\";\n\nconst AddProduct = props => {\n  _s();\n\n  const {\n    title,\n    history,\n    match,\n    location\n  } = props;\n  const [image, setImage] = useState([]);\n  const [categories, setCategories] = useState(null);\n  const [edit, setEdit] = useState(null);\n  const wait = false;\n  useEffect(async () => {\n    title(\"sprzedaj\");\n    const cat = await base.getCategories();\n    if (!cat) return history.push(\"/add\");\n    setCategories(cat);\n    if (!match.params.id) return;\n    const prod = await base.getOneProduct(match.params.id, setEdit, setImage);\n    if (!prod) history.push(\"/add\");\n  }, []);\n\n  const handleSave = async values => {\n    wait = true;\n    const result = await base.productSave(values, edit, image);\n    if (result && wait) return history.push(`/bazar/product/${result._id}`);\n  };\n\n  const handleDelete = async id => {\n    const result = image.filter(img => img !== id && img.name !== id);\n    setImage(result);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: categories && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addBoard\",\n        children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addBoard__images\",\n          children: /*#__PURE__*/_jsxDEV(Forms.Image, {\n            handleChange: setImage,\n            preview: image,\n            handleDelete: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          enableReinitialize: true,\n          initialValues: edit ? {\n            text: edit.text,\n            title: edit.title,\n            price: edit.price,\n            category: edit.category._id\n          } : {\n            text: \"\",\n            title: \"\",\n            price: \"\",\n            category: \"5fd8b9b913047e50104c37bd\"\n          },\n          onSubmit: values => handleSave(values, image),\n          validationSchema: validationSchema,\n          children: ({}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Forms.Input, {\n              className: \"addBoard__title\",\n              name: \"title\",\n              placeholder: \"Nazwa\",\n              defaultValue: edit ? edit.title : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Forms.Text, {\n              className: \"addBoard__text\",\n              name: \"text\",\n              placeholder: \"Opis...\",\n              defaultValue: edit ? edit.text : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"addBoard__details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Forms.Input, {\n                  label: \"CENA\",\n                  placeholder: \"cena\",\n                  name: \"price\",\n                  id: \"price\",\n                  className: \"addBoard__details--price\",\n                  defaultValue: edit ? edit.price : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: categories && /*#__PURE__*/_jsxDEV(Forms.Select, {\n                  label: \"KATEGORIA\",\n                  arr: categories,\n                  id: \"category\",\n                  name: \"category\",\n                  className: \"addBoard__details--category\",\n                  defaultValue: edit ? edit.category._id : \"5fd8b9b913047e50104c37bd\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"addBoard__buttons\",\n              children: /*#__PURE__*/_jsxDEV(Forms.Submit, {\n                className: \"actionBtn\",\n                title: edit ? \"ZAPISZ\" : \"OPUBLIKUJ\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddProduct, \"yKgTaGwkhmgT4R9oGrA3E9Rx5cU=\");\n\n_c = AddProduct;\nexport default AddProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/app/components/shop/addProduct.jsx"],"names":["React","useState","useEffect","Formik","ToastContainer","validationSchema","Forms","base","AddProduct","props","title","history","match","location","image","setImage","categories","setCategories","edit","setEdit","wait","cat","getCategories","push","params","id","prod","getOneProduct","handleSave","values","result","productSave","_id","handleDelete","filter","img","name","text","price","category"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAO,uCAAP;AAEA,SAASC,gBAAT,QAAiC,kBAAjC;AAEA,OAAO,KAAKC,KAAZ,MAAuB,sBAAvB;AACA,OAAO,KAAKC,IAAZ,MAAsB,uBAAtB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA;AAAzB,MAAsCJ,KAA5C;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAMmB,IAAI,GAAG,KAAb;AAEAlB,EAAAA,SAAS,CAAC,YAAY;AAClBQ,IAAAA,KAAK,CAAC,UAAD,CAAL;AACA,UAAMW,GAAG,GAAG,MAAMd,IAAI,CAACe,aAAL,EAAlB;AACA,QAAI,CAACD,GAAL,EAAU,OAAOV,OAAO,CAACY,IAAR,CAAa,MAAb,CAAP;AACVN,IAAAA,aAAa,CAACI,GAAD,CAAb;AAEA,QAAI,CAACT,KAAK,CAACY,MAAN,CAAaC,EAAlB,EAAsB;AAEtB,UAAMC,IAAI,GAAG,MAAMnB,IAAI,CAACoB,aAAL,CACff,KAAK,CAACY,MAAN,CAAaC,EADE,EAEfN,OAFe,EAGfJ,QAHe,CAAnB;AAKA,QAAI,CAACW,IAAL,EAAWf,OAAO,CAACY,IAAR,CAAa,MAAb;AACd,GAdQ,EAcN,EAdM,CAAT;;AAgBA,QAAMK,UAAU,GAAG,MAAOC,MAAP,IAAkB;AACjCT,IAAAA,IAAI,GAAG,IAAP;AACA,UAAMU,MAAM,GAAG,MAAMvB,IAAI,CAACwB,WAAL,CAAiBF,MAAjB,EAAyBX,IAAzB,EAA+BJ,KAA/B,CAArB;AACA,QAAIgB,MAAM,IAAIV,IAAd,EAAoB,OAAOT,OAAO,CAACY,IAAR,CAAc,kBAAiBO,MAAM,CAACE,GAAI,EAA1C,CAAP;AACvB,GAJD;;AAMA,QAAMC,YAAY,GAAG,MAAOR,EAAP,IAAc;AAC/B,UAAMK,MAAM,GAAGhB,KAAK,CAACoB,MAAN,CAAcC,GAAD,IAASA,GAAG,KAAKV,EAAR,IAAcU,GAAG,CAACC,IAAJ,KAAaX,EAAjD,CAAf;AACAV,IAAAA,QAAQ,CAACe,MAAD,CAAR;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,cACKd,UAAU,iBACP;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI,QAAC,KAAD,CAAO,KAAP;AACI,YAAA,YAAY,EAAED,QADlB;AAEI,YAAA,OAAO,EAAED,KAFb;AAGI,YAAA,YAAY,EAAEmB;AAHlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAWI,QAAC,MAAD;AACI,UAAA,kBAAkB,EAAE,IADxB;AAEI,UAAA,aAAa,EACTf,IAAI,GACE;AACImB,YAAAA,IAAI,EAAEnB,IAAI,CAACmB,IADf;AAEI3B,YAAAA,KAAK,EAAEQ,IAAI,CAACR,KAFhB;AAGI4B,YAAAA,KAAK,EAAEpB,IAAI,CAACoB,KAHhB;AAIIC,YAAAA,QAAQ,EAAErB,IAAI,CAACqB,QAAL,CAAcP;AAJ5B,WADF,GAOE;AACIK,YAAAA,IAAI,EAAE,EADV;AAEI3B,YAAAA,KAAK,EAAE,EAFX;AAGI4B,YAAAA,KAAK,EAAE,EAHX;AAIIC,YAAAA,QAAQ,EAAE;AAJd,WAVd;AAiBI,UAAA,QAAQ,EAAGV,MAAD,IAAYD,UAAU,CAACC,MAAD,EAASf,KAAT,CAjBpC;AAkBI,UAAA,gBAAgB,EAAET,gBAlBtB;AAAA,oBAoBK,CAAC,EAAD,kBACG;AAAA,oCACI,QAAC,KAAD,CAAO,KAAP;AACI,cAAA,SAAS,EAAC,iBADd;AAEI,cAAA,IAAI,EAAC,OAFT;AAGI,cAAA,WAAW,EAAC,OAHhB;AAII,cAAA,YAAY,EAAEa,IAAI,GAAGA,IAAI,CAACR,KAAR,GAAgB;AAJtC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAQI,QAAC,KAAD,CAAO,IAAP;AACI,cAAA,SAAS,EAAC,gBADd;AAEI,cAAA,IAAI,EAAC,MAFT;AAGI,cAAA,WAAW,EAAC,SAHhB;AAII,cAAA,YAAY,EAAEQ,IAAI,GAAGA,IAAI,CAACmB,IAAR,GAAe;AAJrC;AAAA;AAAA;AAAA;AAAA,oBARJ,eAeI;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,sCACI;AAAA,uCACI,QAAC,KAAD,CAAO,KAAP;AACI,kBAAA,KAAK,EAAC,MADV;AAEI,kBAAA,WAAW,EAAC,MAFhB;AAGI,kBAAA,IAAI,EAAC,OAHT;AAII,kBAAA,EAAE,EAAC,OAJP;AAKI,kBAAA,SAAS,EAAC,0BALd;AAMI,kBAAA,YAAY,EACRnB,IAAI,GAAGA,IAAI,CAACoB,KAAR,GAAgB;AAP5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAcI;AAAA,0BACKtB,UAAU,iBACP,QAAC,KAAD,CAAO,MAAP;AACI,kBAAA,KAAK,EAAC,WADV;AAEI,kBAAA,GAAG,EAAEA,UAFT;AAGI,kBAAA,EAAE,EAAC,UAHP;AAII,kBAAA,IAAI,EAAC,UAJT;AAKI,kBAAA,SAAS,EAAC,6BALd;AAMI,kBAAA,YAAY,EACRE,IAAI,GACEA,IAAI,CAACqB,QAAL,CAAcP,GADhB,GAEE;AATd;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,sBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfJ,eA+CI;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,qCACI,QAAC,KAAD,CAAO,MAAP;AACI,gBAAA,SAAS,EAAC,WADd;AAEI,gBAAA,KAAK,EACDd,IAAI,GAAG,QAAH,GAAc;AAH1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBA/CJ;AAAA;AArBR;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAmGH,CArID;;GAAMV,U;;KAAAA,U;AAuIN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { validationSchema } from \"./models/product\";\r\n\r\nimport * as Forms from \"../common/form/forms\";\r\nimport * as base from \"../../../methods/data\";\r\n\r\nconst AddProduct = (props) => {\r\n    const { title, history, match, location } = props;\r\n    const [image, setImage] = useState([]);\r\n    const [categories, setCategories] = useState(null);\r\n    const [edit, setEdit] = useState(null);\r\n    const wait = false;\r\n\r\n    useEffect(async () => {\r\n        title(\"sprzedaj\");\r\n        const cat = await base.getCategories();\r\n        if (!cat) return history.push(\"/add\");\r\n        setCategories(cat);\r\n\r\n        if (!match.params.id) return;\r\n\r\n        const prod = await base.getOneProduct(\r\n            match.params.id,\r\n            setEdit,\r\n            setImage\r\n        );\r\n        if (!prod) history.push(\"/add\");\r\n    }, []);\r\n\r\n    const handleSave = async (values) => {\r\n        wait = true;\r\n        const result = await base.productSave(values, edit, image);\r\n        if (result && wait) return history.push(`/bazar/product/${result._id}`);\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        const result = image.filter((img) => img !== id && img.name !== id);\r\n        setImage(result);\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            {categories && (\r\n                <div className=\"screen__container\">\r\n                    <div className=\"addBoard\">\r\n                        <ToastContainer />\r\n\r\n                        <div className=\"addBoard__images\">\r\n                            <Forms.Image\r\n                                handleChange={setImage}\r\n                                preview={image}\r\n                                handleDelete={handleDelete}\r\n                            />\r\n                        </div>\r\n\r\n                        <Formik\r\n                            enableReinitialize={true}\r\n                            initialValues={\r\n                                edit\r\n                                    ? {\r\n                                          text: edit.text,\r\n                                          title: edit.title,\r\n                                          price: edit.price,\r\n                                          category: edit.category._id,\r\n                                      }\r\n                                    : {\r\n                                          text: \"\",\r\n                                          title: \"\",\r\n                                          price: \"\",\r\n                                          category: \"5fd8b9b913047e50104c37bd\",\r\n                                      }\r\n                            }\r\n                            onSubmit={(values) => handleSave(values, image)}\r\n                            validationSchema={validationSchema}\r\n                        >\r\n                            {({}) => (\r\n                                <>\r\n                                    <Forms.Input\r\n                                        className=\"addBoard__title\"\r\n                                        name=\"title\"\r\n                                        placeholder=\"Nazwa\"\r\n                                        defaultValue={edit ? edit.title : null}\r\n                                    />\r\n\r\n                                    <Forms.Text\r\n                                        className=\"addBoard__text\"\r\n                                        name=\"text\"\r\n                                        placeholder=\"Opis...\"\r\n                                        defaultValue={edit ? edit.text : null}\r\n                                    />\r\n\r\n                                    <div className=\"addBoard__details\">\r\n                                        <div>\r\n                                            <Forms.Input\r\n                                                label=\"CENA\"\r\n                                                placeholder=\"cena\"\r\n                                                name=\"price\"\r\n                                                id=\"price\"\r\n                                                className=\"addBoard__details--price\"\r\n                                                defaultValue={\r\n                                                    edit ? edit.price : null\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div>\r\n                                            {categories && (\r\n                                                <Forms.Select\r\n                                                    label=\"KATEGORIA\"\r\n                                                    arr={categories}\r\n                                                    id=\"category\"\r\n                                                    name=\"category\"\r\n                                                    className=\"addBoard__details--category\"\r\n                                                    defaultValue={\r\n                                                        edit\r\n                                                            ? edit.category._id\r\n                                                            : \"5fd8b9b913047e50104c37bd\"\r\n                                                    }\r\n                                                />\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"addBoard__buttons\">\r\n                                        <Forms.Submit\r\n                                            className=\"actionBtn\"\r\n                                            title={\r\n                                                edit ? \"ZAPISZ\" : \"OPUBLIKUJ\"\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                        </Formik>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddProduct;\r\n"]},"metadata":{},"sourceType":"module"}