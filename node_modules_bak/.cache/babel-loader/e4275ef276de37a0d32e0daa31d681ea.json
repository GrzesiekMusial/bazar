{"ast":null,"code":"import { apiClient as client } from \"./client\";\nconst endpoint = \"/products\";\nconst config = {\n  // onDownloadProgress(progressEvent) {\n  //     console.log({ progressEvent });\n  // },\n  // onUploadProgress(progressEvent) {\n  //     console.log({ progressEvent });\n  // },\n  onUploadProgress: function (progressEvent) {\n    // Do whatever you want with the native progress event\n    // console.log('progressEvent', progressEvent);\n    var progress = Math.round(progressEvent.loaded * 100.0 / progressEvent.total);\n    document.getElementById(\"progress\").style.width = progress + \"%\";\n    console.log(`onUploadProgress progressEvent.loaded: ${progressEvent.loaded},\n      progressEvent.total: ${progressEvent.total}`);\n  }\n};\n\nconst get = async () => await client.get(endpoint);\n\nconst getOne = async id => await client.get(`${endpoint}/${id}`);\n\nconst add = body => client.post(endpoint, body, config);\n\nconst edit = async (id, body) => await client.put(`${endpoint}/${id}`, body);\n\nconst remove = async body => await client.delete(endpoint + \"/\" + body);\n\nexport { get, add, edit, remove, getOne };","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/services/products.js"],"names":["apiClient","client","endpoint","config","onUploadProgress","progressEvent","progress","Math","round","loaded","total","document","getElementById","style","width","console","log","get","getOne","id","add","body","post","edit","put","remove","delete"],"mappings":"AAAA,SAASA,SAAS,IAAIC,MAAtB,QAAoC,UAApC;AAEA,MAAMC,QAAQ,GAAG,WAAjB;AAEA,MAAMC,MAAM,GAAG;AACX;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,gBAAgB,EAAE,UAAUC,aAAV,EAAyB;AACvC;AACA;AACA,QAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CACVH,aAAa,CAACI,MAAd,GAAuB,KAAxB,GAAiCJ,aAAa,CAACK,KADpC,CAAf;AAGAC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAApC,CAA0CC,KAA1C,GAAkDR,QAAQ,GAAG,GAA7D;AAEAS,IAAAA,OAAO,CAACC,GAAR,CAAa,0CAAyCX,aAAa,CAACI,MAAO;AACnF,6BAA6BJ,aAAa,CAACK,KAAM,EADzC;AAEH;AAlBU,CAAf;;AAqBA,MAAMO,GAAG,GAAG,YAAY,MAAMhB,MAAM,CAACgB,GAAP,CAAWf,QAAX,CAA9B;;AAEA,MAAMgB,MAAM,GAAG,MAAOC,EAAP,IAAc,MAAMlB,MAAM,CAACgB,GAAP,CAAY,GAAEf,QAAS,IAAGiB,EAAG,EAA7B,CAAnC;;AAEA,MAAMC,GAAG,GAAIC,IAAD,IAAUpB,MAAM,CAACqB,IAAP,CAAYpB,QAAZ,EAAsBmB,IAAtB,EAA4BlB,MAA5B,CAAtB;;AAEA,MAAMoB,IAAI,GAAG,OAAOJ,EAAP,EAAWE,IAAX,KAAoB,MAAMpB,MAAM,CAACuB,GAAP,CAAY,GAAEtB,QAAS,IAAGiB,EAAG,EAA7B,EAAgCE,IAAhC,CAAvC;;AAEA,MAAMI,MAAM,GAAG,MAAOJ,IAAP,IAAgB,MAAMpB,MAAM,CAACyB,MAAP,CAAcxB,QAAQ,GAAG,GAAX,GAAiBmB,IAA/B,CAArC;;AAEA,SAASJ,GAAT,EAAcG,GAAd,EAAmBG,IAAnB,EAAyBE,MAAzB,EAAiCP,MAAjC","sourcesContent":["import { apiClient as client } from \"./client\";\r\n\r\nconst endpoint = \"/products\";\r\n\r\nconst config = {\r\n    // onDownloadProgress(progressEvent) {\r\n    //     console.log({ progressEvent });\r\n    // },\r\n    // onUploadProgress(progressEvent) {\r\n    //     console.log({ progressEvent });\r\n    // },\r\n\r\n    onUploadProgress: function (progressEvent) {\r\n        // Do whatever you want with the native progress event\r\n        // console.log('progressEvent', progressEvent);\r\n        var progress = Math.round(\r\n            (progressEvent.loaded * 100.0) / progressEvent.total\r\n        );\r\n        document.getElementById(\"progress\").style.width = progress + \"%\";\r\n\r\n        console.log(`onUploadProgress progressEvent.loaded: ${progressEvent.loaded},\r\n      progressEvent.total: ${progressEvent.total}`);\r\n    },\r\n};\r\n\r\nconst get = async () => await client.get(endpoint);\r\n\r\nconst getOne = async (id) => await client.get(`${endpoint}/${id}`);\r\n\r\nconst add = (body) => client.post(endpoint, body, config);\r\n\r\nconst edit = async (id, body) => await client.put(`${endpoint}/${id}`, body);\r\n\r\nconst remove = async (body) => await client.delete(endpoint + \"/\" + body);\r\n\r\nexport { get, add, edit, remove, getOne };\r\n"]},"metadata":{},"sourceType":"module"}