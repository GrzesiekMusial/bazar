{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\app\\\\components\\\\login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport { RiUserAddLine } from \"react-icons/ri\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { apiClient } from \"../../api/client\";\nimport { pick } from \"lodash\";\nimport * as auth from \"../../api/auth\";\nimport AddInputBox from \"./common/form/addInputBox.jsx\";\nimport AddSubmitButton from \"./common/form/submitButton.jsx\";\nimport Buttons from \"./common/buttons.jsx\";\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().trim().required(\"Podaj email.\").label(\"Email\").email(),\n  password: Yup.string().min(5).max(6000)\n});\n\nconst Login = props => {\n  _s();\n\n  useEffect(() => {\n    props.title(props.user ? props.user : \"login\");\n  }, []);\n\n  const handleLogin = async user => {\n    user = pick(user, [\"email\", \"password\"]);\n    const response = await auth.login(user);\n\n    if (response.ok) {\n      localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\n      apiClient.setHeader(\"x-auth-token\", response.headers[\"x-auth-token\"]);\n      props.setUser(\"user\");\n      props.history.push(\"/\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [props.user && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Zalogowany jako:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: props.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"actionBtn\",\n          children: \"WYLOGUJ\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), !props.user && /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: \"\",\n          password: \"\"\n        },\n        onSubmit: values => handleLogin(values),\n        validationSchema: validationSchema,\n        children: ({}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login__buttons\",\n            children: [/*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/register\",\n              children: /*#__PURE__*/_jsxDEV(RiUserAddLine, {\n                className: \"specialBtn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n              buttons: [{\n                name: /*#__PURE__*/_jsxDEV(RiUserAddLine, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 55\n                }, this),\n                ref: \"/register\"\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(AddInputBox // className=\"addBoard__title\"\n            , {\n              name: \"email\",\n              label: \"Email\",\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(AddInputBox // className=\"addBoard__title\"\n            , {\n              label: \"Password\",\n              name: \"password\",\n              type: \"password\",\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(AddSubmitButton, {\n            className: \"actionBtn\",\n            title: \"ZALOGUJ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/app/components/login.jsx"],"names":["React","useEffect","NavLink","Redirect","Route","Switch","RiUserAddLine","Formik","Yup","apiClient","pick","auth","AddInputBox","AddSubmitButton","Buttons","validationSchema","object","shape","email","string","trim","required","label","password","min","max","Login","props","title","user","handleLogin","response","login","ok","localStorage","setItem","headers","setHeader","setUser","history","push","values","name","ref"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { Redirect, Route, Switch } from \"react-router\";\r\n\r\nimport { RiUserAddLine } from \"react-icons/ri\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { apiClient } from \"../../api/client\";\r\n\r\nimport { pick } from \"lodash\";\r\n\r\nimport * as auth from \"../../api/auth\";\r\n\r\nimport AddInputBox from \"./common/form/addInputBox.jsx\";\r\nimport AddSubmitButton from \"./common/form/submitButton.jsx\";\r\nimport Buttons from \"./common/buttons.jsx\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    email: Yup.string().trim().required(\"Podaj email.\").label(\"Email\").email(),\r\n    password: Yup.string().min(5).max(6000),\r\n});\r\n\r\nconst Login = (props) => {\r\n    useEffect(() => {\r\n        props.title(props.user ? props.user : \"login\");\r\n    }, []);\r\n\r\n    const handleLogin = async (user) => {\r\n        user = pick(user, [\"email\", \"password\"]);\r\n        const response = await auth.login(user);\r\n\r\n        if (response.ok) {\r\n            localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\r\n            apiClient.setHeader(\r\n                \"x-auth-token\",\r\n                response.headers[\"x-auth-token\"]\r\n            );\r\n            props.setUser(\"user\");\r\n            props.history.push(\"/\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            <div className=\"login\">\r\n                {props.user && (\r\n                    <>\r\n                        <div className=\"login__info\">\r\n                            <div>Zalogowany jako:</div>\r\n                            <div>{props.user}</div>\r\n                        </div>\r\n\r\n                        <button className=\"actionBtn\">WYLOGUJ</button>\r\n                    </>\r\n                )}\r\n\r\n                {!props.user && (\r\n                    <Formik\r\n                        initialValues={{\r\n                            email: \"\",\r\n                            password: \"\",\r\n                        }}\r\n                        onSubmit={(values) => handleLogin(values)}\r\n                        validationSchema={validationSchema}\r\n                    >\r\n                        {({}) => (\r\n                            <>\r\n                                <div className=\"login__buttons\">\r\n                                    <NavLink to=\"/register\">\r\n                                        <RiUserAddLine className=\"specialBtn\" />\r\n                                    </NavLink>\r\n\r\n                                    <Buttons\r\n                                        buttons={[\r\n                                            {\r\n                                                name: <RiUserAddLine />,\r\n                                                ref: \"/register\",\r\n                                            },\r\n                                        ]}\r\n                                    />\r\n\r\n                                    <AddInputBox\r\n                                        // className=\"addBoard__title\"\r\n                                        name=\"email\"\r\n                                        label=\"Email\"\r\n                                        placeholder=\"Email\"\r\n                                    />\r\n\r\n                                    <AddInputBox\r\n                                        // className=\"addBoard__title\"\r\n                                        label=\"Password\"\r\n                                        name=\"password\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <AddSubmitButton\r\n                                    className=\"actionBtn\"\r\n                                    title=\"ZALOGUJ\"\r\n                                />\r\n                            </>\r\n                        )}\r\n                    </Formik>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}