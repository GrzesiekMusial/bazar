{"ast":null,"code":"import \"../api/categories\";\nimport { noticeBase } from \"../api/notices\";\nimport { productBase } from \"../api/products\";\n\nconst getOne = async (id, base, setData, setImage) => {\n  if (id) {\n    const response = await base.getOne(id);\n    if (!response.ok) return false;\n    setData(response.data);\n    if (setImage) setImage(response.data.images);\n  }\n\n  return true;\n};\n\nconst getNotices = async setData => {\n  const notices = await noticeBase.get();\n  if (!Array.isArray(notices.data)) return;\n  setData(notices.data);\n};\n\nconst getProducts = async () => {\n  const products = await prodBase.get();\n  if (!Array.isArray(products.data)) return;\n  setData(products.data);\n  const categories = await catBase.get();\n  if (!Array.isArray(categories.data)) return;\n  setCategories([{\n    _id: \"0\",\n    name: \"wszystkie\"\n  }, ...categories.data]);\n};\n\nexport { getOne };","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/methods/data.js"],"names":["noticeBase","productBase","getOne","id","base","setData","setImage","response","ok","data","images","getNotices","notices","get","Array","isArray","getProducts","products","prodBase","categories","catBase","setCategories","_id","name"],"mappings":"AAAA,OAAe,mBAAf;AACA,SAASA,UAAT,QAA2B,gBAA3B;AACA,SAASC,WAAT,QAA4B,iBAA5B;;AAEA,MAAMC,MAAM,GAAG,OAAOC,EAAP,EAAWC,IAAX,EAAiBC,OAAjB,EAA0BC,QAA1B,KAAuC;AAClD,MAAIH,EAAJ,EAAQ;AACJ,UAAMI,QAAQ,GAAG,MAAMH,IAAI,CAACF,MAAL,CAAYC,EAAZ,CAAvB;AACA,QAAI,CAACI,QAAQ,CAACC,EAAd,EAAkB,OAAO,KAAP;AAClBH,IAAAA,OAAO,CAACE,QAAQ,CAACE,IAAV,CAAP;AACA,QAAIH,QAAJ,EAAcA,QAAQ,CAACC,QAAQ,CAACE,IAAT,CAAcC,MAAf,CAAR;AACjB;;AACD,SAAO,IAAP;AACH,CARD;;AAUA,MAAMC,UAAU,GAAG,MAAON,OAAP,IAAmB;AAClC,QAAMO,OAAO,GAAG,MAAMZ,UAAU,CAACa,GAAX,EAAtB;AACA,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,OAAO,CAACH,IAAtB,CAAL,EAAkC;AAClCJ,EAAAA,OAAO,CAACO,OAAO,CAACH,IAAT,CAAP;AACH,CAJD;;AAMA,MAAMO,WAAW,GAAG,YAAY;AAC5B,QAAMC,QAAQ,GAAG,MAAMC,QAAQ,CAACL,GAAT,EAAvB;AACA,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcE,QAAQ,CAACR,IAAvB,CAAL,EAAmC;AACnCJ,EAAAA,OAAO,CAACY,QAAQ,CAACR,IAAV,CAAP;AAEA,QAAMU,UAAU,GAAG,MAAMC,OAAO,CAACP,GAAR,EAAzB;AACA,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcI,UAAU,CAACV,IAAzB,CAAL,EAAqC;AACrCY,EAAAA,aAAa,CAAC,CAAC;AAAEC,IAAAA,GAAG,EAAE,GAAP;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GAAD,EAAkC,GAAGJ,UAAU,CAACV,IAAhD,CAAD,CAAb;AACH,CARD;;AAUA,SAASP,MAAT","sourcesContent":["import {} from \"../api/categories\";\r\nimport { noticeBase } from \"../api/notices\";\r\nimport { productBase } from \"../api/products\";\r\n\r\nconst getOne = async (id, base, setData, setImage) => {\r\n    if (id) {\r\n        const response = await base.getOne(id);\r\n        if (!response.ok) return false;\r\n        setData(response.data);\r\n        if (setImage) setImage(response.data.images);\r\n    }\r\n    return true;\r\n};\r\n\r\nconst getNotices = async (setData) => {\r\n    const notices = await noticeBase.get();\r\n    if (!Array.isArray(notices.data)) return;\r\n    setData(notices.data);\r\n};\r\n\r\nconst getProducts = async () => {\r\n    const products = await prodBase.get();\r\n    if (!Array.isArray(products.data)) return;\r\n    setData(products.data);\r\n\r\n    const categories = await catBase.get();\r\n    if (!Array.isArray(categories.data)) return;\r\n    setCategories([{ _id: \"0\", name: \"wszystkie\" }, ...categories.data]);\r\n};\r\n\r\nexport { getOne };\r\n"]},"metadata":{},"sourceType":"module"}