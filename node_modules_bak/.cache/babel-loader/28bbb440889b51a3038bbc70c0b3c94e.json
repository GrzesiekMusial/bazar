{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport * as noticeBase from \"../services/notices\";\nimport * as productBase from \"../services/products\";\nimport { cubby } from \"./cubby\";\n\nconst noticeSave = async (item, edit, image) => {\n  return await save(item, edit, image, noticeBase, cubby.notices);\n};\n\nconst productSave = async (item, edit, image) => {\n  item.price = await checkPrice(item.price);\n  return await save(item, edit, image, productBase, cubby.products);\n};\n\nconst save = async (item, edit, image, base, cubby) => {\n  item.images = await checkImage(image);\n  const form = new FormData();\n  console.log(\"IMAGES \", item.images);\n  console.log(item.images, \"IMAGES\");\n  if (item.images.new.length > 0) await item.images.new.forEach(async img => form.append(\"file\", img));\n  form.append(\"title\", item.title);\n  form.append(\"text\", item.text);\n  form.append(\"price\", item.price);\n  form.append(\"category\", item.category);\n  let response;\n\n  if (edit) {\n    if (item.images.old.length > 0) form.append(\"images\", item.images.old);\n    form.append(\"_id\", edit._id);\n    response = await base.edit(edit._id, form);\n  } else {\n    response = await base.add(form);\n  }\n\n  console.log(response.data);\n  if (!response.ok) throw toast.error(\"Error occured on saving!\");\n  if (cubby.data) cubby.data.push(response.data);\n  return response.data;\n};\n\nconst checkImage = async images => {\n  const result = {\n    old: [],\n    new: []\n  };\n  await images.forEach(img => typeof img === \"string\" ? result.old.push(img) : result.new.push(img));\n  return result;\n};\n\nconst checkPrice = async price => {\n  try {\n    if (price) {\n      price = price.trim();\n      price = +parseFloat(price).toFixed(2);\n    } else {\n      price = 0;\n    }\n  } catch (e) {}\n\n  price = price.toString();\n  return price;\n};\n\nexport { noticeSave, productSave };","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/methods/save.js"],"names":["toast","noticeBase","productBase","cubby","noticeSave","item","edit","image","save","notices","productSave","price","checkPrice","products","base","images","checkImage","form","FormData","console","log","new","length","forEach","img","append","title","text","category","response","old","_id","add","data","ok","error","push","result","trim","parseFloat","toFixed","e","toString"],"mappings":"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","sourcesContent":["import { toast } from \"react-toastify\";\r\n\r\nimport * as noticeBase from \"../services/notices\";\r\nimport * as productBase from \"../services/products\";\r\nimport { cubby } from \"./cubby\";\r\n\r\nconst noticeSave = async (item, edit, image) => {\r\n    return await save(item, edit, image, noticeBase, cubby.notices);\r\n};\r\n\r\nconst productSave = async (item, edit, image) => {\r\n    item.price = await checkPrice(item.price);\r\n    return await save(item, edit, image, productBase, cubby.products);\r\n};\r\n\r\nconst save = async (item, edit, image, base, cubby) => {\r\n    item.images = await checkImage(image);\r\n\r\n    const form = new FormData();\r\n    console.log(\"IMAGES \", item.images);\r\n    console.log(item.images, \"IMAGES\");\r\n    if (item.images.new.length > 0)\r\n        await item.images.new.forEach(async (img) => form.append(\"file\", img));\r\n    form.append(\"title\", item.title);\r\n    form.append(\"text\", item.text);\r\n    form.append(\"price\", item.price);\r\n    form.append(\"category\", item.category);\r\n\r\n    let response;\r\n    if (edit) {\r\n        if (item.images.old.length > 0) form.append(\"images\", item.images.old);\r\n        form.append(\"_id\", edit._id);\r\n        response = await base.edit(edit._id, form);\r\n    } else {\r\n        response = await base.add(form);\r\n    }\r\n    console.log(response.data);\r\n    if (!response.ok) throw toast.error(\"Error occured on saving!\");\r\n    if (cubby.data) cubby.data.push(response.data);\r\n    return response.data;\r\n};\r\n\r\nconst checkImage = async (images) => {\r\n    const result = { old: [], new: [] };\r\n\r\n    await images.forEach((img) =>\r\n        typeof img === \"string\" ? result.old.push(img) : result.new.push(img)\r\n    );\r\n\r\n    return result;\r\n};\r\n\r\nconst checkPrice = async (price) => {\r\n    try {\r\n        if (price) {\r\n            price = price.trim();\r\n            price = +parseFloat(price).toFixed(2);\r\n        } else {\r\n            price = 0;\r\n        }\r\n    } catch (e) {}\r\n    price = price.toString();\r\n    return price;\r\n};\r\n\r\nexport { noticeSave, productSave };\r\n"]},"metadata":{},"sourceType":"module"}