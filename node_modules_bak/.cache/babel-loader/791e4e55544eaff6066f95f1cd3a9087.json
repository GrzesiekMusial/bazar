{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\app\\\\components\\\\addProduct.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport * as catBase from \"../../api/categories\";\nimport * as prodBase from \"../../api/products\";\nimport * as imagesBase from \"../../api/images\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport AddTextBox from \"./common/form/addTextBox\";\nimport AddInputBox from \"./common/form/addInputBox\";\nimport AddSelectBox from \"./common/form/addSelectBox\";\nimport AddSubmitButton from \"./common/form/submitButton\";\nimport MultiImageInput from \"react-multiple-image-input\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ImageInput from \"./common/form/imageInput\";\nimport { toUpper } from \"lodash\";\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required(\"Nazwa jest wymagana.\").min(3).typeError(\"Nieprawidłowa wartość.\").max(120).label(\"Nazwa\"),\n  text: Yup.string().max(6000),\n  images: Yup.array().of(Yup.string().max(44)),\n  price: Yup.number().typeError(\"Nieprawidłowa wartość.\").max(9000000).test(\"is-decimal\", \"invalid decimal\", value => (value + \"\").match(/d*/)),\n  category: Yup.string().required().max(255)\n});\n\nconst AddProduct = props => {\n  _s();\n\n  const [image, setImage] = useState([]);\n  const [categories, setCategories] = useState(null);\n  const [edit, setEdit] = useState(null);\n\n  const checkEdit = async () => {\n    if (props.match.params.id) {\n      const response = await prodBase.product(props.match.params.id);\n      if (!response.ok) return;\n      setEdit(response.data);\n    } // edit.image ? setImage(edit.image) : null;\n\n  };\n\n  useEffect(() => {\n    console.log(image);\n  }, [image]);\n  useEffect(() => {\n    props.title(\"sprzedaj\");\n    loadData();\n    checkEdit();\n  }, []);\n\n  const loadData = async () => {\n    const result = await catBase.get();\n    if (!Array.isArray(result.data)) return;\n    setCategories(result.data);\n  };\n\n  const handleSave = async (item, image) => {\n    if (item.price) {\n      item.price = item.price.trim();\n    }\n\n    if (edit) {\n      //TODO - check images changes\n      item._id = edit._id;\n      const response = await prodBase.edit(item);\n      response.ok ? props.history.push(`/bazar/product/${response.data._id}`) : toast.error(\"Error occured on saving!\");\n      return;\n    }\n\n    if (image.length > 0) {\n      const images = await uploadImage(image);\n      if (images.ok) item.images = images.data;else return toast.error(\"Error occured on saving!\");\n    }\n\n    console.log(item);\n    const response = await prodBase.add(item);\n    response.ok ? props.history.push(`/bazar/product/${response.data._id}`) : toast.error(\"Error occured on saving!\");\n    console.log(response);\n  };\n\n  const uploadImage = image => {\n    const form = new FormData();\n    image.forEach(img => form.append(\"image\", img));\n    return imagesBase.add(form);\n  };\n\n  const imageArr = arr => {\n    const result = [];\n\n    for (let key in arr) {\n      if (arr[key][\"lastModified\"]) {\n        result.push(arr[key]);\n      }\n    }\n\n    preview_image(result); // setImage(result);\n    // console.log(image);\n\n    return;\n  };\n\n  function preview_image(arr) {\n    var reader = new FileReader();\n    const result = [];\n    console.log(\"arr\", arr); // arr.forEach((img) => result.push(reader.readAsDataURL(img)));\n\n    result.push(reader.readAsDataURL(arr[0]));\n    return setImage(result);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: categories && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addBoard\",\n        children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"multipleImages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"multipleImages\",\n          children: /*#__PURE__*/_jsxDEV(MultiImageInput, {\n            allowCrop: false,\n            max: 6,\n            images: image,\n            setImages: setImage,\n            theme: {\n              margin: \"0\",\n              background: \"unset\",\n              outlineColor: \"#262a33\",\n              textColor: \"rgba(255,255,255,0.6)\",\n              buttonColor: \"#ff0e1f\",\n              modalColor: \"#ffffff\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ImageInput, {\n          handleChange: imageArr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          enableReinitialize: true,\n          initialValues: edit ? {\n            text: edit.text,\n            title: edit.title,\n            price: edit.price,\n            category: edit.category._id\n          } : {\n            text: \"\",\n            title: \"\",\n            price: \"\",\n            category: categories[0]._id\n          },\n          onSubmit: values => handleSave(values, image),\n          validationSchema: validationSchema,\n          children: ({}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(AddInputBox, {\n              className: \"addBoard__title\",\n              name: \"title\",\n              placeholder: \"Nazwa\",\n              defaultValue: edit ? edit.title : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(AddTextBox, {\n              className: \"addBoard__text\",\n              name: \"text\",\n              placeholder: \"Opis...\",\n              defaultValue: edit ? edit.text : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"addBoard__details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(AddInputBox, {\n                  label: \"CENA\",\n                  placeholder: \"cena\",\n                  name: \"price\",\n                  id: \"price\",\n                  className: \"addBoard__details--price\",\n                  defaultValue: edit ? edit.price : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: categories && /*#__PURE__*/_jsxDEV(AddSelectBox, {\n                  label: \"KATEGORIA\",\n                  arr: categories,\n                  id: \"category\",\n                  name: \"category\",\n                  className: \"addBoard__details--category\",\n                  defaultValue: edit ? edit.category._id : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"addBoard__buttons\",\n              children: /*#__PURE__*/_jsxDEV(AddSubmitButton, {\n                className: \"actionBtn\",\n                title: edit ? \"ZAPISZ\" : \"OPUBLIKUJ\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddProduct, \"SqvIWrs+6/1GDNL/hRCXny4GoQ4=\");\n\n_c = AddProduct;\nexport default AddProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/app/components/addProduct.jsx"],"names":["React","useState","useEffect","catBase","prodBase","imagesBase","Formik","Yup","AddTextBox","AddInputBox","AddSelectBox","AddSubmitButton","MultiImageInput","toast","ToastContainer","ImageInput","toUpper","validationSchema","object","shape","title","string","required","min","typeError","max","label","text","images","array","of","price","number","test","value","match","category","AddProduct","props","image","setImage","categories","setCategories","edit","setEdit","checkEdit","params","id","response","product","ok","data","console","log","loadData","result","get","Array","isArray","handleSave","item","trim","_id","history","push","error","length","uploadImage","add","form","FormData","forEach","img","append","imageArr","arr","key","preview_image","reader","FileReader","readAsDataURL","margin","background","outlineColor","textColor","buttonColor","modalColor","values"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport * as catBase from \"../../api/categories\";\r\nimport * as prodBase from \"../../api/products\";\r\nimport * as imagesBase from \"../../api/images\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport AddTextBox from \"./common/form/addTextBox\";\r\nimport AddInputBox from \"./common/form/addInputBox\";\r\nimport AddSelectBox from \"./common/form/addSelectBox\";\r\nimport AddSubmitButton from \"./common/form/submitButton\";\r\nimport MultiImageInput from \"react-multiple-image-input\";\r\n\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport ImageInput from \"./common/form/imageInput\";\r\nimport { toUpper } from \"lodash\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n        .required(\"Nazwa jest wymagana.\")\r\n        .min(3)\r\n        .typeError(\"Nieprawidłowa wartość.\")\r\n        .max(120)\r\n        .label(\"Nazwa\"),\r\n    text: Yup.string().max(6000),\r\n    images: Yup.array().of(Yup.string().max(44)),\r\n    price: Yup.number()\r\n        .typeError(\"Nieprawidłowa wartość.\")\r\n        .max(9000000)\r\n        .test(\"is-decimal\", \"invalid decimal\", (value) =>\r\n            (value + \"\").match(/d*/)\r\n        ),\r\n    category: Yup.string().required().max(255),\r\n});\r\n\r\nconst AddProduct = (props) => {\r\n    const [image, setImage] = useState([]);\r\n    const [categories, setCategories] = useState(null);\r\n    const [edit, setEdit] = useState(null);\r\n\r\n    const checkEdit = async () => {\r\n        if (props.match.params.id) {\r\n            const response = await prodBase.product(props.match.params.id);\r\n            if (!response.ok) return;\r\n            setEdit(response.data);\r\n        }\r\n\r\n        // edit.image ? setImage(edit.image) : null;\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(image);\r\n    }, [image]);\r\n\r\n    useEffect(() => {\r\n        props.title(\"sprzedaj\");\r\n        loadData();\r\n        checkEdit();\r\n    }, []);\r\n\r\n    const loadData = async () => {\r\n        const result = await catBase.get();\r\n\r\n        if (!Array.isArray(result.data)) return;\r\n        setCategories(result.data);\r\n    };\r\n\r\n    const handleSave = async (item, image) => {\r\n        if (item.price) {\r\n            item.price = item.price.trim();\r\n        }\r\n\r\n        if (edit) {\r\n            //TODO - check images changes\r\n\r\n            item._id = edit._id;\r\n            const response = await prodBase.edit(item);\r\n            response.ok\r\n                ? props.history.push(`/bazar/product/${response.data._id}`)\r\n                : toast.error(\"Error occured on saving!\");\r\n\r\n            return;\r\n        }\r\n\r\n        if (image.length > 0) {\r\n            const images = await uploadImage(image);\r\n            if (images.ok) item.images = images.data;\r\n            else return toast.error(\"Error occured on saving!\");\r\n        }\r\n\r\n        console.log(item);\r\n\r\n        const response = await prodBase.add(item);\r\n\r\n        response.ok\r\n            ? props.history.push(`/bazar/product/${response.data._id}`)\r\n            : toast.error(\"Error occured on saving!\");\r\n\r\n        console.log(response);\r\n    };\r\n\r\n    const uploadImage = (image) => {\r\n        const form = new FormData();\r\n        image.forEach((img) => form.append(\"image\", img));\r\n\r\n        return imagesBase.add(form);\r\n    };\r\n\r\n    const imageArr = (arr) => {\r\n        const result = [];\r\n\r\n        for (let key in arr) {\r\n            if (arr[key][\"lastModified\"]) {\r\n                result.push(arr[key]);\r\n            }\r\n        }\r\n\r\n        preview_image(result);\r\n\r\n        // setImage(result);\r\n        // console.log(image);\r\n\r\n        return;\r\n    };\r\n\r\n    function preview_image(arr) {\r\n        var reader = new FileReader();\r\n        const result = [];\r\n\r\n        console.log(\"arr\", arr);\r\n        // arr.forEach((img) => result.push(reader.readAsDataURL(img)));\r\n\r\n        result.push(reader.readAsDataURL(arr[0]));\r\n\r\n        return setImage(result);\r\n    }\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            {categories && (\r\n                <div className=\"screen__container\">\r\n                    <div className=\"addBoard\">\r\n                        <ToastContainer />\r\n                        <div className=\"multipleImages\"></div>\r\n                        <div className=\"multipleImages\">\r\n                            <MultiImageInput\r\n                                allowCrop={false}\r\n                                max={6}\r\n                                images={image}\r\n                                setImages={setImage}\r\n                                theme={{\r\n                                    margin: \"0\",\r\n                                    background: \"unset\",\r\n                                    outlineColor: \"#262a33\",\r\n                                    textColor: \"rgba(255,255,255,0.6)\",\r\n                                    buttonColor: \"#ff0e1f\",\r\n                                    modalColor: \"#ffffff\",\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        <ImageInput handleChange={imageArr} />\r\n\r\n                        {/* <input\r\n                            type=\"file\"\r\n                            id=\"file\"\r\n                            name=\"images\"\r\n                            onChange={(e) => imageArr(e.target.files)}\r\n                        /> */}\r\n                        <Formik\r\n                            enableReinitialize={true}\r\n                            initialValues={\r\n                                edit\r\n                                    ? {\r\n                                          text: edit.text,\r\n                                          title: edit.title,\r\n                                          price: edit.price,\r\n                                          category: edit.category._id,\r\n                                      }\r\n                                    : {\r\n                                          text: \"\",\r\n                                          title: \"\",\r\n                                          price: \"\",\r\n                                          category: categories[0]._id,\r\n                                      }\r\n                            }\r\n                            onSubmit={(values) => handleSave(values, image)}\r\n                            validationSchema={validationSchema}\r\n                        >\r\n                            {({}) => (\r\n                                <>\r\n                                    <AddInputBox\r\n                                        className=\"addBoard__title\"\r\n                                        name=\"title\"\r\n                                        placeholder=\"Nazwa\"\r\n                                        defaultValue={edit ? edit.title : null}\r\n                                    />\r\n\r\n                                    <AddTextBox\r\n                                        className=\"addBoard__text\"\r\n                                        name=\"text\"\r\n                                        placeholder=\"Opis...\"\r\n                                        defaultValue={edit ? edit.text : null}\r\n                                    />\r\n\r\n                                    <div className=\"addBoard__details\">\r\n                                        <div>\r\n                                            <AddInputBox\r\n                                                label=\"CENA\"\r\n                                                placeholder=\"cena\"\r\n                                                name=\"price\"\r\n                                                id=\"price\"\r\n                                                className=\"addBoard__details--price\"\r\n                                                defaultValue={\r\n                                                    edit ? edit.price : null\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div>\r\n                                            {categories && (\r\n                                                <AddSelectBox\r\n                                                    label=\"KATEGORIA\"\r\n                                                    arr={categories}\r\n                                                    id=\"category\"\r\n                                                    name=\"category\"\r\n                                                    className=\"addBoard__details--category\"\r\n                                                    defaultValue={\r\n                                                        edit\r\n                                                            ? edit.category._id\r\n                                                            : null\r\n                                                    }\r\n                                                />\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"addBoard__buttons\">\r\n                                        <AddSubmitButton\r\n                                            className=\"actionBtn\"\r\n                                            title={\r\n                                                edit ? \"ZAPISZ\" : \"OPUBLIKUJ\"\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                        </Formik>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddProduct;\r\n"]},"metadata":{},"sourceType":"module"}