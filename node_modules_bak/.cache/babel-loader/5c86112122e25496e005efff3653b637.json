{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\app\\\\components\\\\register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport MyForm from \"./myform.js\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport * as userBase from \"../../api/users\";\nimport AddInputBox from \"./common/form/addInputBox.jsx\";\nimport AddSubmitButton from \"./common/form/submitButton.jsx\";\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().trim().required(\"Podaj email.\").label(\"Email\").email(),\n  login: Yup.string().trim().required(\"Podaj login.\").min(5).max(120).label(\"Login\"),\n  password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\"),\n  confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\").required(\"Confirm Password is required\")\n});\n\nconst handleRegister = async user => {\n  const response = await userBase.add(user);\n  localStorage.setItem(\"token\", response.headers(\"x-auth-token\"));\n};\n\nconst Register = props => {\n  _s();\n\n  useEffect(() => {\n    props.title(\"register\");\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      login: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    onSubmit: values => handleRegister(values),\n    validationSchema: validationSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, ({}) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login__buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(AddInputBox, {\n    name: \"email\",\n    label: \"Email\",\n    placeholder: \"Email...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(AddInputBox, {\n    label: \"Login\",\n    name: \"login\",\n    placeholder: \"Login...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(AddInputBox, {\n    label: \"Password\",\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(AddInputBox, {\n    label: \"Password\",\n    name: \"confirmPassword\",\n    type: \"password\",\n    placeholder: \"Confirm password...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(AddSubmitButton, {\n    className: \"actionBtn\",\n    title: \"REGISTER\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(MyForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(Register, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/app/components/register.jsx"],"names":["React","useEffect","MyForm","Formik","Yup","userBase","AddInputBox","AddSubmitButton","validationSchema","object","shape","email","string","trim","required","label","login","min","max","password","confirmPassword","oneOf","ref","handleRegister","user","response","add","localStorage","setItem","headers","Register","props","title","values"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nimport MyForm from \"./myform.js\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport * as userBase from \"../../api/users\";\r\n\r\nimport AddInputBox from \"./common/form/addInputBox.jsx\";\r\nimport AddSubmitButton from \"./common/form/submitButton.jsx\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    email: Yup.string().trim().required(\"Podaj email.\").label(\"Email\").email(),\r\n    login: Yup.string()\r\n        .trim()\r\n        .required(\"Podaj login.\")\r\n        .min(5)\r\n        .max(120)\r\n        .label(\"Login\"),\r\n    password: Yup.string()\r\n        .min(6, \"Password must be at least 6 characters\")\r\n        .required(\"Password is required\"),\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n        .required(\"Confirm Password is required\"),\r\n});\r\n\r\nconst handleRegister = async (user) => {\r\n    const response = await userBase.add(user);\r\n    localStorage.setItem(\"token\", response.headers(\"x-auth-token\"));\r\n};\r\n\r\nconst Register = (props) => {\r\n    useEffect(() => {\r\n        props.title(\"register\");\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            <Formik\r\n                initialValues={{\r\n                    email: \"\",\r\n                    login: \"\",\r\n                    password: \"\",\r\n                    confirmPassword: \"\",\r\n                }}\r\n                onSubmit={(values) => handleRegister(values)}\r\n                validationSchema={validationSchema}\r\n            >\r\n                {({}) => (\r\n                    <>\r\n                        <div className=\"login\">\r\n                            <div className=\"login__buttons\">\r\n                                <AddInputBox\r\n                                    name=\"email\"\r\n                                    label=\"Email\"\r\n                                    placeholder=\"Email...\"\r\n                                />\r\n\r\n                                <AddInputBox\r\n                                    label=\"Login\"\r\n                                    name=\"login\"\r\n                                    placeholder=\"Login...\"\r\n                                />\r\n                                <AddInputBox\r\n                                    label=\"Password\"\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                />\r\n                                <AddInputBox\r\n                                    label=\"Password\"\r\n                                    name=\"confirmPassword\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"Confirm password...\"\r\n                                />\r\n                            </div>\r\n\r\n                            <AddSubmitButton\r\n                                className=\"actionBtn\"\r\n                                title=\"REGISTER\"\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </Formik>\r\n            <MyForm />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}