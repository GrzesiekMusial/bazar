{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nimport { FiShoppingBag as Bazar } from \"react-icons/fi\";\nimport { TiPinOutline as Board } from \"react-icons/ti\";\nimport { BiUserX as UserNotLogged, BiUserCheck as UserLogged } from \"react-icons/bi\";\nimport { CgAddR as AddNew } from \"react-icons/cg\";\nimport ProductDetails from \"./app/components/shop/productDetails\";\nimport ProductCards from \"./app/components/shop/productCards\";\nimport BoardCards from \"./app/components/board/boardCards\";\nimport Test from \"./app/components/other/home\";\nimport AddProduct from \"./app/components/shop/addProduct\";\nimport AddBoard from \"./app/components/board/addBoard\";\nimport Header from \"./app/components/common/header\";\nimport Add from \"./app/components/other/add\";\nimport Buttons from \"./app/components/common/buttons\";\nimport Login from \"./app/components/user/login\";\nimport Register from \"./app/components/user/register\";\nimport ProtectedRoute from \"./app/components/common/protectedRoute\";\nimport * as auth from \"./services/auth\";\nimport * as imagesBase from \"./services/images\";\nimport { ImCheckboxChecked } from \"react-icons/im\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images: null,\n      photoIndex: 0,\n      isOpen: false,\n      header: null,\n      buttons: null,\n      user: null,\n      load: false,\n      check: false\n    };\n\n    this.renderButtons = async () => {\n      const userBtn = this.state.user ? /*#__PURE__*/_jsxDEV(UserLogged, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 43\n      }, this) : /*#__PURE__*/_jsxDEV(UserNotLogged, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 60\n      }, this);\n      const buttons = [{\n        name: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this),\n        ref: \"/board\"\n      }, {\n        name: /*#__PURE__*/_jsxDEV(Bazar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this),\n        ref: \"/bazar\"\n      }, {\n        name: /*#__PURE__*/_jsxDEV(AddNew, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this),\n        ref: \"/add\"\n      }, {\n        name: userBtn,\n        ref: \"/login\"\n      }];\n      this.setState({\n        buttons: buttons\n      });\n    };\n\n    this.renderTitle = t => {\n      this.setState({\n        header: t\n      });\n    };\n\n    this.renderImage = (img, index) => {\n      this.setState({\n        images: img,\n        photoIndex: index,\n        isOpen: true\n      });\n    };\n\n    this.renderUser = async () => {\n      const resp = await auth.getUser();\n      if (resp) this.setState({\n        user: resp\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.user !== this.state.user) {\n      this.renderButtons();\n    }\n  }\n\n  componentDidMount() {\n    this.renderButtons();\n    this.renderUser();\n  }\n\n  render(props) {\n    const {\n      isOpen,\n      photoIndex,\n      load,\n      header,\n      user,\n      images,\n      buttons\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: header\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), this.state.check && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner check\",\n        children: /*#__PURE__*/_jsxDEV(ImCheckboxChecked, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/bazar/add\",\n          title: this.renderTitle,\n          load: setLoad,\n          component: AddProduct\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add\",\n          render: () => /*#__PURE__*/_jsxDEV(Add, {\n            title: this.renderTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/board/edit/:id?\",\n          load: setLoad,\n          title: this.renderTitle,\n          component: AddBoard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/board/add\",\n          load: setLoad,\n          title: this.renderTitle,\n          component: AddBoard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/board\",\n          render: props => /*#__PURE__*/_jsxDEV(BoardCards, {\n            load: setLoad,\n            user: user,\n            title: this.renderTitle,\n            renderImage: this.renderImage,\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/bazar/product/edit/:id?\",\n          title: this.renderTitle,\n          component: AddProduct\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/bazar/product/:id?\",\n          render: props => /*#__PURE__*/_jsxDEV(ProductDetails, {\n            title: this.renderTitle,\n            renderImage: this.renderImage,\n            user: user,\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/bazar/:category?/:text?\",\n          render: (props, match) => /*#__PURE__*/_jsxDEV(ProductCards, {\n            title: this.renderTitle,\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          user: user,\n          render: props => /*#__PURE__*/_jsxDEV(Login, { ...props,\n            title: this.renderTitle,\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          render: props => /*#__PURE__*/_jsxDEV(Register, { ...props,\n            title: this.renderTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Test, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), buttons && /*#__PURE__*/_jsxDEV(Buttons, {\n        buttons: buttons,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 29\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(Lightbox, {\n        mainSrc: imagesBase.get(images[photoIndex]),\n        nextSrc: imagesBase.get(images[(photoIndex + 1) % images.length]),\n        prevSrc: imagesBase.get(images[(photoIndex + images.length - 1) % images.length]),\n        onCloseRequest: () => this.setState({\n          isOpen: false\n        }),\n        onMovePrevRequest: () => this.setState({\n          photoIndex: (photoIndex + images.length - 1) % images.length\n        }),\n        onMoveNextRequest: () => this.setState({\n          photoIndex: (photoIndex + 1) % images.length\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/App.js"],"names":["React","Component","Route","Redirect","Switch","Lightbox","FiShoppingBag","Bazar","TiPinOutline","Board","BiUserX","UserNotLogged","BiUserCheck","UserLogged","CgAddR","AddNew","ProductDetails","ProductCards","BoardCards","Test","AddProduct","AddBoard","Header","Add","Buttons","Login","Register","ProtectedRoute","auth","imagesBase","ImCheckboxChecked","App","state","images","photoIndex","isOpen","header","buttons","user","load","check","renderButtons","userBtn","name","ref","setState","renderTitle","t","renderImage","img","index","renderUser","resp","getUser","componentDidUpdate","prevProps","prevState","componentDidMount","render","props","setLoad","match","get","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\n\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\n\r\nimport { FiShoppingBag as Bazar } from \"react-icons/fi\";\r\nimport { TiPinOutline as Board } from \"react-icons/ti\";\r\nimport {\r\n    BiUserX as UserNotLogged,\r\n    BiUserCheck as UserLogged,\r\n} from \"react-icons/bi\";\r\nimport { CgAddR as AddNew } from \"react-icons/cg\";\r\n\r\nimport ProductDetails from \"./app/components/shop/productDetails\";\r\nimport ProductCards from \"./app/components/shop/productCards\";\r\nimport BoardCards from \"./app/components/board/boardCards\";\r\nimport Test from \"./app/components/other/home\";\r\nimport AddProduct from \"./app/components/shop/addProduct\";\r\nimport AddBoard from \"./app/components/board/addBoard\";\r\nimport Header from \"./app/components/common/header\";\r\nimport Add from \"./app/components/other/add\";\r\nimport Buttons from \"./app/components/common/buttons\";\r\nimport Login from \"./app/components/user/login\";\r\nimport Register from \"./app/components/user/register\";\r\nimport ProtectedRoute from \"./app/components/common/protectedRoute\";\r\n\r\nimport * as auth from \"./services/auth\";\r\nimport * as imagesBase from \"./services/images\";\r\n\r\nimport { ImCheckboxChecked } from \"react-icons/im\";\r\n\r\nclass App extends Component {\r\n    state = {\r\n        images: null,\r\n        photoIndex: 0,\r\n        isOpen: false,\r\n        header: null,\r\n        buttons: null,\r\n        user: null,\r\n        load: false,\r\n        check: false,\r\n    };\r\n\r\n    renderButtons = async () => {\r\n        const userBtn = this.state.user ? <UserLogged /> : <UserNotLogged />;\r\n\r\n        const buttons = [\r\n            { name: <Board />, ref: \"/board\" },\r\n            { name: <Bazar />, ref: \"/bazar\" },\r\n            { name: <AddNew />, ref: \"/add\" },\r\n            { name: userBtn, ref: \"/login\" },\r\n        ];\r\n\r\n        this.setState({ buttons: buttons });\r\n    };\r\n\r\n    renderTitle = (t) => {\r\n        this.setState({ header: t });\r\n    };\r\n\r\n    renderImage = (img, index) => {\r\n        this.setState({ images: img, photoIndex: index, isOpen: true });\r\n    };\r\n\r\n    renderUser = async () => {\r\n        const resp = await auth.getUser();\r\n        if (resp) this.setState({ user: resp });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.user !== this.state.user) {\r\n            this.renderButtons();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.renderButtons();\r\n        this.renderUser();\r\n    }\r\n\r\n    render(props) {\r\n        const {\r\n            isOpen,\r\n            photoIndex,\r\n            load,\r\n            header,\r\n            user,\r\n            images,\r\n            buttons,\r\n        } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <Header title={header} />\r\n                {this.state.check && (\r\n                    <div className=\"spinner check\">\r\n                        <ImCheckboxChecked />\r\n                    </div>\r\n                )}\r\n\r\n                <Switch>\r\n                    <ProtectedRoute\r\n                        path=\"/bazar/add\"\r\n                        title={this.renderTitle}\r\n                        load={setLoad}\r\n                        component={AddProduct}\r\n                    />\r\n\r\n                    <Route\r\n                        path=\"/add\"\r\n                        render={() => <Add title={this.renderTitle} />}\r\n                    />\r\n\r\n                    <ProtectedRoute\r\n                        path=\"/board/edit/:id?\"\r\n                        load={setLoad}\r\n                        title={this.renderTitle}\r\n                        component={AddBoard}\r\n                    />\r\n\r\n                    <ProtectedRoute\r\n                        path=\"/board/add\"\r\n                        load={setLoad}\r\n                        title={this.renderTitle}\r\n                        component={AddBoard}\r\n                    />\r\n\r\n                    <Route\r\n                        path=\"/board\"\r\n                        render={(props) => (\r\n                            <BoardCards\r\n                                load={setLoad}\r\n                                user={user}\r\n                                title={this.renderTitle}\r\n                                renderImage={this.renderImage}\r\n                                {...props}\r\n                            />\r\n                        )}\r\n                    />\r\n\r\n                    <ProtectedRoute\r\n                        path=\"/bazar/product/edit/:id?\"\r\n                        title={this.renderTitle}\r\n                        component={AddProduct}\r\n                    />\r\n\r\n                    <Route\r\n                        path=\"/bazar/product/:id?\"\r\n                        render={(props) => (\r\n                            <ProductDetails\r\n                                title={this.renderTitle}\r\n                                renderImage={this.renderImage}\r\n                                user={user}\r\n                                {...props}\r\n                            />\r\n                        )}\r\n                    />\r\n\r\n                    <Route\r\n                        path=\"/bazar/:category?/:text?\"\r\n                        render={(props, match) => (\r\n                            <ProductCards title={this.renderTitle} {...props} />\r\n                        )}\r\n                    />\r\n\r\n                    <Route\r\n                        path=\"/login\"\r\n                        user={user}\r\n                        render={(props) => (\r\n                            <Login\r\n                                {...props}\r\n                                title={this.renderTitle}\r\n                                user={user}\r\n                            />\r\n                        )}\r\n                    />\r\n\r\n                    <Route\r\n                        path=\"/register\"\r\n                        render={(props) => (\r\n                            <Register {...props} title={this.renderTitle} />\r\n                        )}\r\n                    />\r\n\r\n                    <Redirect to=\"/board\" />\r\n                </Switch>\r\n\r\n                <Test />\r\n\r\n                {buttons && <Buttons buttons={buttons} user={user} />}\r\n\r\n                {isOpen && (\r\n                    <Lightbox\r\n                        mainSrc={imagesBase.get(images[photoIndex])}\r\n                        nextSrc={imagesBase.get(\r\n                            images[(photoIndex + 1) % images.length]\r\n                        )}\r\n                        prevSrc={imagesBase.get(\r\n                            images[\r\n                                (photoIndex + images.length - 1) % images.length\r\n                            ]\r\n                        )}\r\n                        onCloseRequest={() => this.setState({ isOpen: false })}\r\n                        onMovePrevRequest={() =>\r\n                            this.setState({\r\n                                photoIndex:\r\n                                    (photoIndex + images.length - 1) %\r\n                                    images.length,\r\n                            })\r\n                        }\r\n                        onMoveNextRequest={() =>\r\n                            this.setState({\r\n                                photoIndex: (photoIndex + 1) % images.length,\r\n                            })\r\n                        }\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}