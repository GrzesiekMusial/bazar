{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport * as imagesBase from \"../api/images\";\n\nconst imageUpload = async (item, edit, image) => {\n  if (image.length > 0 && typeof image[0] !== \"string\") {\n    if (edit) {\n      edit.images.forEach(img => imagesBase.remove(img));\n    }\n\n    const response = await uploadImage(image);\n    if (response.ok) return response.data;else {\n      toast.error(\"Error occured on saving!\");\n      throw expect;\n    }\n  }\n\n  return item.images;\n};\n\nconst handleSave = async (item, edit, image, base) => {\n  item.images = await imageUpload(item, edit, image);\n\n  if (edit) {\n    item._id = edit._id;\n    const response = await base.edit(item);\n\n    if (!response.ok) {\n      toast.error(\"Error occured on saving!\");\n      return false;\n    }\n\n    return true;\n  }\n\n  const response = await base.add(item);\n\n  if (!response.ok) {\n    toast.error(\"Error occured on saving!\");\n    return false;\n  }\n\n  return true;\n};\n\nconst uploadImage = image => {\n  const form = new FormData();\n  image.forEach(img => form.append(\"image\", img));\n  return imagesBase.add(form);\n};\n\nexport { handleSave };","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/methods/save.js"],"names":["toast","imagesBase","imageUpload","item","edit","image","length","images","forEach","img","remove","response","uploadImage","ok","data","error","expect","handleSave","base","_id","add","form","FormData","append"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,OAAO,KAAKC,UAAZ,MAA4B,eAA5B;;AAEA,MAAMC,WAAW,GAAG,OAAOC,IAAP,EAAaC,IAAb,EAAmBC,KAAnB,KAA6B;AAC7C,MAAIA,KAAK,CAACC,MAAN,GAAe,CAAf,IAAoB,OAAOD,KAAK,CAAC,CAAD,CAAZ,KAAoB,QAA5C,EAAsD;AAClD,QAAID,IAAJ,EAAU;AACNA,MAAAA,IAAI,CAACG,MAAL,CAAYC,OAAZ,CAAqBC,GAAD,IAASR,UAAU,CAACS,MAAX,CAAkBD,GAAlB,CAA7B;AACH;;AAED,UAAME,QAAQ,GAAG,MAAMC,WAAW,CAACP,KAAD,CAAlC;AACA,QAAIM,QAAQ,CAACE,EAAb,EAAiB,OAAOF,QAAQ,CAACG,IAAhB,CAAjB,KACK;AACDd,MAAAA,KAAK,CAACe,KAAN,CAAY,0BAAZ;AACA,YAAMC,MAAN;AACH;AACJ;;AACD,SAAOb,IAAI,CAACI,MAAZ;AACH,CAdD;;AAgBA,MAAMU,UAAU,GAAG,OAAOd,IAAP,EAAaC,IAAb,EAAmBC,KAAnB,EAA0Ba,IAA1B,KAAmC;AAClDf,EAAAA,IAAI,CAACI,MAAL,GAAc,MAAML,WAAW,CAACC,IAAD,EAAOC,IAAP,EAAaC,KAAb,CAA/B;;AAEA,MAAID,IAAJ,EAAU;AACND,IAAAA,IAAI,CAACgB,GAAL,GAAWf,IAAI,CAACe,GAAhB;AACA,UAAMR,QAAQ,GAAG,MAAMO,IAAI,CAACd,IAAL,CAAUD,IAAV,CAAvB;;AAEA,QAAI,CAACQ,QAAQ,CAACE,EAAd,EAAkB;AACdb,MAAAA,KAAK,CAACe,KAAN,CAAY,0BAAZ;AACA,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH;;AAED,QAAMJ,QAAQ,GAAG,MAAMO,IAAI,CAACE,GAAL,CAASjB,IAAT,CAAvB;;AAEA,MAAI,CAACQ,QAAQ,CAACE,EAAd,EAAkB;AACdb,IAAAA,KAAK,CAACe,KAAN,CAAY,0BAAZ;AACA,WAAO,KAAP;AACH;;AACD,SAAO,IAAP;AACH,CArBD;;AAuBA,MAAMH,WAAW,GAAIP,KAAD,IAAW;AAC3B,QAAMgB,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAjB,EAAAA,KAAK,CAACG,OAAN,CAAeC,GAAD,IAASY,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqBd,GAArB,CAAvB;AAEA,SAAOR,UAAU,CAACmB,GAAX,CAAeC,IAAf,CAAP;AACH,CALD;;AAOA,SAASJ,UAAT","sourcesContent":["import { toast } from \"react-toastify\";\r\nimport * as imagesBase from \"../api/images\";\r\n\r\nconst imageUpload = async (item, edit, image) => {\r\n    if (image.length > 0 && typeof image[0] !== \"string\") {\r\n        if (edit) {\r\n            edit.images.forEach((img) => imagesBase.remove(img));\r\n        }\r\n\r\n        const response = await uploadImage(image);\r\n        if (response.ok) return response.data;\r\n        else {\r\n            toast.error(\"Error occured on saving!\");\r\n            throw expect;\r\n        }\r\n    }\r\n    return item.images;\r\n};\r\n\r\nconst handleSave = async (item, edit, image, base) => {\r\n    item.images = await imageUpload(item, edit, image);\r\n\r\n    if (edit) {\r\n        item._id = edit._id;\r\n        const response = await base.edit(item);\r\n\r\n        if (!response.ok) {\r\n            toast.error(\"Error occured on saving!\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const response = await base.add(item);\r\n\r\n    if (!response.ok) {\r\n        toast.error(\"Error occured on saving!\");\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nconst uploadImage = (image) => {\r\n    const form = new FormData();\r\n    image.forEach((img) => form.append(\"image\", img));\r\n\r\n    return imagesBase.add(form);\r\n};\r\n\r\nexport { handleSave };\r\n"]},"metadata":{},"sourceType":"module"}