{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\app\\\\components\\\\shop\\\\productCards.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport config from \"../../config/config.json\";\nimport * as base from \"../../../methods/data\";\nimport * as Forms from \"../common/form/forms\";\nimport { dataFilter } from \"../../../methods/filter\";\nimport \"react-dropdown/style.css\";\nimport SearchBox from \"../common/searchBox\";\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\nimport Spinner from \"./../common/spinner\";\nimport Card from \"./card\";\n\nfunction ProductCards(props) {\n  _s();\n\n  const {\n    title,\n    history,\n    match,\n    location,\n    user\n  } = props;\n  const [data, setData] = useState(null);\n  const [categories, setCategories] = useState(null);\n  const [category, setCategory] = useState(history.location.state ? history.location.state.category : 0);\n  const [text, setText] = useState(history.location.state ? history.location.state.text : 0);\n  const [error, setError] = useState(null);\n  const [load, setLoad] = useState(true);\n  useEffect(() => {\n    const cat = categories && category ? categories.filter(cat => cat._id == category)[0].name : 0;\n    const name = props.match.params.id ? props.match.params.id : config.headers.sell;\n    console.log(props.match.params.id);\n    title(`${name} ${category == 0 ? \"\" : \"| \" + cat} ${text == 0 ? \"\" : \" ~ \" + text.toLowerCase()}`);\n  }, [categories, category, text]);\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    try {\n      await Promise.allSettled([base.getCategories(true, setCategories), base.getProducts(setData)]);\n    } catch (ex) {\n      setError(\"Cant load data, plese try again\");\n    }\n\n    setLoad(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: [load && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 22\n    }, this), error && /*#__PURE__*/_jsxDEV(Forms.Error, {\n      error: error,\n      visible: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      status: {\n        category: category,\n        text: text\n      },\n      categories: categories,\n      handleCategorySearch: setCategory,\n      handleSearch: setText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: dataFilter(data, category, text, match.params.id).map(card => /*#__PURE__*/_jsxDEV(NavLink, {\n        to: {\n          pathname: \"/bazar/product/\" + card._id,\n          state: {\n            category,\n            text\n          },\n          back: location.pathname\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          card: card\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductCards, \"7jd2X7PI1j5Fzc1ACwmvRzhpXz8=\");\n\n_c = ProductCards;\nexport default ProductCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductCards\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/app/components/shop/productCards.jsx"],"names":["React","useState","useEffect","NavLink","config","base","Forms","dataFilter","SearchBox","Spinner","Card","ProductCards","props","title","history","match","location","user","data","setData","categories","setCategories","category","setCategory","state","text","setText","error","setError","load","setLoad","cat","filter","_id","name","params","id","headers","sell","console","log","toLowerCase","loadData","Promise","allSettled","getCategories","getProducts","ex","map","card","pathname","back"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport config from \"../../config/config.json\";\r\n\r\nimport * as base from \"../../../methods/data\";\r\nimport * as Forms from \"../common/form/forms\";\r\n\r\nimport { dataFilter } from \"../../../methods/filter\";\r\n\r\nimport \"react-dropdown/style.css\";\r\nimport SearchBox from \"../common/searchBox\";\r\n\r\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\r\nimport Spinner from \"./../common/spinner\";\r\nimport Card from \"./card\";\r\nfunction ProductCards(props) {\r\n    const { title, history, match, location, user } = props;\r\n    const [data, setData] = useState(null);\r\n    const [categories, setCategories] = useState(null);\r\n    const [category, setCategory] = useState(\r\n        history.location.state ? history.location.state.category : 0\r\n    );\r\n    const [text, setText] = useState(\r\n        history.location.state ? history.location.state.text : 0\r\n    );\r\n    const [error, setError] = useState(null);\r\n    const [load, setLoad] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const cat =\r\n            categories && category\r\n                ? categories.filter((cat) => cat._id == category)[0].name\r\n                : 0;\r\n\r\n        const name = props.match.params.id\r\n            ? props.match.params.id\r\n            : config.headers.sell;\r\n\r\n        console.log(props.match.params.id);\r\n        title(\r\n            `${name} ${category == 0 ? \"\" : \"| \" + cat} ${\r\n                text == 0 ? \"\" : \" ~ \" + text.toLowerCase()\r\n            }`\r\n        );\r\n    }, [categories, category, text]);\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n\r\n    const loadData = async () => {\r\n        try {\r\n            await Promise.allSettled([\r\n                base.getCategories(true, setCategories),\r\n                base.getProducts(setData),\r\n            ]);\r\n        } catch (ex) {\r\n            setError(\"Cant load data, plese try again\");\r\n        }\r\n        setLoad(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            {load && <Spinner />}\r\n\r\n            {error && <Forms.Error error={error} visible={error} />}\r\n\r\n            <SearchBox\r\n                status={{ category: category, text: text }}\r\n                categories={categories}\r\n                handleCategorySearch={setCategory}\r\n                handleSearch={setText}\r\n            />\r\n\r\n            <div className=\"cards\">\r\n                {dataFilter(data, category, text, match.params.id).map(\r\n                    (card) => (\r\n                        <NavLink\r\n                            to={{\r\n                                pathname: \"/bazar/product/\" + card._id,\r\n                                state: { category, text },\r\n                                back: location.pathname,\r\n                            }}\r\n                        >\r\n                            <Card card={card} />\r\n                        </NavLink>\r\n                    )\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductCards;\r\n"]},"metadata":{},"sourceType":"module"}