{"ast":null,"code":"import * as noticeBase from \"../services/notices\";\nimport * as productBase from \"../services/products\";\nimport * as catBase from \"../services/categories\";\nconst data = {\n  products: {\n    time: 0,\n    data: false\n  },\n  notices: {\n    time: 0,\n    data: false\n  },\n  categories: {\n    data: false,\n    time: 0\n  }\n};\n\nconst timieCheck = async data => {\n  const now = Date.now();\n  const maxTime = 600000;\n  const result = now - data.time > maxTime;\n  if (result) data.time = now;\n  return result;\n};\n\nconst getOne = async (id, base, setData = null, setImage = null) => {\n  if (id) {\n    const response = await base.getOne(id);\n    if (!response.ok) throw Error;\n    if (!setData) return response.data;\n    setData(response.data);\n    if (setImage) setImage(response.data.images);\n  }\n\n  return true;\n};\n\nconst getOneNotice = async (id, setData, setImage) => {\n  return await getOne(id, noticeBase, setData, setImage);\n};\n\nconst getOneProduct = async (id, setData, setImage) => {\n  return await getOne(id, productBase, setData, setImage);\n};\n\nconst getNotices = async (setData = null) => {\n  (await timieCheck(data.notices)) && data.notices.data !== null ? await noticeBase.get() : data.notices.data;\n  data.notices.data = notices;\n  if (!Array.isArray(notices.data)) throw Error;\n  if (setData) return setData(notices.data);\n  return notices.data;\n};\n\nconst getProducts = async (setData = null) => {\n  const products = (await timieCheck(data.products)) && data.products.data !== null ? await productBase.get().data : data.products.data;\n  console.log(products);\n  data.products.data = products;\n  if (!Array.isArray(products)) throw Error;\n  if (setData) return setData(products);\n  return products;\n};\n\nconst getCategories = async (withAll = false, setData = false) => {\n  (await timieCheck(data.categories)) && data.categories.data !== null ? await noticeBase.get() : data.categories.data;\n  data.categories.data = categories;\n  if (!Array.isArray(categories.data)) throw Error;\n  const result = withAll ? [{\n    _id: \"0\",\n    name: \"wszystkie\"\n  }, ...categories.data] : [...categories.data];\n  if (setData) return setData(result);\n  return result;\n};\n\nexport { getOneNotice, getOneProduct, getNotices, getProducts, getCategories };","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/methods/load.js"],"names":["noticeBase","productBase","catBase","data","products","time","notices","categories","timieCheck","now","Date","maxTime","result","getOne","id","base","setData","setImage","response","ok","Error","images","getOneNotice","getOneProduct","getNotices","get","Array","isArray","getProducts","console","log","getCategories","withAll","_id","name"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,qBAA5B;AACA,OAAO,KAAKC,WAAZ,MAA6B,sBAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;AAEA,MAAMC,IAAI,GAAG;AACTC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAE,CADA;AAENF,IAAAA,IAAI,EAAE;AAFA,GADD;AAKTG,EAAAA,OAAO,EAAE;AACLD,IAAAA,IAAI,EAAE,CADD;AAELF,IAAAA,IAAI,EAAE;AAFD,GALA;AASTI,EAAAA,UAAU,EAAE;AACRJ,IAAAA,IAAI,EAAE,KADE;AAERE,IAAAA,IAAI,EAAE;AAFE;AATH,CAAb;;AAeA,MAAMG,UAAU,GAAG,MAAOL,IAAP,IAAgB;AAC/B,QAAMM,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;AACA,QAAME,OAAO,GAAG,MAAhB;AACA,QAAMC,MAAM,GAAGH,GAAG,GAAGN,IAAI,CAACE,IAAX,GAAkBM,OAAjC;AACA,MAAIC,MAAJ,EAAYT,IAAI,CAACE,IAAL,GAAYI,GAAZ;AACZ,SAAOG,MAAP;AACH,CAND;;AAQA,MAAMC,MAAM,GAAG,OAAOC,EAAP,EAAWC,IAAX,EAAiBC,OAAO,GAAG,IAA3B,EAAiCC,QAAQ,GAAG,IAA5C,KAAqD;AAChE,MAAIH,EAAJ,EAAQ;AACJ,UAAMI,QAAQ,GAAG,MAAMH,IAAI,CAACF,MAAL,CAAYC,EAAZ,CAAvB;AACA,QAAI,CAACI,QAAQ,CAACC,EAAd,EAAkB,MAAMC,KAAN;AAClB,QAAI,CAACJ,OAAL,EAAc,OAAOE,QAAQ,CAACf,IAAhB;AACda,IAAAA,OAAO,CAACE,QAAQ,CAACf,IAAV,CAAP;AACA,QAAIc,QAAJ,EAAcA,QAAQ,CAACC,QAAQ,CAACf,IAAT,CAAckB,MAAf,CAAR;AACjB;;AACD,SAAO,IAAP;AACH,CATD;;AAWA,MAAMC,YAAY,GAAG,OAAOR,EAAP,EAAWE,OAAX,EAAoBC,QAApB,KAAiC;AAClD,SAAO,MAAMJ,MAAM,CAACC,EAAD,EAAKd,UAAL,EAAiBgB,OAAjB,EAA0BC,QAA1B,CAAnB;AACH,CAFD;;AAIA,MAAMM,aAAa,GAAG,OAAOT,EAAP,EAAWE,OAAX,EAAoBC,QAApB,KAAiC;AACnD,SAAO,MAAMJ,MAAM,CAACC,EAAD,EAAKb,WAAL,EAAkBe,OAAlB,EAA2BC,QAA3B,CAAnB;AACH,CAFD;;AAIA,MAAMO,UAAU,GAAG,OAAOR,OAAO,GAAG,IAAjB,KAA0B;AACzC,GAAC,MAAMR,UAAU,CAACL,IAAI,CAACG,OAAN,CAAjB,KAAoCH,IAAI,CAACG,OAAL,CAAaH,IAAb,KAAsB,IAA1D,GACM,MAAMH,UAAU,CAACyB,GAAX,EADZ,GAEMtB,IAAI,CAACG,OAAL,CAAaH,IAFnB;AAIAA,EAAAA,IAAI,CAACG,OAAL,CAAaH,IAAb,GAAoBG,OAApB;AACA,MAAI,CAACoB,KAAK,CAACC,OAAN,CAAcrB,OAAO,CAACH,IAAtB,CAAL,EAAkC,MAAMiB,KAAN;AAClC,MAAIJ,OAAJ,EAAa,OAAOA,OAAO,CAACV,OAAO,CAACH,IAAT,CAAd;AACb,SAAOG,OAAO,CAACH,IAAf;AACH,CATD;;AAWA,MAAMyB,WAAW,GAAG,OAAOZ,OAAO,GAAG,IAAjB,KAA0B;AAC1C,QAAMZ,QAAQ,GACV,CAAC,MAAMI,UAAU,CAACL,IAAI,CAACC,QAAN,CAAjB,KAAqCD,IAAI,CAACC,QAAL,CAAcD,IAAd,KAAuB,IAA5D,GACM,MAAMF,WAAW,CAACwB,GAAZ,GAAkBtB,IAD9B,GAEMA,IAAI,CAACC,QAAL,CAAcD,IAHxB;AAKA0B,EAAAA,OAAO,CAACC,GAAR,CAAY1B,QAAZ;AACAD,EAAAA,IAAI,CAACC,QAAL,CAAcD,IAAd,GAAqBC,QAArB;AACA,MAAI,CAACsB,KAAK,CAACC,OAAN,CAAcvB,QAAd,CAAL,EAA8B,MAAMgB,KAAN;AAC9B,MAAIJ,OAAJ,EAAa,OAAOA,OAAO,CAACZ,QAAD,CAAd;AACb,SAAOA,QAAP;AACH,CAXD;;AAaA,MAAM2B,aAAa,GAAG,OAAOC,OAAO,GAAG,KAAjB,EAAwBhB,OAAO,GAAG,KAAlC,KAA4C;AAC9D,GAAC,MAAMR,UAAU,CAACL,IAAI,CAACI,UAAN,CAAjB,KAAuCJ,IAAI,CAACI,UAAL,CAAgBJ,IAAhB,KAAyB,IAAhE,GACM,MAAMH,UAAU,CAACyB,GAAX,EADZ,GAEMtB,IAAI,CAACI,UAAL,CAAgBJ,IAFtB;AAIAA,EAAAA,IAAI,CAACI,UAAL,CAAgBJ,IAAhB,GAAuBI,UAAvB;AAEA,MAAI,CAACmB,KAAK,CAACC,OAAN,CAAcpB,UAAU,CAACJ,IAAzB,CAAL,EAAqC,MAAMiB,KAAN;AACrC,QAAMR,MAAM,GAAGoB,OAAO,GAChB,CAAC;AAAEC,IAAAA,GAAG,EAAE,GAAP;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GAAD,EAAkC,GAAG3B,UAAU,CAACJ,IAAhD,CADgB,GAEhB,CAAC,GAAGI,UAAU,CAACJ,IAAf,CAFN;AAIA,MAAIa,OAAJ,EAAa,OAAOA,OAAO,CAACJ,MAAD,CAAd;AACb,SAAOA,MAAP;AACH,CAdD;;AAgBA,SAASU,YAAT,EAAuBC,aAAvB,EAAsCC,UAAtC,EAAkDI,WAAlD,EAA+DG,aAA/D","sourcesContent":["import * as noticeBase from \"../services/notices\";\r\nimport * as productBase from \"../services/products\";\r\nimport * as catBase from \"../services/categories\";\r\n\r\nconst data = {\r\n    products: {\r\n        time: 0,\r\n        data: false,\r\n    },\r\n    notices: {\r\n        time: 0,\r\n        data: false,\r\n    },\r\n    categories: {\r\n        data: false,\r\n        time: 0,\r\n    },\r\n};\r\n\r\nconst timieCheck = async (data) => {\r\n    const now = Date.now();\r\n    const maxTime = 600000;\r\n    const result = now - data.time > maxTime;\r\n    if (result) data.time = now;\r\n    return result;\r\n};\r\n\r\nconst getOne = async (id, base, setData = null, setImage = null) => {\r\n    if (id) {\r\n        const response = await base.getOne(id);\r\n        if (!response.ok) throw Error;\r\n        if (!setData) return response.data;\r\n        setData(response.data);\r\n        if (setImage) setImage(response.data.images);\r\n    }\r\n    return true;\r\n};\r\n\r\nconst getOneNotice = async (id, setData, setImage) => {\r\n    return await getOne(id, noticeBase, setData, setImage);\r\n};\r\n\r\nconst getOneProduct = async (id, setData, setImage) => {\r\n    return await getOne(id, productBase, setData, setImage);\r\n};\r\n\r\nconst getNotices = async (setData = null) => {\r\n    (await timieCheck(data.notices)) && data.notices.data !== null\r\n        ? await noticeBase.get()\r\n        : data.notices.data;\r\n\r\n    data.notices.data = notices;\r\n    if (!Array.isArray(notices.data)) throw Error;\r\n    if (setData) return setData(notices.data);\r\n    return notices.data;\r\n};\r\n\r\nconst getProducts = async (setData = null) => {\r\n    const products =\r\n        (await timieCheck(data.products)) && data.products.data !== null\r\n            ? await productBase.get().data\r\n            : data.products.data;\r\n\r\n    console.log(products);\r\n    data.products.data = products;\r\n    if (!Array.isArray(products)) throw Error;\r\n    if (setData) return setData(products);\r\n    return products;\r\n};\r\n\r\nconst getCategories = async (withAll = false, setData = false) => {\r\n    (await timieCheck(data.categories)) && data.categories.data !== null\r\n        ? await noticeBase.get()\r\n        : data.categories.data;\r\n\r\n    data.categories.data = categories;\r\n\r\n    if (!Array.isArray(categories.data)) throw Error;\r\n    const result = withAll\r\n        ? [{ _id: \"0\", name: \"wszystkie\" }, ...categories.data]\r\n        : [...categories.data];\r\n\r\n    if (setData) return setData(result);\r\n    return result;\r\n};\r\n\r\nexport { getOneNotice, getOneProduct, getNotices, getProducts, getCategories };\r\n"]},"metadata":{},"sourceType":"module"}