{"ast":null,"code":"import { apiClient as client } from \"./client\";\nconst endpoint = \"/products\";\nconst config = {\n  onUploadProgress: progressEvent => console.log(progressEvent),\n  onDownloadProgress: progressEvent => console.log(progressEvent)\n};\n\nconst get = async () => await client.get(endpoint);\n\nconst getOne = async id => await client.get(`${endpoint}/${id}`);\n\nconst add = async body => await client.post(endpoint, body, config);\n\nconst edit = async (id, body) => await client.put(`${endpoint}/${id}`, body);\n\nconst remove = async body => await client.delete(endpoint + \"/\" + body);\n\nexport { get, add, edit, remove, getOne };","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/services/products.js"],"names":["apiClient","client","endpoint","config","onUploadProgress","progressEvent","console","log","onDownloadProgress","get","getOne","id","add","body","post","edit","put","remove","delete"],"mappings":"AAAA,SAASA,SAAS,IAAIC,MAAtB,QAAoC,UAApC;AAEA,MAAMC,QAAQ,GAAG,WAAjB;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,gBAAgB,EAAGC,aAAD,IAAmBC,OAAO,CAACC,GAAR,CAAYF,aAAZ,CAD1B;AAEXG,EAAAA,kBAAkB,EAAGH,aAAD,IAAmBC,OAAO,CAACC,GAAR,CAAYF,aAAZ;AAF5B,CAAf;;AAKA,MAAMI,GAAG,GAAG,YAAY,MAAMR,MAAM,CAACQ,GAAP,CAAWP,QAAX,CAA9B;;AAEA,MAAMQ,MAAM,GAAG,MAAOC,EAAP,IAAc,MAAMV,MAAM,CAACQ,GAAP,CAAY,GAAEP,QAAS,IAAGS,EAAG,EAA7B,CAAnC;;AAEA,MAAMC,GAAG,GAAG,MAAOC,IAAP,IAAgB,MAAMZ,MAAM,CAACa,IAAP,CAAYZ,QAAZ,EAAsBW,IAAtB,EAA4BV,MAA5B,CAAlC;;AAEA,MAAMY,IAAI,GAAG,OAAOJ,EAAP,EAAWE,IAAX,KAAoB,MAAMZ,MAAM,CAACe,GAAP,CAAY,GAAEd,QAAS,IAAGS,EAAG,EAA7B,EAAgCE,IAAhC,CAAvC;;AAEA,MAAMI,MAAM,GAAG,MAAOJ,IAAP,IAAgB,MAAMZ,MAAM,CAACiB,MAAP,CAAchB,QAAQ,GAAG,GAAX,GAAiBW,IAA/B,CAArC;;AAEA,SAASJ,GAAT,EAAcG,GAAd,EAAmBG,IAAnB,EAAyBE,MAAzB,EAAiCP,MAAjC","sourcesContent":["import { apiClient as client } from \"./client\";\r\n\r\nconst endpoint = \"/products\";\r\n\r\nconst config = {\r\n    onUploadProgress: (progressEvent) => console.log(progressEvent),\r\n    onDownloadProgress: (progressEvent) => console.log(progressEvent),\r\n};\r\n\r\nconst get = async () => await client.get(endpoint);\r\n\r\nconst getOne = async (id) => await client.get(`${endpoint}/${id}`);\r\n\r\nconst add = async (body) => await client.post(endpoint, body, config);\r\n\r\nconst edit = async (id, body) => await client.put(`${endpoint}/${id}`, body);\r\n\r\nconst remove = async (body) => await client.delete(endpoint + \"/\" + body);\r\n\r\nexport { get, add, edit, remove, getOne };\r\n"]},"metadata":{},"sourceType":"module"}