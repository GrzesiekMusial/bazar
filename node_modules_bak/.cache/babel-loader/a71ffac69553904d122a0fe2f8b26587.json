{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\app\\\\components\\\\board\\\\addBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Formik } from \"formik\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { validationSchema } from \"./models/board\";\nimport * as Forms from \"../common/form/forms\";\nimport * as base from \"../../../methods/data\";\nimport Spinner from \"../common/spinner\";\n\nconst AddBoard = props => {\n  _s();\n\n  const [image, setImage] = useState([]);\n  const [edit, setEdit] = useState(null);\n  const [load, setLoad] = useState(true);\n  const {\n    title,\n    history,\n    match\n  } = props;\n  useEffect(async () => {\n    try {\n      title(\"ogłoszenie\");\n      await base.getOneNotice(match.params.id, setEdit, setImage);\n      setLoad(false);\n    } catch (ex) {\n      history.push(\"/add\");\n    }\n  }, []);\n\n  const handleSave = async values => {\n    setLoad(true);\n    const result = await base.noticeSave(values, edit, image);\n    if (result) history.push(\"/board\");\n    setLoad(false);\n  };\n\n  const handleDelete = async id => {\n    console.log(id);\n    const result = image.filter(img => img !== id && img.name !== id);\n    console.log(result);\n    setImage(result);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: [load && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addBoard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addBoard__images\",\n          children: /*#__PURE__*/_jsxDEV(Forms.Image, {\n            handleChange: setImage,\n            preview: image,\n            handleDelete: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          enableReinitialize: true,\n          initialValues: edit ? {\n            text: edit.text,\n            title: edit.title\n          } : {\n            text: \"\",\n            title: \"\"\n          },\n          onSubmit: values => handleSave(values),\n          validationSchema: validationSchema,\n          children: ({}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Forms.Input, {\n              className: \"addBoard__title\",\n              name: \"title\",\n              placeholder: \"Nazwa\",\n              defaultValue: edit ? edit.title : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Forms.Text, {\n              className: \"addBoard__text\",\n              name: \"text\",\n              placeholder: \"Opis...\",\n              defaultValue: edit ? edit.text : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"addBoard__buttons\",\n              children: /*#__PURE__*/_jsxDEV(Forms.Submit, {\n                className: \"actionBtn\",\n                title: edit ? \"ZAPISZ\" : \"OPUBLIKUJ\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddBoard, \"mBocVgVQ0IqTV3d/lzovm3x+l0U=\");\n\n_c = AddBoard;\nexport default AddBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBoard\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/app/components/board/addBoard.jsx"],"names":["React","useEffect","useState","Formik","ToastContainer","validationSchema","Forms","base","Spinner","AddBoard","props","image","setImage","edit","setEdit","load","setLoad","title","history","match","getOneNotice","params","id","ex","push","handleSave","values","result","noticeSave","handleDelete","console","log","filter","img","name","text"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { validationSchema } from \"./models/board\";\r\n\r\nimport * as Forms from \"../common/form/forms\";\r\nimport * as base from \"../../../methods/data\";\r\nimport Spinner from \"../common/spinner\";\r\n\r\nconst AddBoard = (props) => {\r\n    const [image, setImage] = useState([]);\r\n    const [edit, setEdit] = useState(null);\r\n    const [load, setLoad] = useState(true);\r\n\r\n    const { title, history, match } = props;\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            title(\"ogłoszenie\");\r\n            await base.getOneNotice(match.params.id, setEdit, setImage);\r\n            setLoad(false);\r\n        } catch (ex) {\r\n            history.push(\"/add\");\r\n        }\r\n    }, []);\r\n\r\n    const handleSave = async (values) => {\r\n        setLoad(true);\r\n        const result = await base.noticeSave(values, edit, image);\r\n        if (result) history.push(\"/board\");\r\n        setLoad(false);\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        console.log(id);\r\n        const result = image.filter((img) => img !== id && img.name !== id);\r\n        console.log(result);\r\n        setImage(result);\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            {load && <Spinner />}\r\n            <ToastContainer />\r\n            <div className=\"screen__container\">\r\n                <div className=\"addBoard\">\r\n                    <div className=\"addBoard__images\">\r\n                        <Forms.Image\r\n                            handleChange={setImage}\r\n                            preview={image}\r\n                            handleDelete={handleDelete}\r\n                        />\r\n                    </div>\r\n\r\n                    <Formik\r\n                        enableReinitialize={true}\r\n                        initialValues={\r\n                            edit\r\n                                ? {\r\n                                      text: edit.text,\r\n                                      title: edit.title,\r\n                                  }\r\n                                : {\r\n                                      text: \"\",\r\n                                      title: \"\",\r\n                                  }\r\n                        }\r\n                        onSubmit={(values) => handleSave(values)}\r\n                        validationSchema={validationSchema}\r\n                    >\r\n                        {({}) => (\r\n                            <>\r\n                                <Forms.Input\r\n                                    className=\"addBoard__title\"\r\n                                    name=\"title\"\r\n                                    placeholder=\"Nazwa\"\r\n                                    defaultValue={edit ? edit.title : null}\r\n                                />\r\n                                <Forms.Text\r\n                                    className=\"addBoard__text\"\r\n                                    name=\"text\"\r\n                                    placeholder=\"Opis...\"\r\n                                    defaultValue={edit ? edit.text : null}\r\n                                />\r\n                                <div className=\"addBoard__buttons\">\r\n                                    <Forms.Submit\r\n                                        className=\"actionBtn\"\r\n                                        title={edit ? \"ZAPISZ\" : \"OPUBLIKUJ\"}\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddBoard;\r\n"]},"metadata":{},"sourceType":"module"}