{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\app\\\\components\\\\shop\\\\addProduct.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Formik } from \"formik\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { validationSchema } from \"./models/product\";\nimport config from \"../../config/config.json\";\nimport * as Forms from \"../common/form/forms\";\nimport * as base from \"../../../methods/data\";\nimport Spinner from \"./../common/spinner\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AddProduct = props => {\n  _s();\n\n  const {\n    title,\n    history,\n    match\n  } = props;\n  const [image, setImage] = useState([]);\n  const [categories, setCategories] = useState(null);\n  const [edit, setEdit] = useState(null);\n  const [load, setLoad] = useState(true);\n  const back = useHistory();\n  useEffect(async () => {\n    title(config.headers.newSell);\n    const cat = await base.getCategories();\n    if (!cat) return history.push(\"/add\");\n    setCategories(cat);\n    if (!(await base.getOneProduct(match.params.id, setEdit, setImage))) history.push(\"/add\");\n    setLoad(false);\n  }, []);\n\n  const handleSave = async values => {\n    const result = await base.productSave(values, edit, image);\n    if (props.location.back) return back.push(props.location.back, props.location.state);\n    setLoad(false);\n  };\n\n  const handleDelete = async id => {\n    const result = image.filter(img => img !== id && img.name !== id);\n    setImage(result);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: [load && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 22\n    }, this), categories && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addBoard\",\n        children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addBoard__images\",\n          children: /*#__PURE__*/_jsxDEV(Forms.Image, {\n            handleChange: setImage,\n            preview: image,\n            handleDelete: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          enableReinitialize: true,\n          initialValues: edit ? {\n            text: edit.text,\n            title: edit.title,\n            price: edit.price,\n            category: edit.category._id\n          } : {\n            text: \"\",\n            title: \"\",\n            price: \"\",\n            category: \"5fd8b9b913047e50104c37bd\"\n          },\n          onSubmit: values => {\n            handleSave(values, image);\n            setLoad(true);\n          },\n          validationSchema: validationSchema,\n          children: ({}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Forms.Input, {\n              className: \"addBoard__title\",\n              name: \"title\",\n              placeholder: config.info.title,\n              defaultValue: edit ? edit.title : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Forms.Text, {\n              className: \"addBoard__text\",\n              name: \"text\",\n              placeholder: config.info.description,\n              defaultValue: edit ? edit.text : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"addBoard__details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Forms.Input, {\n                  label: config.info.price,\n                  placeholder: config.info.price.toLowerCase(),\n                  name: \"price\",\n                  id: \"price\",\n                  className: \"addBoard__details--price\",\n                  defaultValue: edit ? edit.price : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: categories && /*#__PURE__*/_jsxDEV(Forms.Select, {\n                  label: config.info.category,\n                  arr: categories,\n                  id: \"category\",\n                  name: \"category\",\n                  className: \"addBoard__details--category\",\n                  defaultValue: edit ? edit.category._id : \"5fd8b9b913047e50104c37bd\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"addBoard__buttons\",\n              children: /*#__PURE__*/_jsxDEV(Forms.Submit, {\n                className: \"actionBtn\",\n                title: config.actions.save\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddProduct, \"0z4H79qilfrP8wVMmfnfs+ATmW0=\", false, function () {\n  return [useHistory];\n});\n\n_c = AddProduct;\nexport default AddProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/app/components/shop/addProduct.jsx"],"names":["React","useState","useEffect","Formik","ToastContainer","validationSchema","config","Forms","base","Spinner","useHistory","AddProduct","props","title","history","match","image","setImage","categories","setCategories","edit","setEdit","load","setLoad","back","headers","newSell","cat","getCategories","push","getOneProduct","params","id","handleSave","values","result","productSave","location","state","handleDelete","filter","img","name","text","price","category","_id","info","description","toLowerCase","actions","save"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAO,uCAAP;AAEA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAO,KAAKC,KAAZ,MAAuB,sBAAvB;AACA,OAAO,KAAKC,IAAZ,MAAsB,uBAAtB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA4BH,KAAlC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACqB,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,IAAD,CAAhC;AAEA,QAAMuB,IAAI,GAAGd,UAAU,EAAvB;AAEAR,EAAAA,SAAS,CAAC,YAAY;AAClBW,IAAAA,KAAK,CAACP,MAAM,CAACmB,OAAP,CAAeC,OAAhB,CAAL;AACA,UAAMC,GAAG,GAAG,MAAMnB,IAAI,CAACoB,aAAL,EAAlB;AACA,QAAI,CAACD,GAAL,EAAU,OAAOb,OAAO,CAACe,IAAR,CAAa,MAAb,CAAP;AACVV,IAAAA,aAAa,CAACQ,GAAD,CAAb;AAEA,QAAI,EAAE,MAAMnB,IAAI,CAACsB,aAAL,CAAmBf,KAAK,CAACgB,MAAN,CAAaC,EAAhC,EAAoCX,OAApC,EAA6CJ,QAA7C,CAAR,CAAJ,EACIH,OAAO,CAACe,IAAR,CAAa,MAAb;AAEJN,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMU,UAAU,GAAG,MAAOC,MAAP,IAAkB;AACjC,UAAMC,MAAM,GAAG,MAAM3B,IAAI,CAAC4B,WAAL,CAAiBF,MAAjB,EAAyBd,IAAzB,EAA+BJ,KAA/B,CAArB;AACA,QAAIJ,KAAK,CAACyB,QAAN,CAAeb,IAAnB,EACI,OAAOA,IAAI,CAACK,IAAL,CAAUjB,KAAK,CAACyB,QAAN,CAAeb,IAAzB,EAA+BZ,KAAK,CAACyB,QAAN,CAAeC,KAA9C,CAAP;AACJf,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GALD;;AAOA,QAAMgB,YAAY,GAAG,MAAOP,EAAP,IAAc;AAC/B,UAAMG,MAAM,GAAGnB,KAAK,CAACwB,MAAN,CAAcC,GAAD,IAASA,GAAG,KAAKT,EAAR,IAAcS,GAAG,CAACC,IAAJ,KAAaV,EAAjD,CAAf;AACAf,IAAAA,QAAQ,CAACkB,MAAD,CAAR;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,eACKb,IAAI,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADb,EAEKJ,UAAU,iBACP;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI,QAAC,KAAD,CAAO,KAAP;AACI,YAAA,YAAY,EAAED,QADlB;AAEI,YAAA,OAAO,EAAED,KAFb;AAGI,YAAA,YAAY,EAAEuB;AAHlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAWI,QAAC,MAAD;AACI,UAAA,kBAAkB,EAAE,IADxB;AAEI,UAAA,aAAa,EACTnB,IAAI,GACE;AACIuB,YAAAA,IAAI,EAAEvB,IAAI,CAACuB,IADf;AAEI9B,YAAAA,KAAK,EAAEO,IAAI,CAACP,KAFhB;AAGI+B,YAAAA,KAAK,EAAExB,IAAI,CAACwB,KAHhB;AAIIC,YAAAA,QAAQ,EAAEzB,IAAI,CAACyB,QAAL,CAAcC;AAJ5B,WADF,GAOE;AACIH,YAAAA,IAAI,EAAE,EADV;AAEI9B,YAAAA,KAAK,EAAE,EAFX;AAGI+B,YAAAA,KAAK,EAAE,EAHX;AAIIC,YAAAA,QAAQ,EAAE;AAJd,WAVd;AAiBI,UAAA,QAAQ,EAAGX,MAAD,IAAY;AAClBD,YAAAA,UAAU,CAACC,MAAD,EAASlB,KAAT,CAAV;AACAO,YAAAA,OAAO,CAAC,IAAD,CAAP;AACH,WApBL;AAqBI,UAAA,gBAAgB,EAAElB,gBArBtB;AAAA,oBAuBK,CAAC,EAAD,kBACG;AAAA,oCACI,QAAC,KAAD,CAAO,KAAP;AACI,cAAA,SAAS,EAAC,iBADd;AAEI,cAAA,IAAI,EAAC,OAFT;AAGI,cAAA,WAAW,EAAEC,MAAM,CAACyC,IAAP,CAAYlC,KAH7B;AAII,cAAA,YAAY,EAAEO,IAAI,GAAGA,IAAI,CAACP,KAAR,GAAgB;AAJtC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAQI,QAAC,KAAD,CAAO,IAAP;AACI,cAAA,SAAS,EAAC,gBADd;AAEI,cAAA,IAAI,EAAC,MAFT;AAGI,cAAA,WAAW,EAAEP,MAAM,CAACyC,IAAP,CAAYC,WAH7B;AAII,cAAA,YAAY,EAAE5B,IAAI,GAAGA,IAAI,CAACuB,IAAR,GAAe;AAJrC;AAAA;AAAA;AAAA;AAAA,oBARJ,eAeI;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,sCACI;AAAA,uCACI,QAAC,KAAD,CAAO,KAAP;AACI,kBAAA,KAAK,EAAErC,MAAM,CAACyC,IAAP,CAAYH,KADvB;AAEI,kBAAA,WAAW,EAAEtC,MAAM,CAACyC,IAAP,CAAYH,KAAZ,CAAkBK,WAAlB,EAFjB;AAGI,kBAAA,IAAI,EAAC,OAHT;AAII,kBAAA,EAAE,EAAC,OAJP;AAKI,kBAAA,SAAS,EAAC,0BALd;AAMI,kBAAA,YAAY,EACR7B,IAAI,GAAGA,IAAI,CAACwB,KAAR,GAAgB;AAP5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAcI;AAAA,0BACK1B,UAAU,iBACP,QAAC,KAAD,CAAO,MAAP;AACI,kBAAA,KAAK,EAAEZ,MAAM,CAACyC,IAAP,CAAYF,QADvB;AAEI,kBAAA,GAAG,EAAE3B,UAFT;AAGI,kBAAA,EAAE,EAAC,UAHP;AAII,kBAAA,IAAI,EAAC,UAJT;AAKI,kBAAA,SAAS,EAAC,6BALd;AAMI,kBAAA,YAAY,EACRE,IAAI,GACEA,IAAI,CAACyB,QAAL,CAAcC,GADhB,GAEE;AATd;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,sBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfJ,eA+CI;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,qCACI,QAAC,KAAD,CAAO,MAAP;AACI,gBAAA,SAAS,EAAC,WADd;AAEI,gBAAA,KAAK,EAAExC,MAAM,CAAC4C,OAAP,CAAeC;AAF1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBA/CJ;AAAA;AAxBR;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqGH,CAtID;;GAAMxC,U;UAOWD,U;;;KAPXC,U;AAwIN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { validationSchema } from \"./models/product\";\r\nimport config from \"../../config/config.json\";\r\n\r\nimport * as Forms from \"../common/form/forms\";\r\nimport * as base from \"../../../methods/data\";\r\nimport Spinner from \"./../common/spinner\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst AddProduct = (props) => {\r\n    const { title, history, match } = props;\r\n    const [image, setImage] = useState([]);\r\n    const [categories, setCategories] = useState(null);\r\n    const [edit, setEdit] = useState(null);\r\n    const [load, setLoad] = useState(true);\r\n\r\n    const back = useHistory();\r\n\r\n    useEffect(async () => {\r\n        title(config.headers.newSell);\r\n        const cat = await base.getCategories();\r\n        if (!cat) return history.push(\"/add\");\r\n        setCategories(cat);\r\n\r\n        if (!(await base.getOneProduct(match.params.id, setEdit, setImage)))\r\n            history.push(\"/add\");\r\n\r\n        setLoad(false);\r\n    }, []);\r\n\r\n    const handleSave = async (values) => {\r\n        const result = await base.productSave(values, edit, image);\r\n        if (props.location.back)\r\n            return back.push(props.location.back, props.location.state);\r\n        setLoad(false);\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        const result = image.filter((img) => img !== id && img.name !== id);\r\n        setImage(result);\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            {load && <Spinner />}\r\n            {categories && (\r\n                <div className=\"screen__container\">\r\n                    <div className=\"addBoard\">\r\n                        <ToastContainer />\r\n\r\n                        <div className=\"addBoard__images\">\r\n                            <Forms.Image\r\n                                handleChange={setImage}\r\n                                preview={image}\r\n                                handleDelete={handleDelete}\r\n                            />\r\n                        </div>\r\n\r\n                        <Formik\r\n                            enableReinitialize={true}\r\n                            initialValues={\r\n                                edit\r\n                                    ? {\r\n                                          text: edit.text,\r\n                                          title: edit.title,\r\n                                          price: edit.price,\r\n                                          category: edit.category._id,\r\n                                      }\r\n                                    : {\r\n                                          text: \"\",\r\n                                          title: \"\",\r\n                                          price: \"\",\r\n                                          category: \"5fd8b9b913047e50104c37bd\",\r\n                                      }\r\n                            }\r\n                            onSubmit={(values) => {\r\n                                handleSave(values, image);\r\n                                setLoad(true);\r\n                            }}\r\n                            validationSchema={validationSchema}\r\n                        >\r\n                            {({}) => (\r\n                                <>\r\n                                    <Forms.Input\r\n                                        className=\"addBoard__title\"\r\n                                        name=\"title\"\r\n                                        placeholder={config.info.title}\r\n                                        defaultValue={edit ? edit.title : null}\r\n                                    />\r\n\r\n                                    <Forms.Text\r\n                                        className=\"addBoard__text\"\r\n                                        name=\"text\"\r\n                                        placeholder={config.info.description}\r\n                                        defaultValue={edit ? edit.text : null}\r\n                                    />\r\n\r\n                                    <div className=\"addBoard__details\">\r\n                                        <div>\r\n                                            <Forms.Input\r\n                                                label={config.info.price}\r\n                                                placeholder={config.info.price.toLowerCase()}\r\n                                                name=\"price\"\r\n                                                id=\"price\"\r\n                                                className=\"addBoard__details--price\"\r\n                                                defaultValue={\r\n                                                    edit ? edit.price : null\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div>\r\n                                            {categories && (\r\n                                                <Forms.Select\r\n                                                    label={config.info.category}\r\n                                                    arr={categories}\r\n                                                    id=\"category\"\r\n                                                    name=\"category\"\r\n                                                    className=\"addBoard__details--category\"\r\n                                                    defaultValue={\r\n                                                        edit\r\n                                                            ? edit.category._id\r\n                                                            : \"5fd8b9b913047e50104c37bd\"\r\n                                                    }\r\n                                                />\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"addBoard__buttons\">\r\n                                        <Forms.Submit\r\n                                            className=\"actionBtn\"\r\n                                            title={config.actions.save}\r\n                                        />\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                        </Formik>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddProduct;\r\n"]},"metadata":{},"sourceType":"module"}