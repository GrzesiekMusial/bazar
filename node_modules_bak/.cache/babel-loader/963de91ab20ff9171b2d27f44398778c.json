{"ast":null,"code":"import { apiClient as client } from \"./client\";\nconst endpoint = \"/products\";\n\nconst get = async () => await client.get(endpoint, {\n  onUploadProgress: function (progressEvent) {\n    console.log(progressEvent.loaded);\n    var percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n    console.log(\"upload \", percentCompleted);\n  },\n  onDownloadProgress: function (progressEvent) {\n    var percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n    console.log(\"download \", percentCompleted);\n  }\n});\n\nconst getOne = async id => await client.get(`${endpoint}/${id}`);\n\nconst add = async (body) => await client.post(endpoint, body, {\n  onUploadProgress: function (progressEvent) {\n    console.log(progressEvent.loaded);\n    var percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n    console.log(\"upload \", percentCompleted);\n  },\n  onDownloadProgress: function (progressEvent) {\n    var percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n    console.log(\"download \", percentCompleted);\n  }\n});\n\nconst edit = async (id, body) => await client.put(`${endpoint}/${id}`, body);\n\nconst remove = async body => await client.delete(endpoint + \"/\" + body);\n\nexport { get, add, edit, remove, getOne };","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/services/products.js"],"names":["apiClient","client","endpoint","get","onUploadProgress","progressEvent","console","log","loaded","percentCompleted","Math","round","total","onDownloadProgress","getOne","id","add","body","post","edit","put","remove","delete"],"mappings":"AAAA,SAASA,SAAS,IAAIC,MAAtB,QAAoC,UAApC;AACA,MAAMC,QAAQ,GAAG,WAAjB;;AAEA,MAAMC,GAAG,GAAG,YACR,MAAMF,MAAM,CAACE,GAAP,CAAWD,QAAX,EAAqB;AACvBE,EAAAA,gBAAgB,EAAE,UAAUC,aAAV,EAAyB;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,aAAa,CAACG,MAA1B;AACA,QAAIC,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAClBN,aAAa,CAACG,MAAd,GAAuB,GAAxB,GAA+BH,aAAa,CAACO,KAD1B,CAAvB;AAIAN,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,gBAAvB;AACH,GARsB;AASvBI,EAAAA,kBAAkB,EAAE,UAAUR,aAAV,EAAyB;AACzC,QAAII,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAClBN,aAAa,CAACG,MAAd,GAAuB,GAAxB,GAA+BH,aAAa,CAACO,KAD1B,CAAvB;AAIAN,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBE,gBAAzB;AACH;AAfsB,CAArB,CADV;;AAmBA,MAAMK,MAAM,GAAG,MAAOC,EAAP,IAAc,MAAMd,MAAM,CAACE,GAAP,CAAY,GAAED,QAAS,IAAGa,EAAG,EAA7B,CAAnC;;AAEA,MAAMC,GAAG,GAAG,OAAOC,IAAP,KACR,MAAMhB,MAAM,CAACiB,IAAP,CAAYhB,QAAZ,EAAsBe,IAAtB,EAA4B;AAC9Bb,EAAAA,gBAAgB,EAAE,UAAUC,aAAV,EAAyB;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,aAAa,CAACG,MAA1B;AACA,QAAIC,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAClBN,aAAa,CAACG,MAAd,GAAuB,GAAxB,GAA+BH,aAAa,CAACO,KAD1B,CAAvB;AAIAN,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,gBAAvB;AACH,GAR6B;AAS9BI,EAAAA,kBAAkB,EAAE,UAAUR,aAAV,EAAyB;AACzC,QAAII,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAClBN,aAAa,CAACG,MAAd,GAAuB,GAAxB,GAA+BH,aAAa,CAACO,KAD1B,CAAvB;AAIAN,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBE,gBAAzB;AACH;AAf6B,CAA5B,CADV;;AAmBA,MAAMU,IAAI,GAAG,OAAOJ,EAAP,EAAWE,IAAX,KAAoB,MAAMhB,MAAM,CAACmB,GAAP,CAAY,GAAElB,QAAS,IAAGa,EAAG,EAA7B,EAAgCE,IAAhC,CAAvC;;AAEA,MAAMI,MAAM,GAAG,MAAOJ,IAAP,IAAgB,MAAMhB,MAAM,CAACqB,MAAP,CAAcpB,QAAQ,GAAG,GAAX,GAAiBe,IAA/B,CAArC;;AAEA,SAASd,GAAT,EAAca,GAAd,EAAmBG,IAAnB,EAAyBE,MAAzB,EAAiCP,MAAjC","sourcesContent":["import { apiClient as client } from \"./client\";\r\nconst endpoint = \"/products\";\r\n\r\nconst get = async () =>\r\n    await client.get(endpoint, {\r\n        onUploadProgress: function (progressEvent) {\r\n            console.log(progressEvent.loaded);\r\n            var percentCompleted = Math.round(\r\n                (progressEvent.loaded * 100) / progressEvent.total\r\n            );\r\n\r\n            console.log(\"upload \", percentCompleted);\r\n        },\r\n        onDownloadProgress: function (progressEvent) {\r\n            var percentCompleted = Math.round(\r\n                (progressEvent.loaded * 100) / progressEvent.total\r\n            );\r\n\r\n            console.log(\"download \", percentCompleted);\r\n        },\r\n    });\r\n\r\nconst getOne = async (id) => await client.get(`${endpoint}/${id}`);\r\n\r\nconst add = async (body) =>\r\n    await client.post(endpoint, body, {\r\n        onUploadProgress: function (progressEvent) {\r\n            console.log(progressEvent.loaded);\r\n            var percentCompleted = Math.round(\r\n                (progressEvent.loaded * 100) / progressEvent.total\r\n            );\r\n\r\n            console.log(\"upload \", percentCompleted);\r\n        },\r\n        onDownloadProgress: function (progressEvent) {\r\n            var percentCompleted = Math.round(\r\n                (progressEvent.loaded * 100) / progressEvent.total\r\n            );\r\n\r\n            console.log(\"download \", percentCompleted);\r\n        },\r\n    });\r\n\r\nconst edit = async (id, body) => await client.put(`${endpoint}/${id}`, body);\r\n\r\nconst remove = async (body) => await client.delete(endpoint + \"/\" + body);\r\n\r\nexport { get, add, edit, remove, getOne };\r\n"]},"metadata":{},"sourceType":"module"}