{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\app\\\\components\\\\user\\\\login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport config from \"../../config/config.json\";\nimport * as auth from \"../../../services/auth\";\nimport * as base from \"../../../methods/data\";\nimport LoginForm from \"./forms/loginForm\";\nimport Post from \"./../board/post\";\nimport Card from \"./../shop/card\";\nimport ButtonBack from \"./../common/form/buttonBack\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Login = props => {\n  _s();\n\n  const {\n    user,\n    title,\n    location\n  } = props;\n  const [posts, setPosts] = useState(null);\n  const [sell, setSell] = useState(null);\n  const [authorData, setAuthorData] = useState(null);\n\n  function redirect() {\n    window.location = location.state ? location.state.from.pathname : \"/login\";\n  }\n\n  useEffect(() => {\n    if (!posts && !sell) return;\n    const data = posts ? posts : sell;\n    console.log(data);\n    const result = data.filter(card => card.author && card.author._id == user._id);\n    console.log(result);\n    setAuthorData(result);\n  }, [posts, sell]);\n  useEffect(() => {\n    title(user ? config.headers.user : config.headers.login);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: [posts && /*#__PURE__*/_jsxDEV(Post, {\n      data: authorData,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }, this), sell && /*#__PURE__*/_jsxDEV(Card, {\n      data: authorData,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 22\n    }, this), (posts || sell) && /*#__PURE__*/_jsxDEV(ButtonBack, {\n      onClick: () => {\n        setPosts(null);\n        setSell(null);\n        setAuthorData(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), !authorData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: user && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: config.info.loggedAs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: user.login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"actionBtn\",\n            onClick: async () => setSell(await base.getProducts()),\n            children: config.user.sell\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"actionBtn\",\n            onClick: async () => setPosts(await base.getNotices()),\n            children: config.user.posts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"actionBtn\",\n          onClick: () => auth.logout(),\n          children: config.actions.logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) || !user && /*#__PURE__*/_jsxDEV(LoginForm, {\n        redirect: redirect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 35\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"DH8bAuzhdX+GRT8zViqPcQHJAgA=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/app/components/user/login.jsx"],"names":["React","useEffect","useState","config","auth","base","LoginForm","Post","Card","ButtonBack","NavLink","Login","props","user","title","location","posts","setPosts","sell","setSell","authorData","setAuthorData","redirect","window","state","from","pathname","data","console","log","result","filter","card","author","_id","headers","login","info","loggedAs","getProducts","getNotices","logout","actions"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport config from \"../../config/config.json\";\r\n\r\nimport * as auth from \"../../../services/auth\";\r\nimport * as base from \"../../../methods/data\";\r\n\r\nimport LoginForm from \"./forms/loginForm\";\r\nimport Post from \"./../board/post\";\r\nimport Card from \"./../shop/card\";\r\nimport ButtonBack from \"./../common/form/buttonBack\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n    const { user, title, location } = props;\r\n    const [posts, setPosts] = useState(null);\r\n    const [sell, setSell] = useState(null);\r\n    const [authorData, setAuthorData] = useState(null);\r\n\r\n    function redirect() {\r\n        window.location = location.state\r\n            ? location.state.from.pathname\r\n            : \"/login\";\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!posts && !sell) return;\r\n        const data = posts ? posts : sell;\r\n        console.log(data);\r\n        const result = data.filter(\r\n            (card) => card.author && card.author._id == user._id\r\n        );\r\n        console.log(result);\r\n        setAuthorData(result);\r\n    }, [posts, sell]);\r\n\r\n    useEffect(() => {\r\n        title(user ? config.headers.user : config.headers.login);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            {posts && <Post data={authorData} {...props} />}\r\n            {sell && <Card data={authorData} {...props} />}\r\n            {(posts || sell) && (\r\n                <ButtonBack\r\n                    onClick={() => {\r\n                        setPosts(null);\r\n                        setSell(null);\r\n                        setAuthorData(null);\r\n                    }}\r\n                />\r\n            )}\r\n\r\n            {!authorData && (\r\n                <div className=\"login\">\r\n                    {(user && (\r\n                        <>\r\n                            <div className=\"login__info\">\r\n                                <div>{config.info.loggedAs}</div>\r\n                                <div>{user.login}</div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <button\r\n                                    className=\"actionBtn\"\r\n                                    onClick={async () =>\r\n                                        setSell(await base.getProducts())\r\n                                    }\r\n                                >\r\n                                    {config.user.sell}\r\n                                </button>\r\n\r\n                                <button\r\n                                    className=\"actionBtn\"\r\n                                    onClick={async () =>\r\n                                        setPosts(await base.getNotices())\r\n                                    }\r\n                                >\r\n                                    {config.user.posts}\r\n                                </button>\r\n                            </div>\r\n                            <button\r\n                                className=\"actionBtn\"\r\n                                onClick={() => auth.logout()}\r\n                            >\r\n                                {config.actions.logout}\r\n                            </button>\r\n                        </>\r\n                    )) ||\r\n                        (!user && <LoginForm redirect={redirect} />)}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}