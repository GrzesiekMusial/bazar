{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport * as noticeBase from \"../services/notices\";\nimport * as productBase from \"../services/products\";\n\nconst noticeSave = async (item, edit, image) => {\n  return await save(item, edit, image, noticeBase);\n};\n\nconst productSave = async (item, edit, image) => {\n  item.price = await checkPrice(item.price);\n  item.images = await checkImage(image);\n  return await save(item, edit, image, productBase);\n};\n\nconst save = async (item, edit, image, base) => {\n  const form = new FormData();\n  console.log(\"IMAGES \", item.images);\n  console.log(item.images, \"IMAGES\");\n  if (item.images.new.length > 0) item.images.new.forEach(img => form.append(\"file\", img));\n  form.append(\"title\", item.title);\n  form.append(\"text\", item.text);\n  form.append(\"price\", item.price);\n  form.append(\"category\", item.category);\n\n  if (edit) {\n    if (item.images.old.length > 0) form.append(\"images\", item.images.old);\n    form.append(\"_id\", edit._id);\n    console.log(form);\n    const response = await base.edit(edit._id, form);\n    if (!response.ok) throw toast.error(\"Error occured on saving!\");\n    return response.data;\n  }\n\n  const response = await base.add(form);\n  if (!response.ok) throw toast.error(response.data);\n  return response.data;\n};\n\nconst checkImage = async images => {\n  const result = {\n    old: [],\n    new: []\n  };\n  await images.forEach(img => typeof img === \"string\" ? result.old.push(img) : result.new.push(img));\n  return result;\n};\n\nconst checkPrice = async price => {\n  try {\n    if (price) {\n      price = price.trim();\n      price = +parseFloat(price).toFixed(2);\n    } else {\n      price = 0;\n    }\n  } catch (e) {}\n\n  price = price.toString();\n  return price;\n};\n\nexport { noticeSave, productSave };","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/methods/save.js"],"names":["toast","noticeBase","productBase","noticeSave","item","edit","image","save","productSave","price","checkPrice","images","checkImage","base","form","FormData","console","log","new","length","forEach","img","append","title","text","category","old","_id","response","ok","error","data","add","result","push","trim","parseFloat","toFixed","e","toString"],"mappings":"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","sourcesContent":["import { toast } from \"react-toastify\";\r\n\r\nimport * as noticeBase from \"../services/notices\";\r\nimport * as productBase from \"../services/products\";\r\n\r\nconst noticeSave = async (item, edit, image) => {\r\n    return await save(item, edit, image, noticeBase);\r\n};\r\n\r\nconst productSave = async (item, edit, image) => {\r\n    item.price = await checkPrice(item.price);\r\n    item.images = await checkImage(image);\r\n    return await save(item, edit, image, productBase);\r\n};\r\n\r\nconst save = async (item, edit, image, base) => {\r\n    const form = new FormData();\r\n    console.log(\"IMAGES \", item.images);\r\n    console.log(item.images, \"IMAGES\");\r\n    if (item.images.new.length > 0)\r\n        item.images.new.forEach((img) => form.append(\"file\", img));\r\n    form.append(\"title\", item.title);\r\n    form.append(\"text\", item.text);\r\n    form.append(\"price\", item.price);\r\n    form.append(\"category\", item.category);\r\n\r\n    if (edit) {\r\n        if (item.images.old.length > 0) form.append(\"images\", item.images.old);\r\n        form.append(\"_id\", edit._id);\r\n\r\n        console.log(form);\r\n        const response = await base.edit(edit._id, form);\r\n        if (!response.ok) throw toast.error(\"Error occured on saving!\");\r\n        return response.data;\r\n    }\r\n\r\n    const response = await base.add(form);\r\n    if (!response.ok) throw toast.error(response.data);\r\n    return response.data;\r\n};\r\n\r\nconst checkImage = async (images) => {\r\n    const result = { old: [], new: [] };\r\n\r\n    await images.forEach((img) =>\r\n        typeof img === \"string\" ? result.old.push(img) : result.new.push(img)\r\n    );\r\n\r\n    return result;\r\n};\r\n\r\nconst checkPrice = async (price) => {\r\n    try {\r\n        if (price) {\r\n            price = price.trim();\r\n            price = +parseFloat(price).toFixed(2);\r\n        } else {\r\n            price = 0;\r\n        }\r\n    } catch (e) {}\r\n    price = price.toString();\r\n    return price;\r\n};\r\n\r\nexport { noticeSave, productSave };\r\n"]},"metadata":{},"sourceType":"module"}