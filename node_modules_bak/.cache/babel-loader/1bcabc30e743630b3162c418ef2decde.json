{"ast":null,"code":"import { create } from \"apisauce\";\nconst apiClient = create({\n  baseURL: \"http://192.168.56.1:3000\"\n});\napiClient.setHeader(\"x-auth-token\", localStorage.getItem(\"token\"));\napi.axiosInstance.interceptors.request.use(config => {\n  var _localStorage;\n\n  const token = JSON.parse((_localStorage = localStorage) === null || _localStorage === void 0 ? void 0 : _localStorage.getItem(\"token\")) || {};\n\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  } // config.headers['Content-Type'] = 'application/json';\n\n\n  return config;\n}, error => {\n  Promise.reject(error);\n});\nexport { apiClient };","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/services/client.js"],"names":["create","apiClient","baseURL","setHeader","localStorage","getItem","api","axiosInstance","interceptors","request","use","config","token","JSON","parse","headers","Authorization","error","Promise","reject"],"mappings":"AAAA,SAASA,MAAT,QAAuB,UAAvB;AAEA,MAAMC,SAAS,GAAGD,MAAM,CAAC;AACrBE,EAAAA,OAAO,EAAE;AADY,CAAD,CAAxB;AAIAD,SAAS,CAACE,SAAV,CAAoB,cAApB,EAAoCC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApC;AAEAC,GAAG,CAACC,aAAJ,CAAkBC,YAAlB,CAA+BC,OAA/B,CAAuCC,GAAvC,CACKC,MAAD,IAAY;AAAA;;AACR,QAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,kBAAWV,YAAX,kDAAW,cAAcC,OAAd,CAAsB,OAAtB,CAAX,KAA8C,EAA5D;;AACA,MAAIO,KAAJ,EAAW;AACPD,IAAAA,MAAM,CAACI,OAAP,CAAeC,aAAf,GAAgC,UAASJ,KAAM,EAA/C;AACH,GAJO,CAKR;;;AACA,SAAOD,MAAP;AACH,CARL,EASKM,KAAD,IAAW;AACPC,EAAAA,OAAO,CAACC,MAAR,CAAeF,KAAf;AACH,CAXL;AAcA,SAAShB,SAAT","sourcesContent":["import { create } from \"apisauce\";\r\n\r\nconst apiClient = create({\r\n    baseURL: \"http://192.168.56.1:3000\",\r\n});\r\n\r\napiClient.setHeader(\"x-auth-token\", localStorage.getItem(\"token\"));\r\n\r\napi.axiosInstance.interceptors.request.use(\r\n    (config) => {\r\n        const token = JSON.parse(localStorage?.getItem(\"token\")) || {};\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        // config.headers['Content-Type'] = 'application/json';\r\n        return config;\r\n    },\r\n    (error) => {\r\n        Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport { apiClient };\r\n"]},"metadata":{},"sourceType":"module"}