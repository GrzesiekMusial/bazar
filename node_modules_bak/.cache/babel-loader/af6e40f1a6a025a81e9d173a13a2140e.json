{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\app\\\\components\\\\addBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport * as noticeBase from \"../../api/notices\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport AddTextBox from \"./common/form/addTextBox\";\nimport AddInputBox from \"./common/form/addInputBox.jsx\";\nimport AddSubmitButton from \"./common/form/submitButton.jsx\";\nimport MultiImageInput from \"react-multiple-image-input\";\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required().min(3).max(120),\n  text: Yup.string().max(6000)\n});\n\nconst AddBoard = props => {\n  _s();\n\n  useEffect(() => {\n    props.title(\"ogłoszenie\");\n  }, []);\n  const [image, setImage] = useState([]);\n\n  const handleSave = async (item, image) => {\n    const response = await noticeBase.add(item);\n    response.ok ? props.history.push(`/board`) : toast.error(\"Error occured on saving!\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"screen__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addBoard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"multipleImages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MultiImageInput, {\n    allowCrop: false,\n    max: 6,\n    images: image,\n    setImages: setImage,\n    theme: {\n      margin: \"0\",\n      background: \"unset\",\n      outlineColor: \"#262a33\",\n      textColor: \"rgba(255,255,255,0.6)\",\n      buttonColor: \"#ff0e1f\",\n      modalColor: \"#ffffff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      text: \"\",\n      title: \"\"\n    },\n    onSubmit: values => handleSave(values, image),\n    validationSchema: validationSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, ({\n    handleSubmit\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AddInputBox, {\n    className: \"addBoard__title\",\n    name: \"title\",\n    placeholder: \"Nazwa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(AddTextBox, {\n    className: \"addBoard__text\",\n    name: \"text\",\n    placeholder: \"Opis...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addBoard__buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(AddSubmitButton, {\n    className: \"actionBtn\",\n    title: \"OPUBLIKUJ\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 37\n    }\n  })))))));\n};\n\n_s(AddBoard, \"rFyB9n+3mE5qAYE6oMJslkQgV8U=\");\n\n_c = AddBoard;\nexport default AddBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBoard\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/app/components/addBoard.jsx"],"names":["React","useEffect","useState","noticeBase","toast","ToastContainer","Formik","Yup","AddTextBox","AddInputBox","AddSubmitButton","MultiImageInput","validationSchema","object","shape","title","string","required","min","max","text","AddBoard","props","image","setImage","handleSave","item","response","add","ok","history","push","error","margin","background","outlineColor","textColor","buttonColor","modalColor","values","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport * as noticeBase from \"../../api/notices\";\r\n\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport AddTextBox from \"./common/form/addTextBox\";\r\nimport AddInputBox from \"./common/form/addInputBox.jsx\";\r\nimport AddSubmitButton from \"./common/form/submitButton.jsx\";\r\nimport MultiImageInput from \"react-multiple-image-input\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    title: Yup.string().required().min(3).max(120),\r\n    text: Yup.string().max(6000),\r\n});\r\n\r\nconst AddBoard = (props) => {\r\n    useEffect(() => {\r\n        props.title(\"ogłoszenie\");\r\n    }, []);\r\n\r\n    const [image, setImage] = useState([]);\r\n\r\n    const handleSave = async (item, image) => {\r\n        const response = await noticeBase.add(item);\r\n\r\n        response.ok\r\n            ? props.history.push(`/board`)\r\n            : toast.error(\"Error occured on saving!\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            <div className=\"screen__container\">\r\n                <div className=\"addBoard\">\r\n                    <div className=\"multipleImages\">\r\n                        <MultiImageInput\r\n                            allowCrop={false}\r\n                            max={6}\r\n                            images={image}\r\n                            setImages={setImage}\r\n                            theme={{\r\n                                margin: \"0\",\r\n                                background: \"unset\",\r\n                                outlineColor: \"#262a33\",\r\n                                textColor: \"rgba(255,255,255,0.6)\",\r\n                                buttonColor: \"#ff0e1f\",\r\n                                modalColor: \"#ffffff\",\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n                    <Formik\r\n                        initialValues={{ text: \"\", title: \"\" }}\r\n                        onSubmit={(values) => handleSave(values, image)}\r\n                        validationSchema={validationSchema}\r\n                    >\r\n                        {({ handleSubmit }) => (\r\n                            <>\r\n                                <AddInputBox\r\n                                    className=\"addBoard__title\"\r\n                                    name=\"title\"\r\n                                    placeholder=\"Nazwa\"\r\n                                />\r\n                                <AddTextBox\r\n                                    className=\"addBoard__text\"\r\n                                    name=\"text\"\r\n                                    placeholder=\"Opis...\"\r\n                                />\r\n                                <div className=\"addBoard__buttons\">\r\n                                    <AddSubmitButton\r\n                                        className=\"actionBtn\"\r\n                                        title=\"OPUBLIKUJ\"\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddBoard;\r\n"]},"metadata":{},"sourceType":"module"}