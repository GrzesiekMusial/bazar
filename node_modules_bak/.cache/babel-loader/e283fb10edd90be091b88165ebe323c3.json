{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\app\\\\components\\\\addBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport * as noticeBase from \"../../api/notices\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Formik } from \"formik\";\nimport * as imagesBase from \"../../api/images\";\nimport AddTextBox from \"./common/form/addTextBox\";\nimport AddInputBox from \"./common/form/addInputBox.jsx\";\nimport AddSubmitButton from \"./common/form/submitButton.jsx\";\nimport ImageInput from \"./common/form/imageInput\";\nimport { validationSchema } from \"./models/board\";\n\nconst AddBoard = props => {\n  _s();\n\n  const [image, setImage] = useState([]);\n  const [edit, setEdit] = useState(null);\n  useEffect(() => {\n    props.title(\"ogÅ‚oszenie\");\n    checkEdit();\n  }, []);\n\n  const checkEdit = async () => {\n    if (props.match.params.id) {\n      const response = await noticeBase.notice(props.match.params.id);\n      if (!response.ok) return;\n      setEdit(response.data);\n    }\n  };\n\n  const handleSave = async (item, edit, image, base, redirect) => {\n    if (image.length > 0 && typeof image[0] !== \"string\") {\n      if (edit) {\n        edit.images.forEach(img => imagesBase.remove(img));\n      }\n\n      const images = await uploadImage(image);\n      if (images.ok) item.images = images.data;else return toast.error(\"Error occured on saving! first\");\n    }\n\n    if (edit) {\n      item._id = edit._id;\n      const response = await base.edit(item);\n      response.ok ? props.history.push(redirect) : toast.error(\"Error occured on saving! second\");\n      return;\n    }\n\n    const response = await base.add(item);\n    response.ok ? props.history.push(redirect) : toast.error(\"Error occured on saving! third\");\n  };\n\n  const uploadImage = image => {\n    const form = new FormData();\n    image.forEach(img => form.append(\"image\", img));\n    return imagesBase.add(form);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addBoard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addBoard__images\",\n          children: /*#__PURE__*/_jsxDEV(ImageInput, {\n            handleChange: setImage,\n            preview: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          enableReinitialize: true,\n          initialValues: edit ? {\n            text: edit.text,\n            title: edit.title\n          } : {\n            text: \"\",\n            title: \"\"\n          },\n          onSubmit: values => handleSave(values, edit, image, noticeBase, \"/board\"),\n          validationSchema: validationSchema,\n          children: ({}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(AddInputBox, {\n              className: \"addBoard__title\",\n              name: \"title\",\n              placeholder: \"Nazwa\",\n              defaultValue: edit ? edit.title : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(AddTextBox, {\n              className: \"addBoard__text\",\n              name: \"text\",\n              placeholder: \"Opis...\",\n              defaultValue: edit ? edit.text : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"addBoard__buttons\",\n              children: /*#__PURE__*/_jsxDEV(AddSubmitButton, {\n                className: \"actionBtn\",\n                title: edit ? \"ZAPISZ\" : \"OPUBLIKUJ\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddBoard, \"IuQ/Mg+awQ76U122wcKnM2HKDp8=\");\n\n_c = AddBoard;\nexport default AddBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBoard\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/app/components/addBoard.jsx"],"names":["React","useEffect","useState","noticeBase","toast","ToastContainer","Formik","imagesBase","AddTextBox","AddInputBox","AddSubmitButton","ImageInput","validationSchema","AddBoard","props","image","setImage","edit","setEdit","title","checkEdit","match","params","id","response","notice","ok","data","handleSave","item","base","redirect","length","images","forEach","img","remove","uploadImage","error","_id","history","push","add","form","FormData","append","text","values"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport * as noticeBase from \"../../api/notices\";\r\n\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { Formik } from \"formik\";\r\n\r\nimport * as imagesBase from \"../../api/images\";\r\n\r\nimport AddTextBox from \"./common/form/addTextBox\";\r\nimport AddInputBox from \"./common/form/addInputBox.jsx\";\r\nimport AddSubmitButton from \"./common/form/submitButton.jsx\";\r\nimport ImageInput from \"./common/form/imageInput\";\r\n\r\nimport { validationSchema } from \"./models/board\";\r\n\r\nconst AddBoard = (props) => {\r\n    const [image, setImage] = useState([]);\r\n    const [edit, setEdit] = useState(null);\r\n\r\n    useEffect(() => {\r\n        props.title(\"ogÅ‚oszenie\");\r\n        checkEdit();\r\n    }, []);\r\n\r\n    const checkEdit = async () => {\r\n        if (props.match.params.id) {\r\n            const response = await noticeBase.notice(props.match.params.id);\r\n            if (!response.ok) return;\r\n            setEdit(response.data);\r\n        }\r\n    };\r\n\r\n    const handleSave = async (item, edit, image, base, redirect) => {\r\n        if (image.length > 0 && typeof image[0] !== \"string\") {\r\n            if (edit) {\r\n                edit.images.forEach((img) => imagesBase.remove(img));\r\n            }\r\n\r\n            const images = await uploadImage(image);\r\n            if (images.ok) item.images = images.data;\r\n            else return toast.error(\"Error occured on saving! first\");\r\n        }\r\n\r\n        if (edit) {\r\n            item._id = edit._id;\r\n            const response = await base.edit(item);\r\n            response.ok\r\n                ? props.history.push(redirect)\r\n                : toast.error(\"Error occured on saving! second\");\r\n\r\n            return;\r\n        }\r\n\r\n        const response = await base.add(item);\r\n\r\n        response.ok\r\n            ? props.history.push(redirect)\r\n            : toast.error(\"Error occured on saving! third\");\r\n    };\r\n\r\n    const uploadImage = (image) => {\r\n        const form = new FormData();\r\n        image.forEach((img) => form.append(\"image\", img));\r\n\r\n        return imagesBase.add(form);\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            <div className=\"screen__container\">\r\n                <div className=\"addBoard\">\r\n                    <div className=\"addBoard__images\">\r\n                        <ImageInput handleChange={setImage} preview={image} />\r\n                    </div>\r\n\r\n                    <Formik\r\n                        enableReinitialize={true}\r\n                        initialValues={\r\n                            edit\r\n                                ? {\r\n                                      text: edit.text,\r\n                                      title: edit.title,\r\n                                  }\r\n                                : {\r\n                                      text: \"\",\r\n                                      title: \"\",\r\n                                  }\r\n                        }\r\n                        onSubmit={(values) =>\r\n                            handleSave(\r\n                                values,\r\n                                edit,\r\n                                image,\r\n                                noticeBase,\r\n                                \"/board\"\r\n                            )\r\n                        }\r\n                        validationSchema={validationSchema}\r\n                    >\r\n                        {({}) => (\r\n                            <>\r\n                                <AddInputBox\r\n                                    className=\"addBoard__title\"\r\n                                    name=\"title\"\r\n                                    placeholder=\"Nazwa\"\r\n                                    defaultValue={edit ? edit.title : null}\r\n                                />\r\n                                <AddTextBox\r\n                                    className=\"addBoard__text\"\r\n                                    name=\"text\"\r\n                                    placeholder=\"Opis...\"\r\n                                    defaultValue={edit ? edit.text : null}\r\n                                />\r\n                                <div className=\"addBoard__buttons\">\r\n                                    <AddSubmitButton\r\n                                        className=\"actionBtn\"\r\n                                        title={edit ? \"ZAPISZ\" : \"OPUBLIKUJ\"}\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddBoard;\r\n"]},"metadata":{},"sourceType":"module"}