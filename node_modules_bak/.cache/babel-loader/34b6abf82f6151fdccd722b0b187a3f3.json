{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\app\\\\components\\\\shop\\\\productDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ImageSlider from \"../common/imageSlider\";\nimport AcceptModal from \"../common/modal\";\nimport * as Forms from \"../common/form/forms\";\nimport * as base from \"../../../methods/data\";\nimport { Form } from \"formik\";\n\nfunction ProductDetails(props) {\n  _s();\n\n  const {\n    user,\n    renderImage,\n    title,\n    history,\n    match\n  } = props;\n  const [card, setCard] = useState(null);\n  const [modal, setModal] = useState(false);\n  useEffect(async () => {\n    if (!(await base.getOneProduct(match.params.id, setCard, null))) history.push(\"/bazar\");\n  }, []);\n  useEffect(() => {\n    if (card) title(card.title);\n  }, [card]);\n\n  const handleDelete = async card => {\n    base.productDelete();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: [/*#__PURE__*/_jsxDEV(NavLink, {\n      to: {\n        pathname: path,\n        state: history.location.state\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Forms.Back, {\n      path: \"/bazar\",\n      history: history,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), card && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productDetails__image\",\n        children: /*#__PURE__*/_jsxDEV(ImageSlider, {\n          images: card.images,\n          handleClick: (i, index, arr) => renderImage(arr, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productDetails__details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: card.author.name ? card.author.name : card.author.login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: card.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), card.price !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productDetails__image--price\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [card.price, \" z\\u0142\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productDetails__text\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", card.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), modal && /*#__PURE__*/_jsxDEV(AcceptModal, {\n        close: setModal,\n        accept: () => handleDelete(card),\n        title: `Potwierdź operację usunięcia ${card.title}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this), user && user._id === card.author._id && !modal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productDetails__buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"actionBtn edit\",\n          onClick: () => history.push(`edit/${card._id}`),\n          children: \"EDYTUJ\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"actionBtn delete\",\n          onClick: () => setModal(true),\n          children: \"USU\\u0143\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductDetails, \"ZdNJBE+I18fvPbI+Nt5rR4kFP3E=\");\n\n_c = ProductDetails;\nexport default ProductDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductDetails\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/app/components/shop/productDetails.jsx"],"names":["React","useEffect","useState","ToastContainer","ImageSlider","AcceptModal","Forms","base","Form","ProductDetails","props","user","renderImage","title","history","match","card","setCard","modal","setModal","getOneProduct","params","id","push","handleDelete","productDelete","pathname","path","state","location","images","i","index","arr","author","name","login","date","price","text","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport ImageSlider from \"../common/imageSlider\";\r\nimport AcceptModal from \"../common/modal\";\r\n\r\nimport * as Forms from \"../common/form/forms\";\r\nimport * as base from \"../../../methods/data\";\r\nimport { Form } from \"formik\";\r\n\r\nfunction ProductDetails(props) {\r\n    const { user, renderImage, title, history, match } = props;\r\n    const [card, setCard] = useState(null);\r\n    const [modal, setModal] = useState(false);\r\n\r\n    useEffect(async () => {\r\n        if (!(await base.getOneProduct(match.params.id, setCard, null)))\r\n            history.push(\"/bazar\");\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (card) title(card.title);\r\n    }, [card]);\r\n\r\n    const handleDelete = async (card) => {\r\n        base.productDelete();\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            <NavLink\r\n                to={{\r\n                    pathname: path,\r\n                    state: history.location.state,\r\n                }}\r\n            ></NavLink>\r\n            <Forms.Back path=\"/bazar\" history={history} {...props} />\r\n            <ToastContainer />\r\n            {card && (\r\n                <div className=\"screen__container\">\r\n                    <div className=\"productDetails__image\">\r\n                        <ImageSlider\r\n                            images={card.images}\r\n                            handleClick={(i, index, arr) =>\r\n                                renderImage(arr, index)\r\n                            }\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"productDetails__details\">\r\n                        <p>\r\n                            {card.author.name\r\n                                ? card.author.name\r\n                                : card.author.login}\r\n                        </p>\r\n                        <p>{card.date}</p>\r\n                    </div>\r\n                    {card.price !== 0 && (\r\n                        <div className=\"productDetails__image--price\">\r\n                            <span>{card.price} zł</span>\r\n                        </div>\r\n                    )}\r\n                    <div className=\"productDetails__text\">\r\n                        <p> {card.text}</p>\r\n                    </div>\r\n\r\n                    {modal && (\r\n                        <AcceptModal\r\n                            close={setModal}\r\n                            accept={() => handleDelete(card)}\r\n                            title={`Potwierdź operację usunięcia ${card.title}`}\r\n                        />\r\n                    )}\r\n\r\n                    {user && user._id === card.author._id && !modal && (\r\n                        <div className=\"productDetails__buttons\">\r\n                            <button\r\n                                className=\"actionBtn edit\"\r\n                                onClick={() => history.push(`edit/${card._id}`)}\r\n                            >\r\n                                EDYTUJ\r\n                            </button>\r\n                            <button\r\n                                className=\"actionBtn delete\"\r\n                                onClick={() => setModal(true)}\r\n                            >\r\n                                USUŃ\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductDetails;\r\n"]},"metadata":{},"sourceType":"module"}