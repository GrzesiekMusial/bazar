{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\app\\\\components\\\\user\\\\register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { pick } from \"lodash\";\nimport { setToken } from \"../../api/client\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport * as userBase from \"../../../api/users\";\nimport AddInputBox from \"./common/form/addInputBox.jsx\";\nimport AddSubmitButton from \"./common/form/submitButton.jsx\";\nimport { Redirect } from \"react-router-dom\";\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().trim().required(\"Podaj email.\").label(\"Email\").email(),\n  login: Yup.string().trim().required(\"Podaj login.\").min(5).max(120).label(\"Login\"),\n  password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\"),\n  confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\").required(\"Confirm Password is required\")\n});\n\nconst Register = props => {\n  _s();\n\n  useEffect(() => {\n    props.title(\"register\");\n  }, []);\n\n  const handleRegister = async user => {\n    user = pick(user, [\"login\", \"email\", \"password\"]);\n    const response = await userBase.add(user);\n\n    if (response.ok) {\n      localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\n      window.location = \"/\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\",\n        login: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      },\n      onSubmit: values => handleRegister(values),\n      validationSchema: validationSchema,\n      children: ({}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login__buttons\",\n            children: [/*#__PURE__*/_jsxDEV(AddInputBox, {\n              name: \"email\",\n              label: \"Email\",\n              placeholder: \"Email...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(AddInputBox, {\n              label: \"Login\",\n              name: \"login\",\n              placeholder: \"Login...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(AddInputBox, {\n              label: \"Password\",\n              name: \"password\",\n              type: \"password\",\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(AddInputBox, {\n              label: \"Password\",\n              name: \"confirmPassword\",\n              type: \"password\",\n              placeholder: \"Confirm password...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(AddSubmitButton, {\n            className: \"actionBtn\",\n            title: \"REGISTER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/app/components/user/register.jsx"],"names":["React","useEffect","pick","setToken","Formik","Yup","userBase","AddInputBox","AddSubmitButton","Redirect","validationSchema","object","shape","email","string","trim","required","label","login","min","max","password","confirmPassword","oneOf","ref","Register","props","title","handleRegister","user","response","add","ok","localStorage","setItem","headers","window","location","values"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { pick } from \"lodash\";\r\n\r\nimport { setToken } from \"../../api/client\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport * as userBase from \"../../../api/users\";\r\n\r\nimport AddInputBox from \"./common/form/addInputBox.jsx\";\r\nimport AddSubmitButton from \"./common/form/submitButton.jsx\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    email: Yup.string().trim().required(\"Podaj email.\").label(\"Email\").email(),\r\n    login: Yup.string()\r\n        .trim()\r\n        .required(\"Podaj login.\")\r\n        .min(5)\r\n        .max(120)\r\n        .label(\"Login\"),\r\n    password: Yup.string()\r\n        .min(6, \"Password must be at least 6 characters\")\r\n        .required(\"Password is required\"),\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n        .required(\"Confirm Password is required\"),\r\n});\r\n\r\nconst Register = (props) => {\r\n    useEffect(() => {\r\n        props.title(\"register\");\r\n    }, []);\r\n\r\n    const handleRegister = async (user) => {\r\n        user = pick(user, [\"login\", \"email\", \"password\"]);\r\n        const response = await userBase.add(user);\r\n\r\n        if (response.ok) {\r\n            localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\r\n\r\n            window.location = \"/\";\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            <Formik\r\n                initialValues={{\r\n                    email: \"\",\r\n                    login: \"\",\r\n                    password: \"\",\r\n                    confirmPassword: \"\",\r\n                }}\r\n                onSubmit={(values) => handleRegister(values)}\r\n                validationSchema={validationSchema}\r\n            >\r\n                {({}) => (\r\n                    <>\r\n                        <div className=\"login\">\r\n                            <div className=\"login__buttons\">\r\n                                <AddInputBox\r\n                                    name=\"email\"\r\n                                    label=\"Email\"\r\n                                    placeholder=\"Email...\"\r\n                                />\r\n\r\n                                <AddInputBox\r\n                                    label=\"Login\"\r\n                                    name=\"login\"\r\n                                    placeholder=\"Login...\"\r\n                                />\r\n                                <AddInputBox\r\n                                    label=\"Password\"\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                />\r\n                                <AddInputBox\r\n                                    label=\"Password\"\r\n                                    name=\"confirmPassword\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"Confirm password...\"\r\n                                />\r\n                            </div>\r\n\r\n                            <AddSubmitButton\r\n                                className=\"actionBtn\"\r\n                                title=\"REGISTER\"\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}