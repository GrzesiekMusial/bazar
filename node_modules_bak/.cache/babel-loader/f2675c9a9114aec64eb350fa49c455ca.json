{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\app\\\\components\\\\shop\\\\productCards.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Img from \"../common/imageLoader\";\nimport * as catBase from \"../../../api/categories\";\nimport * as prodBase from \"../../../api/products\";\nimport { dataFilter } from \"../../../methods/filter\";\nimport \"react-dropdown/style.css\";\nimport SearchBox from \"../common/searchBox\";\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\n\nfunction ProductCards(props) {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [categories, setCategories] = useState(null);\n  const [category, setCategory] = useState(props.history.location.state ? props.history.location.state.category : \"0\");\n  const [text, setText] = useState(props.history.location.state ? props.history.location.state.text : \"\");\n  const {\n    user,\n    renderImage,\n    title,\n    history,\n    match\n  } = props;\n  useEffect(() => {\n    const name = categories && category ? categories.filter(cat => cat._id == category)[0].name : null;\n    props.title(`ogłoszenia ${category === \"0\" ? \"\" : \"| \" + name} ${text === \"\" ? \"\" : \" ~ \" + text.toLowerCase()}`);\n  }, [categories, category, text]);\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    const products = await prodBase.get();\n    if (!Array.isArray(products.data)) return;\n    setData(products.data);\n    const categories = await catBase.get();\n    if (!Array.isArray(categories.data)) return;\n    setCategories([{\n      _id: \"0\",\n      name: \"wszystkie\"\n    }, ...categories.data]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: [categories && /*#__PURE__*/_jsxDEV(SearchBox, {\n      status: {\n        category: category,\n        text: text\n      },\n      categories: categories,\n      handleCategorySearch: setCategory,\n      handleSearch: setText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: data && dataFilter(data, category, text).map(card =>\n      /*#__PURE__*/\n      // <NavLink to={\"/bazar/product/\" + card._id}>\n      _jsxDEV(NavLink, {\n        to: {\n          pathname: \"/bazar/product/\" + card._id,\n          state: {\n            category,\n            text\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards__card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cards__card__image\",\n            children: /*#__PURE__*/_jsxDEV(Img, {\n              image: card.images ? card.images[0] : card.images // use normal <img> attributes as props\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"cards__card__title\",\n              children: card.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this), card.price !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cards__card__price\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [card.price, \" z\\u0142\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductCards, \"xWcKq5ggY6iB8mlKfqBAhxnZXaI=\");\n\n_c = ProductCards;\nexport default ProductCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductCards\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/app/components/shop/productCards.jsx"],"names":["React","useState","useEffect","NavLink","Img","catBase","prodBase","dataFilter","SearchBox","ProductCards","props","data","setData","categories","setCategories","category","setCategory","history","location","state","text","setText","user","renderImage","title","match","name","filter","cat","_id","toLowerCase","loadData","products","get","Array","isArray","map","card","pathname","images","price"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport Img from \"../common/imageLoader\";\r\n\r\nimport * as catBase from \"../../../api/categories\";\r\nimport * as prodBase from \"../../../api/products\";\r\n\r\nimport { dataFilter } from \"../../../methods/filter\";\r\n\r\nimport \"react-dropdown/style.css\";\r\nimport SearchBox from \"../common/searchBox\";\r\n\r\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\r\nfunction ProductCards(props) {\r\n    const [data, setData] = useState(null);\r\n    const [categories, setCategories] = useState(null);\r\n    const [category, setCategory] = useState(\r\n        props.history.location.state\r\n            ? props.history.location.state.category\r\n            : \"0\"\r\n    );\r\n    const [text, setText] = useState(\r\n        props.history.location.state ? props.history.location.state.text : \"\"\r\n    );\r\n\r\n    const { user, renderImage, title, history, match } = props;\r\n\r\n    useEffect(() => {\r\n        const name =\r\n            categories && category\r\n                ? categories.filter((cat) => cat._id == category)[0].name\r\n                : null;\r\n\r\n        props.title(\r\n            `ogłoszenia ${category === \"0\" ? \"\" : \"| \" + name} ${\r\n                text === \"\" ? \"\" : \" ~ \" + text.toLowerCase()\r\n            }`\r\n        );\r\n    }, [categories, category, text]);\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n\r\n    const loadData = async () => {\r\n        const products = await prodBase.get();\r\n        if (!Array.isArray(products.data)) return;\r\n        setData(products.data);\r\n\r\n        const categories = await catBase.get();\r\n        if (!Array.isArray(categories.data)) return;\r\n        setCategories([{ _id: \"0\", name: \"wszystkie\" }, ...categories.data]);\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            {categories && (\r\n                <SearchBox\r\n                    status={{ category: category, text: text }}\r\n                    categories={categories}\r\n                    handleCategorySearch={setCategory}\r\n                    handleSearch={setText}\r\n                />\r\n            )}\r\n\r\n            <div className=\"cards\">\r\n                {data &&\r\n                    dataFilter(data, category, text).map((card) => (\r\n                        // <NavLink to={\"/bazar/product/\" + card._id}>\r\n                        <NavLink\r\n                            to={{\r\n                                pathname: \"/bazar/product/\" + card._id,\r\n                                state: { category, text },\r\n                            }}\r\n                        >\r\n                            <div className=\"cards__card\">\r\n                                <div className=\"cards__card__image\">\r\n                                    <Img\r\n                                        image={\r\n                                            card.images\r\n                                                ? card.images[0]\r\n                                                : card.images\r\n                                        } // use normal <img> attributes as props\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <h2 className=\"cards__card__title\">\r\n                                        {card.title}\r\n                                    </h2>\r\n                                    {card.price !== 0 && (\r\n                                        <div className=\"cards__card__price\">\r\n                                            <span>{card.price} zł</span>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </NavLink>\r\n                    ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductCards;\r\n"]},"metadata":{},"sourceType":"module"}