{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\app\\\\components\\\\user\\\\forms\\\\loginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { validationSchema } from \"../models/login\";\nimport { RiUserAddLine } from \"react-icons/ri\";\nimport React, { useState } from \"react\";\nimport { pick } from \"lodash\";\nimport Spinner from \"../../common/spinner\";\nimport * as auth from \"../../../../services/auth\";\nimport config from \"../../../config/config.json\";\nimport { NavLink } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport AddInputBox from \"../../common/form/addInputBox.jsx\";\nimport AddSubmitButton from \"../../common/form/submitButton.jsx\";\nimport Buttons from \"../../common/buttons.jsx\";\n\nconst LoginForm = (props, {\n  redirect\n}) => {\n  _s();\n\n  const [load, setLoad] = useState(false);\n\n  const handleLogin = async user => {\n    setLoad(true);\n    user.email = user.email.trim().toLowerCase();\n    user = pick(user, [\"email\", \"password\"]);\n    const response = await auth.login(user);\n\n    if (response.ok) {\n      localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\n      redirect();\n    } else setLoad(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [load && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      onSubmit: values => handleLogin(values),\n      validationSchema: validationSchema,\n      children: ({}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login__buttons\",\n          children: [/*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/register\",\n            children: /*#__PURE__*/_jsxDEV(RiUserAddLine, {\n              className: \"specialBtn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n            buttons: [{\n              name: /*#__PURE__*/_jsxDEV(RiUserAddLine, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 47\n              }, this),\n              ref: \"/register\"\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(AddInputBox // className=\"addBoard__title\"\n          , {\n            name: \"email\",\n            label: config.info.email,\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(AddInputBox // className=\"addBoard__title\"\n          , {\n            label: config.info.password,\n            name: \"password\",\n            type: \"password\",\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(AddSubmitButton, {\n          className: \"actionBtn\",\n          title: config.actions.login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LoginForm, \"zSDr7tdrsvIOugmFwJQ56eKaZtQ=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/app/components/user/forms/loginForm.jsx"],"names":["validationSchema","RiUserAddLine","React","useState","pick","Spinner","auth","config","NavLink","Formik","AddInputBox","AddSubmitButton","Buttons","LoginForm","props","redirect","load","setLoad","handleLogin","user","email","trim","toLowerCase","response","login","ok","localStorage","setItem","headers","password","values","name","ref","info","actions"],"mappings":"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","sourcesContent":["import { validationSchema } from \"../models/login\";\r\nimport { RiUserAddLine } from \"react-icons/ri\";\r\nimport React, { useState } from \"react\";\r\nimport { pick } from \"lodash\";\r\nimport Spinner from \"../../common/spinner\";\r\nimport * as auth from \"../../../../services/auth\";\r\nimport config from \"../../../config/config.json\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport AddInputBox from \"../../common/form/addInputBox.jsx\";\r\nimport AddSubmitButton from \"../../common/form/submitButton.jsx\";\r\nimport Buttons from \"../../common/buttons.jsx\";\r\n\r\nconst LoginForm = (props, { redirect }) => {\r\n    const [load, setLoad] = useState(false);\r\n\r\n    const handleLogin = async (user) => {\r\n        setLoad(true);\r\n        user.email = user.email.trim().toLowerCase();\r\n        user = pick(user, [\"email\", \"password\"]);\r\n        const response = await auth.login(user);\r\n\r\n        if (response.ok) {\r\n            localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\r\n            redirect();\r\n        } else setLoad(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {load && <Spinner />}\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    email: \"\",\r\n                    password: \"\",\r\n                }}\r\n                onSubmit={(values) => handleLogin(values)}\r\n                validationSchema={validationSchema}\r\n            >\r\n                {({}) => (\r\n                    <>\r\n                        <div className=\"login__buttons\">\r\n                            <NavLink to=\"/register\">\r\n                                <RiUserAddLine className=\"specialBtn\" />\r\n                            </NavLink>\r\n\r\n                            <Buttons\r\n                                buttons={[\r\n                                    {\r\n                                        name: <RiUserAddLine />,\r\n                                        ref: \"/register\",\r\n                                    },\r\n                                ]}\r\n                            />\r\n\r\n                            <AddInputBox\r\n                                // className=\"addBoard__title\"\r\n                                name=\"email\"\r\n                                label={config.info.email}\r\n                                placeholder=\"Email\"\r\n                            />\r\n\r\n                            <AddInputBox\r\n                                // className=\"addBoard__title\"\r\n                                label={config.info.password}\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                            />\r\n                        </div>\r\n\r\n                        <AddSubmitButton\r\n                            className=\"actionBtn\"\r\n                            title={config.actions.login}\r\n                        />\r\n                    </>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}