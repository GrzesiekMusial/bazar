{"ast":null,"code":"import { apiClient as client } from \"./client\";\nimport jwtDecode, { InvalidTokenError } from \"jwt-decode\";\nimport { toast } from \"react-toastify\";\nconst endpoint = \"/auth\";\n\nconst login = body => client.post(endpoint, body);\n\nconst getUser = (token = localStorage.getItem(\"token\")) => {\n  try {\n    const user = jwtDecode(token);\n    return user;\n  } catch (ex) {\n    toast.error(\"Please check email and password!\");\n    return null;\n  }\n};\n\nconst setToken = (token = localStorage.getItem(\"token\")) => {\n  client.setHeader(\"x-auth-token\", token);\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"token\");\n  window.location = \"/login\";\n};\n\nexport { login, getUser, setToken, logout };","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/services/auth.js"],"names":["apiClient","client","jwtDecode","InvalidTokenError","toast","endpoint","login","body","post","getUser","token","localStorage","getItem","user","ex","error","setToken","setHeader","logout","removeItem","window","location"],"mappings":"AAAA,SAASA,SAAS,IAAIC,MAAtB,QAAoC,UAApC;AACA,OAAOC,SAAP,IAAoBC,iBAApB,QAA6C,YAA7C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,MAAMC,QAAQ,GAAG,OAAjB;;AAEA,MAAMC,KAAK,GAAIC,IAAD,IAAUN,MAAM,CAACO,IAAP,CAAYH,QAAZ,EAAsBE,IAAtB,CAAxB;;AAEA,MAAME,OAAO,GAAG,CAACC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAT,KAA2C;AACvD,MAAI;AACA,UAAMC,IAAI,GAAGX,SAAS,CAACQ,KAAD,CAAtB;AACA,WAAOG,IAAP;AACH,GAHD,CAGE,OAAOC,EAAP,EAAW;AACTV,IAAAA,KAAK,CAACW,KAAN,CAAY,kCAAZ;AACA,WAAO,IAAP;AACH;AACJ,CARD;;AAUA,MAAMC,QAAQ,GAAG,CAACN,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAT,KAA2C;AACxDX,EAAAA,MAAM,CAACgB,SAAP,CAAiB,cAAjB,EAAiCP,KAAjC;AACH,CAFD;;AAIA,MAAMQ,MAAM,GAAG,MAAM;AACjBP,EAAAA,YAAY,CAACQ,UAAb,CAAwB,OAAxB;AACAC,EAAAA,MAAM,CAACC,QAAP,GAAkB,QAAlB;AACH,CAHD;;AAKA,SAASf,KAAT,EAAgBG,OAAhB,EAAyBO,QAAzB,EAAmCE,MAAnC","sourcesContent":["import { apiClient as client } from \"./client\";\r\nimport jwtDecode, { InvalidTokenError } from \"jwt-decode\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst endpoint = \"/auth\";\r\n\r\nconst login = (body) => client.post(endpoint, body);\r\n\r\nconst getUser = (token = localStorage.getItem(\"token\")) => {\r\n    try {\r\n        const user = jwtDecode(token);\r\n        return user;\r\n    } catch (ex) {\r\n        toast.error(\"Please check email and password!\");\r\n        return null;\r\n    }\r\n};\r\n\r\nconst setToken = (token = localStorage.getItem(\"token\")) => {\r\n    client.setHeader(\"x-auth-token\", token);\r\n};\r\n\r\nconst logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    window.location = \"/login\";\r\n};\r\n\r\nexport { login, getUser, setToken, logout };\r\n"]},"metadata":{},"sourceType":"module"}