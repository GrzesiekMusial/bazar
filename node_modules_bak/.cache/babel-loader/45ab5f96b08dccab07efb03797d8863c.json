{"ast":null,"code":"import * as noticeBase from \"../services/notices\";\nimport * as productBase from \"../services/products\";\nconst data = {\n  products: {\n    time: 0,\n    data: null\n  }\n};\n\nconst getOne = async (id, base, setData = null, setImage = null) => {\n  if (id) {\n    const response = await base.getOne(id);\n    if (!response.ok) throw Error;\n    if (!setData) return response.data;\n    setData(response.data);\n    if (setImage) setImage(response.data.images);\n  }\n\n  return true;\n};\n\nconst getOneNotice = async (id, setData, setImage) => {\n  return await getOne(id, noticeBase, setData, setImage);\n};\n\nconst getOneProduct = async (id, setData, setImage) => {\n  return await getOne(id, productBase, setData, setImage);\n};\n\nconst getNotices = async (setData = null) => {\n  const notices = await noticeBase.get();\n  if (!Array.isArray(notices.data)) throw Error;\n  if (setData) return setData(notices.data);\n  return notices.data;\n};\n\nconst getProducts = async (setData = null) => {\n  const products = await productBase.get();\n  if (!Array.isArray(products.data)) throw Error;\n  if (setData) return setData(products.data);\n  return products.data;\n};\n\nexport { getOneNotice, getOneProduct, getNotices, getProducts };","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/methods/load.js"],"names":["noticeBase","productBase","data","products","time","getOne","id","base","setData","setImage","response","ok","Error","images","getOneNotice","getOneProduct","getNotices","notices","get","Array","isArray","getProducts"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,qBAA5B;AACA,OAAO,KAAKC,WAAZ,MAA6B,sBAA7B;AAEA,MAAMC,IAAI,GAAG;AACTC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAE,CADA;AAENF,IAAAA,IAAI,EAAE;AAFA;AADD,CAAb;;AAOA,MAAMG,MAAM,GAAG,OAAOC,EAAP,EAAWC,IAAX,EAAiBC,OAAO,GAAG,IAA3B,EAAiCC,QAAQ,GAAG,IAA5C,KAAqD;AAChE,MAAIH,EAAJ,EAAQ;AACJ,UAAMI,QAAQ,GAAG,MAAMH,IAAI,CAACF,MAAL,CAAYC,EAAZ,CAAvB;AACA,QAAI,CAACI,QAAQ,CAACC,EAAd,EAAkB,MAAMC,KAAN;AAClB,QAAI,CAACJ,OAAL,EAAc,OAAOE,QAAQ,CAACR,IAAhB;AACdM,IAAAA,OAAO,CAACE,QAAQ,CAACR,IAAV,CAAP;AACA,QAAIO,QAAJ,EAAcA,QAAQ,CAACC,QAAQ,CAACR,IAAT,CAAcW,MAAf,CAAR;AACjB;;AACD,SAAO,IAAP;AACH,CATD;;AAWA,MAAMC,YAAY,GAAG,OAAOR,EAAP,EAAWE,OAAX,EAAoBC,QAApB,KAAiC;AAClD,SAAO,MAAMJ,MAAM,CAACC,EAAD,EAAKN,UAAL,EAAiBQ,OAAjB,EAA0BC,QAA1B,CAAnB;AACH,CAFD;;AAIA,MAAMM,aAAa,GAAG,OAAOT,EAAP,EAAWE,OAAX,EAAoBC,QAApB,KAAiC;AACnD,SAAO,MAAMJ,MAAM,CAACC,EAAD,EAAKL,WAAL,EAAkBO,OAAlB,EAA2BC,QAA3B,CAAnB;AACH,CAFD;;AAIA,MAAMO,UAAU,GAAG,OAAOR,OAAO,GAAG,IAAjB,KAA0B;AACzC,QAAMS,OAAO,GAAG,MAAMjB,UAAU,CAACkB,GAAX,EAAtB;AACA,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,OAAO,CAACf,IAAtB,CAAL,EAAkC,MAAMU,KAAN;AAClC,MAAIJ,OAAJ,EAAa,OAAOA,OAAO,CAACS,OAAO,CAACf,IAAT,CAAd;AACb,SAAOe,OAAO,CAACf,IAAf;AACH,CALD;;AAOA,MAAMmB,WAAW,GAAG,OAAOb,OAAO,GAAG,IAAjB,KAA0B;AAC1C,QAAML,QAAQ,GAAG,MAAMF,WAAW,CAACiB,GAAZ,EAAvB;AACA,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcjB,QAAQ,CAACD,IAAvB,CAAL,EAAmC,MAAMU,KAAN;AACnC,MAAIJ,OAAJ,EAAa,OAAOA,OAAO,CAACL,QAAQ,CAACD,IAAV,CAAd;AACb,SAAOC,QAAQ,CAACD,IAAhB;AACH,CALD;;AAOA,SAASY,YAAT,EAAuBC,aAAvB,EAAsCC,UAAtC,EAAkDK,WAAlD","sourcesContent":["import * as noticeBase from \"../services/notices\";\r\nimport * as productBase from \"../services/products\";\r\n\r\nconst data = {\r\n    products: {\r\n        time: 0,\r\n        data: null,\r\n    },\r\n};\r\n\r\nconst getOne = async (id, base, setData = null, setImage = null) => {\r\n    if (id) {\r\n        const response = await base.getOne(id);\r\n        if (!response.ok) throw Error;\r\n        if (!setData) return response.data;\r\n        setData(response.data);\r\n        if (setImage) setImage(response.data.images);\r\n    }\r\n    return true;\r\n};\r\n\r\nconst getOneNotice = async (id, setData, setImage) => {\r\n    return await getOne(id, noticeBase, setData, setImage);\r\n};\r\n\r\nconst getOneProduct = async (id, setData, setImage) => {\r\n    return await getOne(id, productBase, setData, setImage);\r\n};\r\n\r\nconst getNotices = async (setData = null) => {\r\n    const notices = await noticeBase.get();\r\n    if (!Array.isArray(notices.data)) throw Error;\r\n    if (setData) return setData(notices.data);\r\n    return notices.data;\r\n};\r\n\r\nconst getProducts = async (setData = null) => {\r\n    const products = await productBase.get();\r\n    if (!Array.isArray(products.data)) throw Error;\r\n    if (setData) return setData(products.data);\r\n    return products.data;\r\n};\r\n\r\nexport { getOneNotice, getOneProduct, getNotices, getProducts };\r\n"]},"metadata":{},"sourceType":"module"}