{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\app\\\\components\\\\addBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport * as noticeBase from \"../../api/notices\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport * as imagesBase from \"../../api/images\";\nimport AddTextBox from \"./common/form/addTextBox\";\nimport AddInputBox from \"./common/form/addInputBox.jsx\";\nimport AddSubmitButton from \"./common/form/submitButton.jsx\";\nimport ImageInput from \"./common/form/imageInput\";\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required().min(3).max(120),\n  text: Yup.string().max(6000)\n});\n\nconst AddBoard = props => {\n  _s();\n\n  const [image, setImage] = useState([]);\n  const [edit, setEdit] = useState(null);\n  useEffect(() => {\n    props.title(\"ogÅ‚oszenie\");\n    checkEdit();\n  }, []);\n\n  const checkEdit = async () => {\n    if (props.match.params.id) {\n      const response = await noticeBase.notice(props.match.params.id);\n      if (!response.ok) return;\n      setEdit(response.data);\n    }\n  };\n\n  const handleSave = async (item, image) => {\n    if (image.length > 0 && typeof image[0] !== \"string\") {\n      if (edit) {\n        edit.images.forEach(img => imagesBase.remove(img));\n      }\n\n      const images = await uploadImage(image);\n      if (images.ok) item.images = images.data;else return toast.error(\"Error occured on saving! first\");\n    }\n\n    if (edit) {\n      item._id = edit._id;\n      const response = await noticeBase.edit(item);\n      response.ok ? props.history.push(`/board`) : toast.error(\"Error occured on saving! second\");\n      return;\n    }\n\n    const response = await noticeBase.add(item);\n    response.ok ? props.history.push(`/board`) : toast.error(\"Error occured on saving! third\");\n  };\n\n  const uploadImage = image => {\n    const form = new FormData();\n    image.forEach(img => form.append(\"image\", img));\n    return imagesBase.add(form);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addBoard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addBoard__images\",\n          children: /*#__PURE__*/_jsxDEV(ImageInput, {\n            handleChange: setImage,\n            preview: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          enableReinitialize: true,\n          initialValues: edit ? {\n            text: edit.text,\n            title: edit.title\n          } : {\n            text: \"\",\n            title: \"\"\n          },\n          onSubmit: values => handleSave(values, image),\n          validationSchema: validationSchema,\n          children: ({\n            handleSubmit\n          }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(AddInputBox, {\n              className: \"addBoard__title\",\n              name: \"title\",\n              placeholder: \"Nazwa\",\n              defaultValue: edit ? edit.title : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(AddTextBox, {\n              className: \"addBoard__text\",\n              name: \"text\",\n              placeholder: \"Opis...\",\n              defaultValue: edit ? edit.text : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"addBoard__buttons\",\n              children: /*#__PURE__*/_jsxDEV(AddSubmitButton, {\n                className: \"actionBtn\",\n                title: edit ? \"ZAPISZ\" : \"OPUBLIKUJ\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddBoard, \"IuQ/Mg+awQ76U122wcKnM2HKDp8=\");\n\n_c = AddBoard;\nexport default AddBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBoard\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/app/components/addBoard.jsx"],"names":["React","useEffect","useState","noticeBase","toast","ToastContainer","Formik","Yup","imagesBase","AddTextBox","AddInputBox","AddSubmitButton","ImageInput","validationSchema","object","shape","title","string","required","min","max","text","AddBoard","props","image","setImage","edit","setEdit","checkEdit","match","params","id","response","notice","ok","data","handleSave","item","length","images","forEach","img","remove","uploadImage","error","_id","history","push","add","form","FormData","append","values","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport * as noticeBase from \"../../api/notices\";\r\n\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport * as imagesBase from \"../../api/images\";\r\n\r\nimport AddTextBox from \"./common/form/addTextBox\";\r\nimport AddInputBox from \"./common/form/addInputBox.jsx\";\r\nimport AddSubmitButton from \"./common/form/submitButton.jsx\";\r\nimport ImageInput from \"./common/form/imageInput\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    title: Yup.string().required().min(3).max(120),\r\n    text: Yup.string().max(6000),\r\n});\r\n\r\nconst AddBoard = (props) => {\r\n    const [image, setImage] = useState([]);\r\n    const [edit, setEdit] = useState(null);\r\n\r\n    useEffect(() => {\r\n        props.title(\"ogÅ‚oszenie\");\r\n        checkEdit();\r\n    }, []);\r\n\r\n    const checkEdit = async () => {\r\n        if (props.match.params.id) {\r\n            const response = await noticeBase.notice(props.match.params.id);\r\n            if (!response.ok) return;\r\n            setEdit(response.data);\r\n        }\r\n    };\r\n\r\n    const handleSave = async (item, image) => {\r\n        if (image.length > 0 && typeof image[0] !== \"string\") {\r\n            if (edit) {\r\n                edit.images.forEach((img) => imagesBase.remove(img));\r\n            }\r\n\r\n            const images = await uploadImage(image);\r\n            if (images.ok) item.images = images.data;\r\n            else return toast.error(\"Error occured on saving! first\");\r\n        }\r\n\r\n        if (edit) {\r\n            item._id = edit._id;\r\n            const response = await noticeBase.edit(item);\r\n            response.ok\r\n                ? props.history.push(`/board`)\r\n                : toast.error(\"Error occured on saving! second\");\r\n\r\n            return;\r\n        }\r\n\r\n        const response = await noticeBase.add(item);\r\n\r\n        response.ok\r\n            ? props.history.push(`/board`)\r\n            : toast.error(\"Error occured on saving! third\");\r\n    };\r\n\r\n    const uploadImage = (image) => {\r\n        const form = new FormData();\r\n        image.forEach((img) => form.append(\"image\", img));\r\n\r\n        return imagesBase.add(form);\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            <div className=\"screen__container\">\r\n                <div className=\"addBoard\">\r\n                    <div className=\"addBoard__images\">\r\n                        <ImageInput handleChange={setImage} preview={image} />\r\n                    </div>\r\n\r\n                    <Formik\r\n                        enableReinitialize={true}\r\n                        initialValues={\r\n                            edit\r\n                                ? {\r\n                                      text: edit.text,\r\n                                      title: edit.title,\r\n                                  }\r\n                                : {\r\n                                      text: \"\",\r\n                                      title: \"\",\r\n                                  }\r\n                        }\r\n                        onSubmit={(values) => handleSave(values, image)}\r\n                        validationSchema={validationSchema}\r\n                    >\r\n                        {({ handleSubmit }) => (\r\n                            <>\r\n                                <AddInputBox\r\n                                    className=\"addBoard__title\"\r\n                                    name=\"title\"\r\n                                    placeholder=\"Nazwa\"\r\n                                    defaultValue={edit ? edit.title : null}\r\n                                />\r\n                                <AddTextBox\r\n                                    className=\"addBoard__text\"\r\n                                    name=\"text\"\r\n                                    placeholder=\"Opis...\"\r\n                                    defaultValue={edit ? edit.text : null}\r\n                                />\r\n                                <div className=\"addBoard__buttons\">\r\n                                    <AddSubmitButton\r\n                                        className=\"actionBtn\"\r\n                                        title={edit ? \"ZAPISZ\" : \"OPUBLIKUJ\"}\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddBoard;\r\n"]},"metadata":{},"sourceType":"module"}