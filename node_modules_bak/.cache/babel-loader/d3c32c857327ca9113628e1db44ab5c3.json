{"ast":null,"code":"import * as data from \"./data\"; // import { toast } from \"react-toastify\";\n// import * as imagesBase from \"../api/images\";\n// import * as noticeBase from \"../api/notices\";\n// import * as productBase from \"../api/products\";\n\nconst saveNotice = async (item, edit, image) => {\n  return await save(item, edit, image, noticeBase.add);\n};\n\nconst saveProduct = async (item, edit, image) => {\n  return await save(item, edit, image, productBase.add);\n};\n\nconst save = async (item, edit, image, base) => {\n  item.images = await imageSave(item, edit, image);\n  item.price = await checkPrice(item.price);\n\n  if (edit) {\n    item._id = edit._id;\n    const response = await base.edit(item);\n    if (!response.ok) throw toast.error(\"Error occured on saving!\");\n    return response.data;\n  }\n\n  const response = await base.add(item);\n  if (!response.ok) throw toast.error(\"Error occured on saving!\");\n  return response.data;\n};\n\nconst imageSave = async (item, edit, image) => {\n  if (!(image.length > 0 && typeof image[0] !== \"string\")) return item.images;\n  if (edit) edit.images.forEach(img => imagesBase.remove(img));\n  const response = await uploadImage(image);\n  if (response.ok) return response.data;else throw toast.error(\"Error occured on saving!\");\n};\n\nconst checkPrice = async price => {\n  try {\n    if (price) {\n      price = price.trim();\n      price = +parseFloat(price).toFixed(2);\n    } else {\n      price = 0;\n    }\n  } catch (e) {}\n\n  return price;\n};\n\nconst uploadImage = image => {\n  const form = new FormData();\n  image.forEach(img => form.append(\"image\", img));\n  return imagesBase.add(form);\n};\n\nexport { saveNotice, saveProduct };","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/methods/save.js"],"names":["data","saveNotice","item","edit","image","save","noticeBase","add","saveProduct","productBase","base","images","imageSave","price","checkPrice","_id","response","ok","toast","error","length","forEach","img","imagesBase","remove","uploadImage","trim","parseFloat","toFixed","e","form","FormData","append"],"mappings":"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","sourcesContent":["import * as data from \"./data\";\r\n\r\n// import { toast } from \"react-toastify\";\r\n// import * as imagesBase from \"../api/images\";\r\n\r\n// import * as noticeBase from \"../api/notices\";\r\n// import * as productBase from \"../api/products\";\r\n\r\nconst saveNotice = async (item, edit, image) => {\r\n    return await save(item, edit, image, noticeBase.add);\r\n};\r\n\r\nconst saveProduct = async (item, edit, image) => {\r\n    return await save(item, edit, image, productBase.add);\r\n};\r\n\r\nconst save = async (item, edit, image, base) => {\r\n    item.images = await imageSave(item, edit, image);\r\n    item.price = await checkPrice(item.price);\r\n\r\n    if (edit) {\r\n        item._id = edit._id;\r\n        const response = await base.edit(item);\r\n        if (!response.ok) throw toast.error(\"Error occured on saving!\");\r\n        return response.data;\r\n    }\r\n\r\n    const response = await base.add(item);\r\n    if (!response.ok) throw toast.error(\"Error occured on saving!\");\r\n    return response.data;\r\n};\r\n\r\nconst imageSave = async (item, edit, image) => {\r\n    if (!(image.length > 0 && typeof image[0] !== \"string\")) return item.images;\r\n\r\n    if (edit) edit.images.forEach((img) => imagesBase.remove(img));\r\n\r\n    const response = await uploadImage(image);\r\n    if (response.ok) return response.data;\r\n    else throw toast.error(\"Error occured on saving!\");\r\n};\r\n\r\nconst checkPrice = async (price) => {\r\n    try {\r\n        if (price) {\r\n            price = price.trim();\r\n            price = +parseFloat(price).toFixed(2);\r\n        } else {\r\n            price = 0;\r\n        }\r\n    } catch (e) {}\r\n    return price;\r\n};\r\n\r\nconst uploadImage = (image) => {\r\n    const form = new FormData();\r\n    image.forEach((img) => form.append(\"image\", img));\r\n    return imagesBase.add(form);\r\n};\r\n\r\nexport { saveNotice, saveProduct };\r\n"]},"metadata":{},"sourceType":"module"}