{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport * as imagesBase from \"../api/images\";\nimport * as noticeBase from \"../api/notices\";\nimport * as productBase from \"../api/products\";\n\nconst noticeDelete = async card => {\n  try {\n    card.images.forEach(img => imageBase.remove(img));\n    const result = await noticeBase.remove(card._id);\n    if (result.ok) return result.data;else throw toast.error(\"Error when delete. \" + result.originalError.message);\n  } catch (ex) {\n    if (ex.response && ex.response.status === 404) throw toast.error(\"This product has already been deleted.\");else throw toast.error(\"Error when delete.\");\n  }\n};\n\nexport { noticeDelete };","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/methods/delete.js"],"names":["toast","imagesBase","noticeBase","productBase","noticeDelete","card","images","forEach","img","imageBase","remove","result","_id","ok","data","error","originalError","message","ex","response","status"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,OAAO,KAAKC,UAAZ,MAA4B,eAA5B;AAEA,OAAO,KAAKC,UAAZ,MAA4B,gBAA5B;AACA,OAAO,KAAKC,WAAZ,MAA6B,iBAA7B;;AAEA,MAAMC,YAAY,GAAG,MAAOC,IAAP,IAAgB;AACjC,MAAI;AACAA,IAAAA,IAAI,CAACC,MAAL,CAAYC,OAAZ,CAAqBC,GAAD,IAASC,SAAS,CAACC,MAAV,CAAiBF,GAAjB,CAA7B;AACA,UAAMG,MAAM,GAAG,MAAMT,UAAU,CAACQ,MAAX,CAAkBL,IAAI,CAACO,GAAvB,CAArB;AACA,QAAID,MAAM,CAACE,EAAX,EAAe,OAAOF,MAAM,CAACG,IAAd,CAAf,KAEI,MAAMd,KAAK,CAACe,KAAN,CACF,wBAAwBJ,MAAM,CAACK,aAAP,CAAqBC,OAD3C,CAAN;AAGP,GARD,CAQE,OAAOC,EAAP,EAAW;AACT,QAAIA,EAAE,CAACC,QAAH,IAAeD,EAAE,CAACC,QAAH,CAAYC,MAAZ,KAAuB,GAA1C,EACI,MAAMpB,KAAK,CAACe,KAAN,CAAY,wCAAZ,CAAN,CADJ,KAEK,MAAMf,KAAK,CAACe,KAAN,CAAY,oBAAZ,CAAN;AACR;AACJ,CAdD;;AAgBA,SAASX,YAAT","sourcesContent":["import { toast } from \"react-toastify\";\r\nimport * as imagesBase from \"../api/images\";\r\n\r\nimport * as noticeBase from \"../api/notices\";\r\nimport * as productBase from \"../api/products\";\r\n\r\nconst noticeDelete = async (card) => {\r\n    try {\r\n        card.images.forEach((img) => imageBase.remove(img));\r\n        const result = await noticeBase.remove(card._id);\r\n        if (result.ok) return result.data;\r\n        else\r\n            throw toast.error(\r\n                \"Error when delete. \" + result.originalError.message\r\n            );\r\n    } catch (ex) {\r\n        if (ex.response && ex.response.status === 404)\r\n            throw toast.error(\"This product has already been deleted.\");\r\n        else throw toast.error(\"Error when delete.\");\r\n    }\r\n};\r\n\r\nexport { noticeDelete };\r\n"]},"metadata":{},"sourceType":"module"}