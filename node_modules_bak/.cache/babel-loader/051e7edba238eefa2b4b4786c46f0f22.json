{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\app\\\\components\\\\shop\\\\productCards.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport config from \"../../config/config.json\";\nimport * as base from \"../../../methods/data\";\nimport * as Forms from \"../common/form/forms\";\nimport \"react-dropdown/style.css\";\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\nimport Spinner from \"./../common/spinner\";\nimport Card from \"./card\";\n\nfunction ProductCards(props) {\n  _s();\n\n  const {\n    title,\n    history\n  } = props;\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [load, setLoad] = useState(true);\n  const [categories, setCategories] = useState(null);\n  useEffect(() => {\n    const name = categories && category ? categories.filter(cat => cat._id == category)[0].name : null;\n    title(config.headers.sell);\n  }, []);\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    try {\n      await Promise.allSettled([base.getCategories(true, setCategories), base.getProducts(setData)]);\n    } catch (ex) {\n      setError(\"Cant load data, plese try again\");\n    }\n\n    setLoad(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: [load && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 22\n    }, this), error && /*#__PURE__*/_jsxDEV(Forms.Error, {\n      error: error,\n      visible: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      data: data,\n      categories: categories,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductCards, \"EJnAG0vU/pME3QDrkIAIHr3ep+M=\");\n\n_c = ProductCards;\nexport default ProductCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductCards\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/app/components/shop/productCards.jsx"],"names":["React","useState","useEffect","config","base","Forms","Spinner","Card","ProductCards","props","title","history","data","setData","error","setError","load","setLoad","categories","setCategories","name","category","filter","cat","_id","headers","sell","loadData","Promise","allSettled","getCategories","getProducts","ex"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAO,KAAKC,IAAZ,MAAsB,uBAAtB;AACA,OAAO,KAAKC,KAAZ,MAAuB,sBAAvB;AAEA,OAAO,0BAAP;AAEA,OAAO,sDAAP;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AACzB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBF,KAA3B;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,IAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMkB,IAAI,GACNF,UAAU,IAAIG,QAAd,GACMH,UAAU,CAACI,MAAX,CAAmBC,GAAD,IAASA,GAAG,CAACC,GAAJ,IAAWH,QAAtC,EAAgD,CAAhD,EAAmDD,IADzD,GAEM,IAHV;AAKAV,IAAAA,KAAK,CAACP,MAAM,CAACsB,OAAP,CAAeC,IAAhB,CAAL;AACH,GAPQ,EAON,EAPM,CAAT;AASAxB,EAAAA,SAAS,CAAC,MAAM;AACZyB,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,QAAQ,GAAG,YAAY;AACzB,QAAI;AACA,YAAMC,OAAO,CAACC,UAAR,CAAmB,CACrBzB,IAAI,CAAC0B,aAAL,CAAmB,IAAnB,EAAyBX,aAAzB,CADqB,EAErBf,IAAI,CAAC2B,WAAL,CAAiBlB,OAAjB,CAFqB,CAAnB,CAAN;AAIH,KALD,CAKE,OAAOmB,EAAP,EAAW;AACTjB,MAAAA,QAAQ,CAAC,iCAAD,CAAR;AACH;;AACDE,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAVD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,eACKD,IAAI,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADb,EAGKF,KAAK,iBAAI,QAAC,KAAD,CAAO,KAAP;AAAa,MAAA,KAAK,EAAEA,KAApB;AAA2B,MAAA,OAAO,EAAEA;AAApC;AAAA;AAAA;AAAA;AAAA,YAHd,eAKI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEF,IAAZ;AAAkB,MAAA,UAAU,EAAEM,UAA9B;AAAA,SAA8CT;AAA9C;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAzCQD,Y;;KAAAA,Y;AA2CT,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport config from \"../../config/config.json\";\r\n\r\nimport * as base from \"../../../methods/data\";\r\nimport * as Forms from \"../common/form/forms\";\r\n\r\nimport \"react-dropdown/style.css\";\r\n\r\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\r\nimport Spinner from \"./../common/spinner\";\r\nimport Card from \"./card\";\r\n\r\nfunction ProductCards(props) {\r\n    const { title, history } = props;\r\n    const [data, setData] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [load, setLoad] = useState(true);\r\n    const [categories, setCategories] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const name =\r\n            categories && category\r\n                ? categories.filter((cat) => cat._id == category)[0].name\r\n                : null;\r\n\r\n        title(config.headers.sell);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n\r\n    const loadData = async () => {\r\n        try {\r\n            await Promise.allSettled([\r\n                base.getCategories(true, setCategories),\r\n                base.getProducts(setData),\r\n            ]);\r\n        } catch (ex) {\r\n            setError(\"Cant load data, plese try again\");\r\n        }\r\n        setLoad(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            {load && <Spinner />}\r\n\r\n            {error && <Forms.Error error={error} visible={error} />}\r\n\r\n            <Card data={data} categories={categories} {...props} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductCards;\r\n"]},"metadata":{},"sourceType":"module"}