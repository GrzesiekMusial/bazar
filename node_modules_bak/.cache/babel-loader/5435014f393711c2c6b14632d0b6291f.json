{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport * as imagesBase from \"../api/images\";\nimport * as noticeBase from \"../api/notices\";\nimport * as productBase from \"../api/products\";\n\nconst noticeSave = async (item, edit, image) => {\n  return await save(item, edit, image, noticeBase);\n};\n\nconst productSave = async (item, edit, image) => {\n  item.price = await checkPrice(item.price);\n  return await save(item, edit, image, productBase);\n};\n\nconst save = async (item, edit, image, base) => {\n  item.images = await imageSave(item, edit, image);\n\n  if (edit) {\n    item._id = edit._id;\n    const response = await base.edit(item);\n    if (!response.ok) throw toast.error(\"Error occured on saving!\");\n    return response.data;\n  }\n\n  const response = await base.add(item);\n  if (response.ok) throw toast.error(\"Error occured on saving!\");\n  return response.data;\n};\n\nconst imageSave = async (item, edit, image) => {\n  if (!(image.length > 0 && typeof image[0] !== \"string\")) return item.images;\n  if (edit) edit.images.forEach(img => imagesBase.remove(img));\n  const response = await uploadImage(image);\n  if (response.ok) return response.data;else throw toast.error(\"Error occured on saving!\");\n};\n\nconst checkPrice = async price => {\n  try {\n    if (price) {\n      price = price.trim();\n      price = +parseFloat(price).toFixed(2);\n    } else {\n      price = 0;\n    }\n  } catch (e) {}\n\n  return price;\n};\n\nconst uploadImage = image => {\n  const form = new FormData();\n  image.forEach(img => form.append(\"image\", img));\n  return imagesBase.add(form);\n};\n\nexport { noticeSave, productSave };","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/methods/save.js"],"names":["toast","imagesBase","noticeBase","productBase","noticeSave","item","edit","image","save","productSave","price","checkPrice","base","images","imageSave","_id","response","ok","error","data","add","length","forEach","img","remove","uploadImage","trim","parseFloat","toFixed","e","form","FormData","append"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AAEA,OAAO,KAAKC,UAAZ,MAA4B,eAA5B;AACA,OAAO,KAAKC,UAAZ,MAA4B,gBAA5B;AACA,OAAO,KAAKC,WAAZ,MAA6B,iBAA7B;;AAEA,MAAMC,UAAU,GAAG,OAAOC,IAAP,EAAaC,IAAb,EAAmBC,KAAnB,KAA6B;AAC5C,SAAO,MAAMC,IAAI,CAACH,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBL,UAApB,CAAjB;AACH,CAFD;;AAIA,MAAMO,WAAW,GAAG,OAAOJ,IAAP,EAAaC,IAAb,EAAmBC,KAAnB,KAA6B;AAC7CF,EAAAA,IAAI,CAACK,KAAL,GAAa,MAAMC,UAAU,CAACN,IAAI,CAACK,KAAN,CAA7B;AACA,SAAO,MAAMF,IAAI,CAACH,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBJ,WAApB,CAAjB;AACH,CAHD;;AAKA,MAAMK,IAAI,GAAG,OAAOH,IAAP,EAAaC,IAAb,EAAmBC,KAAnB,EAA0BK,IAA1B,KAAmC;AAC5CP,EAAAA,IAAI,CAACQ,MAAL,GAAc,MAAMC,SAAS,CAACT,IAAD,EAAOC,IAAP,EAAaC,KAAb,CAA7B;;AAEA,MAAID,IAAJ,EAAU;AACND,IAAAA,IAAI,CAACU,GAAL,GAAWT,IAAI,CAACS,GAAhB;AACA,UAAMC,QAAQ,GAAG,MAAMJ,IAAI,CAACN,IAAL,CAAUD,IAAV,CAAvB;AACA,QAAI,CAACW,QAAQ,CAACC,EAAd,EAAkB,MAAMjB,KAAK,CAACkB,KAAN,CAAY,0BAAZ,CAAN;AAClB,WAAOF,QAAQ,CAACG,IAAhB;AACH;;AAED,QAAMH,QAAQ,GAAG,MAAMJ,IAAI,CAACQ,GAAL,CAASf,IAAT,CAAvB;AACA,MAAIW,QAAQ,CAACC,EAAb,EAAiB,MAAMjB,KAAK,CAACkB,KAAN,CAAY,0BAAZ,CAAN;AACjB,SAAOF,QAAQ,CAACG,IAAhB;AACH,CAbD;;AAeA,MAAML,SAAS,GAAG,OAAOT,IAAP,EAAaC,IAAb,EAAmBC,KAAnB,KAA6B;AAC3C,MAAI,EAAEA,KAAK,CAACc,MAAN,GAAe,CAAf,IAAoB,OAAOd,KAAK,CAAC,CAAD,CAAZ,KAAoB,QAA1C,CAAJ,EAAyD,OAAOF,IAAI,CAACQ,MAAZ;AAEzD,MAAIP,IAAJ,EAAUA,IAAI,CAACO,MAAL,CAAYS,OAAZ,CAAqBC,GAAD,IAAStB,UAAU,CAACuB,MAAX,CAAkBD,GAAlB,CAA7B;AAEV,QAAMP,QAAQ,GAAG,MAAMS,WAAW,CAAClB,KAAD,CAAlC;AACA,MAAIS,QAAQ,CAACC,EAAb,EAAiB,OAAOD,QAAQ,CAACG,IAAhB,CAAjB,KACK,MAAMnB,KAAK,CAACkB,KAAN,CAAY,0BAAZ,CAAN;AACR,CARD;;AAUA,MAAMP,UAAU,GAAG,MAAOD,KAAP,IAAiB;AAChC,MAAI;AACA,QAAIA,KAAJ,EAAW;AACPA,MAAAA,KAAK,GAAGA,KAAK,CAACgB,IAAN,EAAR;AACAhB,MAAAA,KAAK,GAAG,CAACiB,UAAU,CAACjB,KAAD,CAAV,CAAkBkB,OAAlB,CAA0B,CAA1B,CAAT;AACH,KAHD,MAGO;AACHlB,MAAAA,KAAK,GAAG,CAAR;AACH;AACJ,GAPD,CAOE,OAAOmB,CAAP,EAAU,CAAE;;AACd,SAAOnB,KAAP;AACH,CAVD;;AAYA,MAAMe,WAAW,GAAIlB,KAAD,IAAW;AAC3B,QAAMuB,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAxB,EAAAA,KAAK,CAACe,OAAN,CAAeC,GAAD,IAASO,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqBT,GAArB,CAAvB;AACA,SAAOtB,UAAU,CAACmB,GAAX,CAAeU,IAAf,CAAP;AACH,CAJD;;AAMA,SAAS1B,UAAT,EAAqBK,WAArB","sourcesContent":["import { toast } from \"react-toastify\";\r\n\r\nimport * as imagesBase from \"../api/images\";\r\nimport * as noticeBase from \"../api/notices\";\r\nimport * as productBase from \"../api/products\";\r\n\r\nconst noticeSave = async (item, edit, image) => {\r\n    return await save(item, edit, image, noticeBase);\r\n};\r\n\r\nconst productSave = async (item, edit, image) => {\r\n    item.price = await checkPrice(item.price);\r\n    return await save(item, edit, image, productBase);\r\n};\r\n\r\nconst save = async (item, edit, image, base) => {\r\n    item.images = await imageSave(item, edit, image);\r\n\r\n    if (edit) {\r\n        item._id = edit._id;\r\n        const response = await base.edit(item);\r\n        if (!response.ok) throw toast.error(\"Error occured on saving!\");\r\n        return response.data;\r\n    }\r\n\r\n    const response = await base.add(item);\r\n    if (response.ok) throw toast.error(\"Error occured on saving!\");\r\n    return response.data;\r\n};\r\n\r\nconst imageSave = async (item, edit, image) => {\r\n    if (!(image.length > 0 && typeof image[0] !== \"string\")) return item.images;\r\n\r\n    if (edit) edit.images.forEach((img) => imagesBase.remove(img));\r\n\r\n    const response = await uploadImage(image);\r\n    if (response.ok) return response.data;\r\n    else throw toast.error(\"Error occured on saving!\");\r\n};\r\n\r\nconst checkPrice = async (price) => {\r\n    try {\r\n        if (price) {\r\n            price = price.trim();\r\n            price = +parseFloat(price).toFixed(2);\r\n        } else {\r\n            price = 0;\r\n        }\r\n    } catch (e) {}\r\n    return price;\r\n};\r\n\r\nconst uploadImage = (image) => {\r\n    const form = new FormData();\r\n    image.forEach((img) => form.append(\"image\", img));\r\n    return imagesBase.add(form);\r\n};\r\n\r\nexport { noticeSave, productSave };\r\n"]},"metadata":{},"sourceType":"module"}