{"ast":null,"code":"import * as noticesBase from \"../services/notices\";\nimport * as productsBase from \"../services/products\";\nimport * as categoriesBase from \"../services/categories\";\nconst data = {\n  products: {\n    time: 0,\n    data: null\n  },\n  notices: {\n    time: 0,\n    data: null\n  },\n  categories: {\n    time: 0,\n    data: null\n  }\n};\n\nconst checkBase = async (data, base) => {\n  const maxTime = 600000;\n\n  if (!data.data || data.time - Date.now() > maxTime) {\n    console.log(\"pobieram\");\n    data.time = Date.now();\n    const result = await base.get();\n    let final;\n    final = data.data = result.data;\n    return final;\n  } else return data.data;\n};\n\nconst getOne = async (id, base, setData = null, setImage = null) => {\n  if (id) {\n    const response = await base.getOne(id);\n    if (!response.ok) throw Error;\n    if (!setData) return response.data;\n    setData(response.data);\n    if (setImage) setImage(response.data.images);\n  }\n\n  return true;\n};\n\nconst getOneNotice = async (id, setData, setImage) => {\n  return await getOne(id, noticeBase, setData, setImage);\n};\n\nconst getOneProduct = async (id, setData, setImage) => {\n  return await getOne(id, productBase, setData, setImage);\n};\n\nconst getNotices = async (setData = null) => {\n  const notices = await checkBase(data.notices, noticesBase);\n  if (setData) return setData(notices);\n  return notices;\n};\n\nconst getProducts = async (setData = null) => {\n  const products = await checkBase(data.products, productsBase);\n  if (setData) return setData(products);\n  return products;\n};\n\nconst getCategories = async (withAll = false, setData = false) => {\n  const categories = await checkBase(data.categories, categoriesBase);\n  const result = withAll ? [{\n    _id: \"0\",\n    name: \"wszystkie\"\n  }, ...categories] : [...categories];\n  if (setData) return setData(result);\n  return result;\n};\n\nexport { getOneNotice, getOneProduct, getNotices, getProducts, getCategories, data };","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/methods/load.js"],"names":["noticesBase","productsBase","categoriesBase","data","products","time","notices","categories","checkBase","base","maxTime","Date","now","console","log","result","get","final","getOne","id","setData","setImage","response","ok","Error","images","getOneNotice","noticeBase","getOneProduct","productBase","getNotices","getProducts","getCategories","withAll","_id","name"],"mappings":"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","sourcesContent":["import * as noticesBase from \"../services/notices\";\r\nimport * as productsBase from \"../services/products\";\r\nimport * as categoriesBase from \"../services/categories\";\r\n\r\nconst data = {\r\n    products: {\r\n        time: 0,\r\n        data: null,\r\n    },\r\n    notices: {\r\n        time: 0,\r\n        data: null,\r\n    },\r\n    categories: {\r\n        time: 0,\r\n        data: null,\r\n    },\r\n};\r\n\r\nconst checkBase = async (data, base) => {\r\n    const maxTime = 600000;\r\n    if (!data.data || data.time - Date.now() > maxTime) {\r\n        console.log(\"pobieram\");\r\n        data.time = Date.now();\r\n        const result = await base.get();\r\n        let final;\r\n        final = data.data = result.data;\r\n        return final;\r\n    } else return data.data;\r\n};\r\n\r\nconst getOne = async (id, base, setData = null, setImage = null) => {\r\n    if (id) {\r\n        const response = await base.getOne(id);\r\n        if (!response.ok) throw Error;\r\n        if (!setData) return response.data;\r\n        setData(response.data);\r\n        if (setImage) setImage(response.data.images);\r\n    }\r\n    return true;\r\n};\r\n\r\nconst getOneNotice = async (id, setData, setImage) => {\r\n    return await getOne(id, noticeBase, setData, setImage);\r\n};\r\n\r\nconst getOneProduct = async (id, setData, setImage) => {\r\n    return await getOne(id, productBase, setData, setImage);\r\n};\r\n\r\nconst getNotices = async (setData = null) => {\r\n    const notices = await checkBase(data.notices, noticesBase);\r\n    if (setData) return setData(notices);\r\n    return notices;\r\n};\r\n\r\nconst getProducts = async (setData = null) => {\r\n    const products = await checkBase(data.products, productsBase);\r\n    if (setData) return setData(products);\r\n    return products;\r\n};\r\n\r\nconst getCategories = async (withAll = false, setData = false) => {\r\n    const categories = await checkBase(data.categories, categoriesBase);\r\n    const result = withAll\r\n        ? [{ _id: \"0\", name: \"wszystkie\" }, ...categories]\r\n        : [...categories];\r\n\r\n    if (setData) return setData(result);\r\n    return result;\r\n};\r\n\r\nexport {\r\n    getOneNotice,\r\n    getOneProduct,\r\n    getNotices,\r\n    getProducts,\r\n    getCategories,\r\n    data,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}