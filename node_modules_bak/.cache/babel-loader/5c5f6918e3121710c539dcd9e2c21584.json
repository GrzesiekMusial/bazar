{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\app\\\\components\\\\board\\\\post.jsx\",\n    _s = $RefreshSig$();\n\nimport ImageSlider from \"../common/imageSlider\";\nimport SearchBox from \"../common/searchBox\";\nimport { dataFilter } from \"../../../methods/filter\";\nimport * as time from \"../../../methods/time\";\nimport { useState } from \"react\";\nimport AcceptModal from \"../common/modal\";\nimport * as base from \"../../../methods/data\";\nimport config from \"../../config/config.json\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Post = ({\n  card,\n  ...props\n}) => {\n  _s();\n\n  const [modal, setModal] = useState(false);\n  const {\n    user,\n    renderImage,\n    history,\n    location\n  } = props;\n\n  const handleDelete = async card => {\n    try {\n      document.getElementById(card._id).classList.toggle(\"delete\");\n      await base.noticeDelete(card);\n      document.getElementById(card._id).remove();\n      setModal(false);\n    } catch (er) {\n      document.getElementById(card._id).classList.toggle(\"delete\");\n    }\n  };\n\n  function expand(id) {\n    document.getElementById(id).classList.toggle(\"show\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: card._id,\n      className: \"board\",\n      onClick: () => expand(card._id),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board__header--title\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: card.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board__header--details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: card.author ? card.author.login : \"Undefined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: time.getDate(card.date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board__content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board__content--images\",\n          onClick: e => e.stopPropagation(),\n          children: [card.text && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: card.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 39\n          }, this), card.images && /*#__PURE__*/_jsxDEV(ImageSlider, {\n            images: card.images,\n            handleClick: (i, index, arr) => renderImage(arr, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), card.author && user && user._id === card.author._id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board__delete\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(NavLink, {\n            to: {\n              pathname: `edit/${card._id}`,\n              state: location.state,\n              back: location.pathname\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"actionBtn edit\",\n              children: \"EDYTUJ\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"actionBtn delete\",\n            onClick: () => setModal(card),\n            children: \"USU\\u0143\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), modal && /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => e.stopPropagation(),\n      children: /*#__PURE__*/_jsxDEV(AcceptModal, {\n        close: setModal,\n        accept: () => handleDelete(modal),\n        title: `Potwierdź operację usunięcia ${modal.title}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Post, \"FxRBWQPa/dKnwvdbY5qed8chvVc=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/app/components/board/post.jsx"],"names":["ImageSlider","SearchBox","dataFilter","time","useState","AcceptModal","base","config","NavLink","Post","card","props","modal","setModal","user","renderImage","history","location","handleDelete","document","getElementById","_id","classList","toggle","noticeDelete","remove","er","expand","id","title","author","login","getDate","date","e","stopPropagation","text","images","i","index","arr","pathname","state","back"],"mappings":"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","sourcesContent":["import ImageSlider from \"../common/imageSlider\";\r\nimport SearchBox from \"../common/searchBox\";\r\nimport { dataFilter } from \"../../../methods/filter\";\r\nimport * as time from \"../../../methods/time\";\r\nimport { useState } from \"react\";\r\nimport AcceptModal from \"../common/modal\";\r\nimport * as base from \"../../../methods/data\";\r\nimport config from \"../../config/config.json\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Post = ({ card, ...props }) => {\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const { user, renderImage, history, location } = props;\r\n\r\n    const handleDelete = async (card) => {\r\n        try {\r\n            document.getElementById(card._id).classList.toggle(\"delete\");\r\n            await base.noticeDelete(card);\r\n            document.getElementById(card._id).remove();\r\n            setModal(false);\r\n        } catch (er) {\r\n            document.getElementById(card._id).classList.toggle(\"delete\");\r\n        }\r\n    };\r\n\r\n    function expand(id) {\r\n        document.getElementById(id).classList.toggle(\"show\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                id={card._id}\r\n                className=\"board\"\r\n                onClick={() => expand(card._id)}\r\n            >\r\n                <div className=\"board__header\">\r\n                    <div className=\"board__header--title\">\r\n                        <p>{card.title}</p>\r\n                    </div>\r\n                    <div className=\"board__header--details\">\r\n                        <p>{card.author ? card.author.login : \"Undefined\"}</p>\r\n                        <p>{time.getDate(card.date)}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"board__content\">\r\n                    <div\r\n                        className=\"board__content--images\"\r\n                        onClick={(e) => e.stopPropagation()}\r\n                    >\r\n                        {card.text && <p>{card.text}</p>}\r\n                        {card.images && (\r\n                            <ImageSlider\r\n                                images={card.images}\r\n                                handleClick={(i, index, arr) =>\r\n                                    renderImage(arr, index)\r\n                                }\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    {card.author && user && user._id === card.author._id && (\r\n                        <div\r\n                            className=\"board__delete\"\r\n                            onClick={(e) => e.stopPropagation()}\r\n                        >\r\n                            <NavLink\r\n                                to={{\r\n                                    pathname: `edit/${card._id}`,\r\n                                    state: location.state,\r\n                                    back: location.pathname,\r\n                                }}\r\n                            >\r\n                                <button className=\"actionBtn edit\">\r\n                                    EDYTUJ\r\n                                </button>\r\n                            </NavLink>\r\n                            <button\r\n                                className=\"actionBtn delete\"\r\n                                onClick={() => setModal(card)}\r\n                            >\r\n                                USUŃ\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {modal && (\r\n                <div onClick={(e) => e.stopPropagation()}>\r\n                    <AcceptModal\r\n                        close={setModal}\r\n                        accept={() => handleDelete(modal)}\r\n                        title={`Potwierdź operację usunięcia ${modal.title}`}\r\n                    />\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}