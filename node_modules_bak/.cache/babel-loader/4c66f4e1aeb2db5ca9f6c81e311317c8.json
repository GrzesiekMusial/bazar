{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\app\\\\components\\\\common\\\\form\\\\imageInput.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport ImageSlider from \"../imageSlider\";\n\nconst ImageInput = ({\n  handleChange,\n  preview\n}) => {\n  function preview_image(event) {\n    var reader = new FileReader();\n\n    reader.onload = function () {\n      var output = document.getElementById(\"output_image\");\n      output.src = reader.result;\n    };\n\n    reader.readAsDataURL(event);\n    return;\n  }\n\n  const result = [];\n\n  for (let key in arr) {\n    if (arr[key][\"lastModified\"]) {\n      result.push(arr[key]);\n    }\n  }\n\n  handleChange(result);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"file\",\n      name: \"images\",\n      multiple: true // onChange={(e) => handleChange(e.target.files)}\n      ,\n      onChange: e => prevState(e.target.files)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), prev && prev.map(img => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: URL.createObjectURL(img)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 35\n    }, this))]\n  }, void 0, true);\n};\n\n_c = ImageInput;\nexport default ImageInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageInput\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/app/components/common/form/imageInput.jsx"],"names":["React","useState","useEffect","ImageSlider","ImageInput","handleChange","preview","preview_image","event","reader","FileReader","onload","output","document","getElementById","src","result","readAsDataURL","key","arr","push","e","prevState","target","files","prev","map","img","URL","createObjectURL"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAA+B;AAC9C,WAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,YAAY;AACxB,UAAIC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAb;AACAF,MAAAA,MAAM,CAACG,GAAP,GAAaN,MAAM,CAACO,MAApB;AACH,KAHD;;AAIAP,IAAAA,MAAM,CAACQ,aAAP,CAAqBT,KAArB;AACA;AACH;;AAED,QAAMQ,MAAM,GAAG,EAAf;;AAEA,OAAK,IAAIE,GAAT,IAAgBC,GAAhB,EAAqB;AACjB,QAAIA,GAAG,CAACD,GAAD,CAAH,CAAS,cAAT,CAAJ,EAA8B;AAC1BF,MAAAA,MAAM,CAACI,IAAP,CAAYD,GAAG,CAACD,GAAD,CAAf;AACH;AACJ;;AAEDb,EAAAA,YAAY,CAACW,MAAD,CAAZ;AAEA,sBACI;AAAA,4BACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,EAAE,EAAC,MAFP;AAGI,MAAA,IAAI,EAAC,QAHT;AAII,MAAA,QAAQ,MAJZ,CAKI;AALJ;AAMI,MAAA,QAAQ,EAAGK,CAAD,IAAOC,SAAS,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV;AAN9B;AAAA;AAAA;AAAA;AAAA,YADJ,EAUKC,IAAI,IACDA,IAAI,CAACC,GAAL,CAAUC,GAAD,iBAAS;AAAK,MAAA,GAAG,EAAEC,GAAG,CAACC,eAAJ,CAAoBF,GAApB;AAAV;AAAA;AAAA;AAAA;AAAA,YAAlB,CAXR;AAAA,kBADJ;AAeH,CApCD;;KAAMvB,U;AAsCN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport ImageSlider from \"../imageSlider\";\r\n\r\nconst ImageInput = ({ handleChange, preview }) => {\r\n    function preview_image(event) {\r\n        var reader = new FileReader();\r\n        reader.onload = function () {\r\n            var output = document.getElementById(\"output_image\");\r\n            output.src = reader.result;\r\n        };\r\n        reader.readAsDataURL(event);\r\n        return;\r\n    }\r\n\r\n    const result = [];\r\n\r\n    for (let key in arr) {\r\n        if (arr[key][\"lastModified\"]) {\r\n            result.push(arr[key]);\r\n        }\r\n    }\r\n\r\n    handleChange(result);\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type=\"file\"\r\n                id=\"file\"\r\n                name=\"images\"\r\n                multiple\r\n                // onChange={(e) => handleChange(e.target.files)}\r\n                onChange={(e) => prevState(e.target.files)}\r\n            />\r\n\r\n            {prev &&\r\n                prev.map((img) => <img src={URL.createObjectURL(img)}></img>)}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ImageInput;\r\n"]},"metadata":{},"sourceType":"module"}