{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\app\\\\components\\\\common\\\\protectedRoute.jsx\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport * as auth from \"../../../api/auth\";\n\nconst ProtectedRoute = ({\n  component: Component,\n  render,\n  title,\n  protect = true,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (protect && !auth.getUser()) return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/login\",\n          state: {\n            from: props.location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }, this);\n      return Component ? /*#__PURE__*/_jsxDEV(Component, { ...props,\n        title: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this) : render(props);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/app/components/common/protectedRoute.jsx"],"names":["React","Route","Redirect","auth","ProtectedRoute","component","Component","render","title","protect","rest","props","getUser","pathname","state","from","location"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAO,KAAKC,IAAZ,MAAsB,mBAAtB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AACpBC,EAAAA,SAAS,EAAEC,SADS;AAEpBC,EAAAA,MAFoB;AAGpBC,EAAAA,KAHoB;AAIpBC,EAAAA,OAAO,GAAG,IAJU;AAKpB,KAAGC;AALiB,CAAD,KAMjB;AACF,sBACI,QAAC,KAAD,OACQA,IADR;AAEI,IAAA,MAAM,EAAGC,KAAD,IAAW;AACf,UAAIF,OAAO,IAAI,CAACN,IAAI,CAACS,OAAL,EAAhB,EACI,oBACI,QAAC,QAAD;AACI,QAAA,EAAE,EAAE;AACAC,UAAAA,QAAQ,EAAE,QADV;AAEAC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAd;AAFP;AADR;AAAA;AAAA;AAAA;AAAA,cADJ;AAQJ,aAAOV,SAAS,gBACZ,QAAC,SAAD,OAAeK,KAAf;AAAsB,QAAA,KAAK,EAAEH;AAA7B;AAAA;AAAA;AAAA;AAAA,cADY,GAGZD,MAAM,CAACI,KAAD,CAHV;AAKH;AAjBL;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CA5BD;;KAAMP,c;AA8BN,eAAeA,cAAf","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport * as auth from \"../../../api/auth\";\r\n\r\nconst ProtectedRoute = ({\r\n    component: Component,\r\n    render,\r\n    title,\r\n    protect = true,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => {\r\n                if (protect && !auth.getUser())\r\n                    return (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/login\",\r\n                                state: { from: props.location },\r\n                            }}\r\n                        />\r\n                    );\r\n                return Component ? (\r\n                    <Component {...props} title={title} />\r\n                ) : (\r\n                    render(props)\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"]},"metadata":{},"sourceType":"module"}