{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\app\\\\components\\\\user\\\\login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport { pick } from \"lodash\";\nimport { validationSchema } from \"./models/login\";\nimport { RiUserAddLine } from \"react-icons/ri\";\nimport * as auth from \"../../../services/auth\";\nimport AddInputBox from \"../common/form/addInputBox.jsx\";\nimport AddSubmitButton from \"../common/form/submitButton.jsx\";\nimport Buttons from \"../common/buttons.jsx\";\nimport Spinner from \"../common/spinner\";\n\nconst Login = props => {\n  _s();\n\n  const [load, setLoad] = useState(false);\n  const {\n    user,\n    title,\n    location\n  } = props;\n  console.log(user, \"USER\");\n  useEffect(() => {\n    title(\"login\");\n  }, []);\n\n  const handleLogin = async user => {\n    setLoad(true);\n    user.email = user.email.trim().toLowerCase();\n    user = pick(user, [\"email\", \"password\"]);\n    const response = await auth.login(user);\n\n    if (response.ok) {\n      localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\n      const {\n        state\n      } = location;\n      window.location = state ? state.from.pathname : \"/\";\n    } else setLoad(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: [load && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [user && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Zalogowany jako:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: user.login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"actionBtn\",\n          onClick: () => auth.logout(),\n          children: \"WYLOGUJ\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), !user && /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: \"\",\n          password: \"\"\n        },\n        onSubmit: values => handleLogin(values),\n        validationSchema: validationSchema,\n        children: ({}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login__buttons\",\n            children: [/*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/register\",\n              children: /*#__PURE__*/_jsxDEV(RiUserAddLine, {\n                className: \"specialBtn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n              buttons: [{\n                name: /*#__PURE__*/_jsxDEV(RiUserAddLine, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 55\n                }, this),\n                ref: \"/register\"\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(AddInputBox // className=\"addBoard__title\"\n            , {\n              name: \"email\",\n              label: \"Email\",\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(AddInputBox // className=\"addBoard__title\"\n            , {\n              label: \"Password\",\n              name: \"password\",\n              type: \"password\",\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(AddSubmitButton, {\n            className: \"actionBtn\",\n            title: \"ZALOGUJ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"ijzMgfjU450NjE2OuXXNqDmJ21Y=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/app/components/user/login.jsx"],"names":["React","useEffect","useState","NavLink","Formik","pick","validationSchema","RiUserAddLine","auth","AddInputBox","AddSubmitButton","Buttons","Spinner","Login","props","load","setLoad","user","title","location","console","log","handleLogin","email","trim","toLowerCase","response","login","ok","localStorage","setItem","headers","state","window","from","pathname","logout","password","values","name","ref"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport { pick } from \"lodash\";\r\n\r\nimport { validationSchema } from \"./models/login\";\r\n\r\nimport { RiUserAddLine } from \"react-icons/ri\";\r\n\r\nimport * as auth from \"../../../services/auth\";\r\n\r\nimport AddInputBox from \"../common/form/addInputBox.jsx\";\r\nimport AddSubmitButton from \"../common/form/submitButton.jsx\";\r\nimport Buttons from \"../common/buttons.jsx\";\r\nimport Spinner from \"../common/spinner\";\r\n\r\nconst Login = (props) => {\r\n    const [load, setLoad] = useState(false);\r\n\r\n    const { user, title, location } = props;\r\n\r\n    console.log(user, \"USER\");\r\n\r\n    useEffect(() => {\r\n        title(\"login\");\r\n    }, []);\r\n\r\n    const handleLogin = async (user) => {\r\n        setLoad(true);\r\n        user.email = user.email.trim().toLowerCase();\r\n        user = pick(user, [\"email\", \"password\"]);\r\n        const response = await auth.login(user);\r\n\r\n        if (response.ok) {\r\n            localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\r\n\r\n            const { state } = location;\r\n            window.location = state ? state.from.pathname : \"/\";\r\n        } else setLoad(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            {load && <Spinner />}\r\n            <div className=\"login\">\r\n                {user && (\r\n                    <>\r\n                        <div className=\"login__info\">\r\n                            <div>Zalogowany jako:</div>\r\n                            <div>{user.login}</div>\r\n                        </div>\r\n\r\n                        <button\r\n                            className=\"actionBtn\"\r\n                            onClick={() => auth.logout()}\r\n                        >\r\n                            WYLOGUJ\r\n                        </button>\r\n                    </>\r\n                )}\r\n\r\n                {!user && (\r\n                    <Formik\r\n                        initialValues={{\r\n                            email: \"\",\r\n                            password: \"\",\r\n                        }}\r\n                        onSubmit={(values) => handleLogin(values)}\r\n                        validationSchema={validationSchema}\r\n                    >\r\n                        {({}) => (\r\n                            <>\r\n                                <div className=\"login__buttons\">\r\n                                    <NavLink to=\"/register\">\r\n                                        <RiUserAddLine className=\"specialBtn\" />\r\n                                    </NavLink>\r\n\r\n                                    <Buttons\r\n                                        buttons={[\r\n                                            {\r\n                                                name: <RiUserAddLine />,\r\n                                                ref: \"/register\",\r\n                                            },\r\n                                        ]}\r\n                                    />\r\n\r\n                                    <AddInputBox\r\n                                        // className=\"addBoard__title\"\r\n                                        name=\"email\"\r\n                                        label=\"Email\"\r\n                                        placeholder=\"Email\"\r\n                                    />\r\n\r\n                                    <AddInputBox\r\n                                        // className=\"addBoard__title\"\r\n                                        label=\"Password\"\r\n                                        name=\"password\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <AddSubmitButton\r\n                                    className=\"actionBtn\"\r\n                                    title=\"ZALOGUJ\"\r\n                                />\r\n                            </>\r\n                        )}\r\n                    </Formik>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}