{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\app\\\\components\\\\shop\\\\addProduct.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport * as prodBase from \"../../../api/products\";\nimport * as imagesBase from \"../../../api/images\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport AddTextBox from \"../common/form/addTextBox\";\nimport AddInputBox from \"../common/form/addInputBox\";\nimport AddSelectBox from \"../common/form/addSelectBox\";\nimport AddSubmitButton from \"../common/form/submitButton\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ImageInput from \"../common/form/imageInput\";\nimport { save } from \"../../../methods/save\";\nimport * as offer from \"../../../methods/data\";\nimport * as categoriesLoad from \"../../../methods/categories\";\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required(\"Nazwa jest wymagana.\").min(3).typeError(\"Nieprawidłowa wartość.\").max(120).label(\"Nazwa\"),\n  text: Yup.string().max(6000),\n  images: Yup.array().of(Yup.string().max(44)),\n  price: Yup.number().typeError(\"Nieprawidłowa wartość.\").max(9000000).test(\"is-decimal\", \"invalid decimal\", value => (value + \"\").match(/d*/)),\n  category: Yup.string().required().max(255)\n});\n\nconst AddProduct = props => {\n  _s();\n\n  const [image, setImage] = useState([]);\n  const [categories, setCategories] = useState(null);\n  const [edit, setEdit] = useState(null);\n  useEffect(async () => {\n    props.title(\"sprzedaj\");\n    if (!(await categoriesLoad.load(setCategories))) props.history.push(\"/add\");\n    const result = await offer.getOne(props.match.params.id, prodBase, setEdit, setImage);\n    if (!result) props.history.push(\"/add\");\n  }, []);\n\n  const handleSave = async values => {\n    const result = await save(values, edit, image, prodBase);\n    if (result) props.history.push(`/bazar/product/${result._id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: categories && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addBoard\",\n        children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addBoard__images\",\n          children: /*#__PURE__*/_jsxDEV(ImageInput, {\n            handleChange: setImage,\n            preview: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          enableReinitialize: true,\n          initialValues: edit ? {\n            text: edit.text,\n            title: edit.title,\n            price: edit.price,\n            category: edit.category._id\n          } : {\n            text: \"\",\n            title: \"\",\n            price: \"\",\n            category: categories[0]._id\n          },\n          onSubmit: values => handleSave(values, image),\n          validationSchema: validationSchema,\n          children: ({}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(AddInputBox, {\n              className: \"addBoard__title\",\n              name: \"title\",\n              placeholder: \"Nazwa\",\n              defaultValue: edit ? edit.title : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(AddTextBox, {\n              className: \"addBoard__text\",\n              name: \"text\",\n              placeholder: \"Opis...\",\n              defaultValue: edit ? edit.text : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"addBoard__details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(AddInputBox, {\n                  label: \"CENA\",\n                  placeholder: \"cena\",\n                  name: \"price\",\n                  id: \"price\",\n                  className: \"addBoard__details--price\",\n                  defaultValue: edit ? edit.price : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: categories && /*#__PURE__*/_jsxDEV(AddSelectBox, {\n                  label: \"KATEGORIA\",\n                  arr: categories,\n                  id: \"category\",\n                  name: \"category\",\n                  className: \"addBoard__details--category\",\n                  defaultValue: edit ? edit.category._id : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"addBoard__buttons\",\n              children: /*#__PURE__*/_jsxDEV(AddSubmitButton, {\n                className: \"actionBtn\",\n                title: edit ? \"ZAPISZ\" : \"OPUBLIKUJ\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddProduct, \"yKgTaGwkhmgT4R9oGrA3E9Rx5cU=\");\n\n_c = AddProduct;\nexport default AddProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/app/components/shop/addProduct.jsx"],"names":["React","useState","useEffect","prodBase","imagesBase","Formik","Yup","AddTextBox","AddInputBox","AddSelectBox","AddSubmitButton","toast","ToastContainer","ImageInput","save","offer","categoriesLoad","validationSchema","object","shape","title","string","required","min","typeError","max","label","text","images","array","of","price","number","test","value","match","category","AddProduct","props","image","setImage","categories","setCategories","edit","setEdit","load","history","push","result","getOne","params","id","handleSave","values","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport * as prodBase from \"../../../api/products\";\r\nimport * as imagesBase from \"../../../api/images\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport AddTextBox from \"../common/form/addTextBox\";\r\nimport AddInputBox from \"../common/form/addInputBox\";\r\nimport AddSelectBox from \"../common/form/addSelectBox\";\r\nimport AddSubmitButton from \"../common/form/submitButton\";\r\n\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport ImageInput from \"../common/form/imageInput\";\r\n\r\nimport { save } from \"../../../methods/save\";\r\nimport * as offer from \"../../../methods/data\";\r\nimport * as categoriesLoad from \"../../../methods/categories\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n        .required(\"Nazwa jest wymagana.\")\r\n        .min(3)\r\n        .typeError(\"Nieprawidłowa wartość.\")\r\n        .max(120)\r\n        .label(\"Nazwa\"),\r\n    text: Yup.string().max(6000),\r\n    images: Yup.array().of(Yup.string().max(44)),\r\n    price: Yup.number()\r\n        .typeError(\"Nieprawidłowa wartość.\")\r\n        .max(9000000)\r\n        .test(\"is-decimal\", \"invalid decimal\", (value) =>\r\n            (value + \"\").match(/d*/)\r\n        ),\r\n    category: Yup.string().required().max(255),\r\n});\r\n\r\nconst AddProduct = (props) => {\r\n    const [image, setImage] = useState([]);\r\n    const [categories, setCategories] = useState(null);\r\n    const [edit, setEdit] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        props.title(\"sprzedaj\");\r\n        if (!(await categoriesLoad.load(setCategories)))\r\n            props.history.push(\"/add\");\r\n\r\n        const result = await offer.getOne(\r\n            props.match.params.id,\r\n            prodBase,\r\n            setEdit,\r\n            setImage\r\n        );\r\n        if (!result) props.history.push(\"/add\");\r\n    }, []);\r\n\r\n    const handleSave = async (values) => {\r\n        const result = await save(values, edit, image, prodBase);\r\n        if (result) props.history.push(`/bazar/product/${result._id}`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            {categories && (\r\n                <div className=\"screen__container\">\r\n                    <div className=\"addBoard\">\r\n                        <ToastContainer />\r\n\r\n                        <div className=\"addBoard__images\">\r\n                            <ImageInput\r\n                                handleChange={setImage}\r\n                                preview={image}\r\n                            />\r\n                        </div>\r\n\r\n                        <Formik\r\n                            enableReinitialize={true}\r\n                            initialValues={\r\n                                edit\r\n                                    ? {\r\n                                          text: edit.text,\r\n                                          title: edit.title,\r\n                                          price: edit.price,\r\n                                          category: edit.category._id,\r\n                                      }\r\n                                    : {\r\n                                          text: \"\",\r\n                                          title: \"\",\r\n                                          price: \"\",\r\n                                          category: categories[0]._id,\r\n                                      }\r\n                            }\r\n                            onSubmit={(values) => handleSave(values, image)}\r\n                            validationSchema={validationSchema}\r\n                        >\r\n                            {({}) => (\r\n                                <>\r\n                                    <AddInputBox\r\n                                        className=\"addBoard__title\"\r\n                                        name=\"title\"\r\n                                        placeholder=\"Nazwa\"\r\n                                        defaultValue={edit ? edit.title : null}\r\n                                    />\r\n\r\n                                    <AddTextBox\r\n                                        className=\"addBoard__text\"\r\n                                        name=\"text\"\r\n                                        placeholder=\"Opis...\"\r\n                                        defaultValue={edit ? edit.text : null}\r\n                                    />\r\n\r\n                                    <div className=\"addBoard__details\">\r\n                                        <div>\r\n                                            <AddInputBox\r\n                                                label=\"CENA\"\r\n                                                placeholder=\"cena\"\r\n                                                name=\"price\"\r\n                                                id=\"price\"\r\n                                                className=\"addBoard__details--price\"\r\n                                                defaultValue={\r\n                                                    edit ? edit.price : null\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div>\r\n                                            {categories && (\r\n                                                <AddSelectBox\r\n                                                    label=\"KATEGORIA\"\r\n                                                    arr={categories}\r\n                                                    id=\"category\"\r\n                                                    name=\"category\"\r\n                                                    className=\"addBoard__details--category\"\r\n                                                    defaultValue={\r\n                                                        edit\r\n                                                            ? edit.category._id\r\n                                                            : null\r\n                                                    }\r\n                                                />\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"addBoard__buttons\">\r\n                                        <AddSubmitButton\r\n                                            className=\"actionBtn\"\r\n                                            title={\r\n                                                edit ? \"ZAPISZ\" : \"OPUBLIKUJ\"\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                        </Formik>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddProduct;\r\n"]},"metadata":{},"sourceType":"module"}