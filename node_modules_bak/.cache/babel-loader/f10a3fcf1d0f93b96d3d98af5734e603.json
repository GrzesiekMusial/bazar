{"ast":null,"code":"import { apiClient as client } from \"./client\";\nconst endpoint = \"/products\";\n\nconst get = () => client.get(endpoint);\n\nconst getOne = id => client.get(`${endpoint}/${id}`);\n\nconst add = async (body) => await client.post(endpoint, body, {\n  onUploadProgress: ProgressEvent => {\n    console.log(ProgressEvent.loaded / ProgressEvent.total);\n  }\n});\n\nconst edit = (id, body) => client.put(`${endpoint}/${id}`, body, {\n  onDownloadProgress: progress => console.log(progress)\n}).then(response => console.log(response));\n\nconst remove = async body => await client.delete(endpoint + \"/\" + body);\n\nexport { get, add, edit, remove, getOne };","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/services/products.js"],"names":["apiClient","client","endpoint","get","getOne","id","add","body","post","onUploadProgress","ProgressEvent","console","log","loaded","total","edit","put","onDownloadProgress","progress","then","response","remove","delete"],"mappings":"AAAA,SAASA,SAAS,IAAIC,MAAtB,QAAoC,UAApC;AAEA,MAAMC,QAAQ,GAAG,WAAjB;;AAEA,MAAMC,GAAG,GAAG,MAAMF,MAAM,CAACE,GAAP,CAAWD,QAAX,CAAlB;;AAEA,MAAME,MAAM,GAAIC,EAAD,IAAQJ,MAAM,CAACE,GAAP,CAAY,GAAED,QAAS,IAAGG,EAAG,EAA7B,CAAvB;;AAEA,MAAMC,GAAG,GAAG,OAAOC,IAAP,KACR,MAAMN,MAAM,CAACO,IAAP,CAAYN,QAAZ,EAAsBK,IAAtB,EAA4B;AAC9BE,EAAAA,gBAAgB,EAAGC,aAAD,IAAmB;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,aAAa,CAACG,MAAd,GAAuBH,aAAa,CAACI,KAAjD;AACH;AAH6B,CAA5B,CADV;;AAOA,MAAMC,IAAI,GAAG,CAACV,EAAD,EAAKE,IAAL,KACTN,MAAM,CACDe,GADL,CACU,GAAEd,QAAS,IAAGG,EAAG,EAD3B,EAC8BE,IAD9B,EACoC;AAC5BU,EAAAA,kBAAkB,EAAGC,QAAD,IAAcP,OAAO,CAACC,GAAR,CAAYM,QAAZ;AADN,CADpC,EAIKC,IAJL,CAIWC,QAAD,IAAcT,OAAO,CAACC,GAAR,CAAYQ,QAAZ,CAJxB,CADJ;;AAOA,MAAMC,MAAM,GAAG,MAAOd,IAAP,IAAgB,MAAMN,MAAM,CAACqB,MAAP,CAAcpB,QAAQ,GAAG,GAAX,GAAiBK,IAA/B,CAArC;;AAEA,SAASJ,GAAT,EAAcG,GAAd,EAAmBS,IAAnB,EAAyBM,MAAzB,EAAiCjB,MAAjC","sourcesContent":["import { apiClient as client } from \"./client\";\r\n\r\nconst endpoint = \"/products\";\r\n\r\nconst get = () => client.get(endpoint);\r\n\r\nconst getOne = (id) => client.get(`${endpoint}/${id}`);\r\n\r\nconst add = async (body) =>\r\n    await client.post(endpoint, body, {\r\n        onUploadProgress: (ProgressEvent) => {\r\n            console.log(ProgressEvent.loaded / ProgressEvent.total);\r\n        },\r\n    });\r\n\r\nconst edit = (id, body) =>\r\n    client\r\n        .put(`${endpoint}/${id}`, body, {\r\n            onDownloadProgress: (progress) => console.log(progress),\r\n        })\r\n        .then((response) => console.log(response));\r\n\r\nconst remove = async (body) => await client.delete(endpoint + \"/\" + body);\r\n\r\nexport { get, add, edit, remove, getOne };\r\n"]},"metadata":{},"sourceType":"module"}