{"ast":null,"code":"import { apiClient as client } from \"./client\";\n\nconst bg = require(\"../../public/images/bg.jpg\");\n\nconst endpoint = \"/images\";\n\nconst add = async body => {\n  // body = Uint8ArrayFromBase64(body);\n  const form = new FormData();\n  form.append(\"upload\", form);\n  client.setHeader(\"Content-Type\", \"multipart/form-data\");\n  client.post(endpoint, form);\n};\n\nfunction Uint8ArrayFromBase64(base64Url) {\n  return Uint8Array.from(window.atob(base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\")), v => v.charCodeAt(0));\n}\n\n_c = Uint8ArrayFromBase64;\nexport { add };\n\nvar _c;\n\n$RefreshReg$(_c, \"Uint8ArrayFromBase64\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/api/images.js"],"names":["apiClient","client","bg","require","endpoint","add","body","form","FormData","append","setHeader","post","Uint8ArrayFromBase64","base64Url","Uint8Array","from","window","atob","replace","v","charCodeAt"],"mappings":"AAAA,SAASA,SAAS,IAAIC,MAAtB,QAAoC,UAApC;;AAEA,MAAMC,EAAE,GAAGC,OAAO,CAAC,4BAAD,CAAlB;;AAEA,MAAMC,QAAQ,GAAG,SAAjB;;AAEA,MAAMC,GAAG,GAAG,MAAOC,IAAP,IAAgB;AACxB;AACA,QAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AAEAD,EAAAA,IAAI,CAACE,MAAL,CAAY,QAAZ,EAAsBF,IAAtB;AAEAN,EAAAA,MAAM,CAACS,SAAP,CAAiB,cAAjB,EAAiC,qBAAjC;AACAT,EAAAA,MAAM,CAACU,IAAP,CAAYP,QAAZ,EAAsBG,IAAtB;AACH,CARD;;AAUA,SAASK,oBAAT,CAA8BC,SAA9B,EAAyC;AACrC,SAAOC,UAAU,CAACC,IAAX,CACHC,MAAM,CAACC,IAAP,CAAYJ,SAAS,CAACK,OAAV,CAAkB,IAAlB,EAAwB,GAAxB,EAA6BA,OAA7B,CAAqC,IAArC,EAA2C,GAA3C,CAAZ,CADG,EAEFC,CAAD,IAAOA,CAAC,CAACC,UAAF,CAAa,CAAb,CAFJ,CAAP;AAIH;;KALQR,oB;AAOT,SAASP,GAAT","sourcesContent":["import { apiClient as client } from \"./client\";\r\n\r\nconst bg = require(\"../../public/images/bg.jpg\");\r\n\r\nconst endpoint = \"/images\";\r\n\r\nconst add = async (body) => {\r\n    // body = Uint8ArrayFromBase64(body);\r\n    const form = new FormData();\r\n\r\n    form.append(\"upload\", form);\r\n\r\n    client.setHeader(\"Content-Type\", \"multipart/form-data\");\r\n    client.post(endpoint, form);\r\n};\r\n\r\nfunction Uint8ArrayFromBase64(base64Url) {\r\n    return Uint8Array.from(\r\n        window.atob(base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\")),\r\n        (v) => v.charCodeAt(0)\r\n    );\r\n}\r\n\r\nexport { add };\r\n"]},"metadata":{},"sourceType":"module"}