{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\dev\\\\TESTY\\\\TEST NATIVE\\\\bazar\\\\src\\\\app\\\\components\\\\common\\\\header.jsx\";\nimport React from \"react\";\nimport { create } from \"apisauce\";\nimport { apiClient } from \"../../../services/client\";\n\nconst Header = ({\n  title\n}) => {\n  if (!title) return null;\n  apiClient = create({\n    baseURL: process.env.REACT_APP_API_URL,\n    onUploadProgress: function (progressEvent) {\n      console.log(progressEvent.loaded);\n      var percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n\n      try {\n        window.getElementById(\"header\").innerHTML = percentCompleted;\n      } catch (ex) {}\n\n      console.log(\"upload \", percentCompleted);\n    },\n    onDownloadProgress: function (progressEvent) {\n      var percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n\n      try {\n        window.getElementById(\"header\").innerHTML = percentCompleted;\n      } catch (ex) {}\n\n      console.log(\"download \", percentCompleted);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    id: \"header\",\n    className: \"screen__header\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/app/components/common/header.jsx"],"names":["React","create","apiClient","Header","title","baseURL","process","env","REACT_APP_API_URL","onUploadProgress","progressEvent","console","log","loaded","percentCompleted","Math","round","total","window","getElementById","innerHTML","ex","onDownloadProgress"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,SAASC,SAAT,QAA0B,0BAA1B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC1B,MAAI,CAACA,KAAL,EAAY,OAAO,IAAP;AAEZF,EAAAA,SAAS,GAAGD,MAAM,CAAC;AACfI,IAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,iBADN;AAGfC,IAAAA,gBAAgB,EAAE,UAAUC,aAAV,EAAyB;AACvCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,aAAa,CAACG,MAA1B;AACA,UAAIC,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAClBN,aAAa,CAACG,MAAd,GAAuB,GAAxB,GAA+BH,aAAa,CAACO,KAD1B,CAAvB;;AAGA,UAAI;AACAC,QAAAA,MAAM,CAACC,cAAP,CAAsB,QAAtB,EAAgCC,SAAhC,GAA4CN,gBAA5C;AACH,OAFD,CAEE,OAAOO,EAAP,EAAW,CAAE;;AACfV,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,gBAAvB;AACH,KAZc;AAafQ,IAAAA,kBAAkB,EAAE,UAAUZ,aAAV,EAAyB;AACzC,UAAII,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAClBN,aAAa,CAACG,MAAd,GAAuB,GAAxB,GAA+BH,aAAa,CAACO,KAD1B,CAAvB;;AAGA,UAAI;AACAC,QAAAA,MAAM,CAACC,cAAP,CAAsB,QAAtB,EAAgCC,SAAhC,GAA4CN,gBAA5C;AACH,OAFD,CAEE,OAAOO,EAAP,EAAW,CAAE;;AACfV,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBE,gBAAzB;AACH;AArBc,GAAD,CAAlB;AAwBA,sBACI;AAAQ,IAAA,EAAE,EAAC,QAAX;AAAoB,IAAA,SAAS,EAAC,gBAA9B;AAAA,2BACI;AAAA,gBAAOV;AAAP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhCD;;KAAMD,M;AAkCN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\r\nimport { create } from \"apisauce\";\r\n\r\nimport { apiClient } from \"../../../services/client\";\r\n\r\nconst Header = ({ title }) => {\r\n    if (!title) return null;\r\n\r\n    apiClient = create({\r\n        baseURL: process.env.REACT_APP_API_URL,\r\n\r\n        onUploadProgress: function (progressEvent) {\r\n            console.log(progressEvent.loaded);\r\n            var percentCompleted = Math.round(\r\n                (progressEvent.loaded * 100) / progressEvent.total\r\n            );\r\n            try {\r\n                window.getElementById(\"header\").innerHTML = percentCompleted;\r\n            } catch (ex) {}\r\n            console.log(\"upload \", percentCompleted);\r\n        },\r\n        onDownloadProgress: function (progressEvent) {\r\n            var percentCompleted = Math.round(\r\n                (progressEvent.loaded * 100) / progressEvent.total\r\n            );\r\n            try {\r\n                window.getElementById(\"header\").innerHTML = percentCompleted;\r\n            } catch (ex) {}\r\n            console.log(\"download \", percentCompleted);\r\n        },\r\n    });\r\n\r\n    return (\r\n        <header id=\"header\" className=\"screen__header\">\r\n            <span>{title}</span>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n"]},"metadata":{},"sourceType":"module"}