{"ast":null,"code":"// import { apiClient as client } from \"./client\";\nimport { create } from \"apisauce\";\nconst endpoint = \"/products\";\nconst client = create({\n  baseURL: process.env.REACT_APP_API_URL\n});\n\nconst get = async (change) => await client.get(endpoint, {\n  onUploadProgress: function (progressEvent) {\n    console.log(progressEvent.loaded);\n    var percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n\n    try {\n      window.getElementById(\"header\").innerHTML = percentCompleted;\n    } catch (ex) {}\n\n    console.log(\"upload \", percentCompleted);\n  },\n  onDownloadProgress: function (progressEvent) {\n    var percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n\n    try {\n      window.getElementById(\"header\").innerHTML = percentCompleted;\n    } catch (ex) {}\n\n    console.log(\"download \", percentCompleted);\n  }\n});\n\nconst getOne = async id => await client.get(`${endpoint}/${id}`);\n\nconst add = async body => await client.post(endpoint, body);\n\nconst edit = async (id, body) => await client.put(`${endpoint}/${id}`, body);\n\nconst remove = async body => await client.delete(endpoint + \"/\" + body);\n\nexport { get, add, edit, remove, getOne };","map":{"version":3,"sources":["C:/dev/TESTY/TEST NATIVE/bazar/src/services/products.js"],"names":["create","endpoint","client","baseURL","process","env","REACT_APP_API_URL","get","change","onUploadProgress","progressEvent","console","log","loaded","percentCompleted","Math","round","total","window","getElementById","innerHTML","ex","onDownloadProgress","getOne","id","add","body","post","edit","put","remove","delete"],"mappings":"AAAA;AAEA,SAASA,MAAT,QAAuB,UAAvB;AACA,MAAMC,QAAQ,GAAG,WAAjB;AAEA,MAAMC,MAAM,GAAGF,MAAM,CAAC;AAClBG,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADH,CAAD,CAArB;;AAIA,MAAMC,GAAG,GAAG,OAAOC,MAAP,KACR,MAAMN,MAAM,CAACK,GAAP,CAAWN,QAAX,EAAqB;AACvBQ,EAAAA,gBAAgB,EAAE,UAAUC,aAAV,EAAyB;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,aAAa,CAACG,MAA1B;AACA,QAAIC,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAClBN,aAAa,CAACG,MAAd,GAAuB,GAAxB,GAA+BH,aAAa,CAACO,KAD1B,CAAvB;;AAGA,QAAI;AACAC,MAAAA,MAAM,CAACC,cAAP,CAAsB,QAAtB,EAAgCC,SAAhC,GAA4CN,gBAA5C;AACH,KAFD,CAEE,OAAOO,EAAP,EAAW,CAAE;;AACfV,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,gBAAvB;AACH,GAVsB;AAWvBQ,EAAAA,kBAAkB,EAAE,UAAUZ,aAAV,EAAyB;AACzC,QAAII,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAClBN,aAAa,CAACG,MAAd,GAAuB,GAAxB,GAA+BH,aAAa,CAACO,KAD1B,CAAvB;;AAGA,QAAI;AACAC,MAAAA,MAAM,CAACC,cAAP,CAAsB,QAAtB,EAAgCC,SAAhC,GAA4CN,gBAA5C;AACH,KAFD,CAEE,OAAOO,EAAP,EAAW,CAAE;;AACfV,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBE,gBAAzB;AACH;AAnBsB,CAArB,CADV;;AAuBA,MAAMS,MAAM,GAAG,MAAOC,EAAP,IAAc,MAAMtB,MAAM,CAACK,GAAP,CAAY,GAAEN,QAAS,IAAGuB,EAAG,EAA7B,CAAnC;;AAEA,MAAMC,GAAG,GAAG,MAAOC,IAAP,IAAgB,MAAMxB,MAAM,CAACyB,IAAP,CAAY1B,QAAZ,EAAsByB,IAAtB,CAAlC;;AAEA,MAAME,IAAI,GAAG,OAAOJ,EAAP,EAAWE,IAAX,KAAoB,MAAMxB,MAAM,CAAC2B,GAAP,CAAY,GAAE5B,QAAS,IAAGuB,EAAG,EAA7B,EAAgCE,IAAhC,CAAvC;;AAEA,MAAMI,MAAM,GAAG,MAAOJ,IAAP,IAAgB,MAAMxB,MAAM,CAAC6B,MAAP,CAAc9B,QAAQ,GAAG,GAAX,GAAiByB,IAA/B,CAArC;;AAEA,SAASnB,GAAT,EAAckB,GAAd,EAAmBG,IAAnB,EAAyBE,MAAzB,EAAiCP,MAAjC","sourcesContent":["// import { apiClient as client } from \"./client\";\r\n\r\nimport { create } from \"apisauce\";\r\nconst endpoint = \"/products\";\r\n\r\nconst client = create({\r\n    baseURL: process.env.REACT_APP_API_URL,\r\n});\r\n\r\nconst get = async (change) =>\r\n    await client.get(endpoint, {\r\n        onUploadProgress: function (progressEvent) {\r\n            console.log(progressEvent.loaded);\r\n            var percentCompleted = Math.round(\r\n                (progressEvent.loaded * 100) / progressEvent.total\r\n            );\r\n            try {\r\n                window.getElementById(\"header\").innerHTML = percentCompleted;\r\n            } catch (ex) {}\r\n            console.log(\"upload \", percentCompleted);\r\n        },\r\n        onDownloadProgress: function (progressEvent) {\r\n            var percentCompleted = Math.round(\r\n                (progressEvent.loaded * 100) / progressEvent.total\r\n            );\r\n            try {\r\n                window.getElementById(\"header\").innerHTML = percentCompleted;\r\n            } catch (ex) {}\r\n            console.log(\"download \", percentCompleted);\r\n        },\r\n    });\r\n\r\nconst getOne = async (id) => await client.get(`${endpoint}/${id}`);\r\n\r\nconst add = async (body) => await client.post(endpoint, body);\r\n\r\nconst edit = async (id, body) => await client.put(`${endpoint}/${id}`, body);\r\n\r\nconst remove = async (body) => await client.delete(endpoint + \"/\" + body);\r\n\r\nexport { get, add, edit, remove, getOne };\r\n"]},"metadata":{},"sourceType":"module"}