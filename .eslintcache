[{"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\index.js":"1","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\App.js":"2","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\reportWebVitals.js":"3","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\buttons.jsx":"4","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\header.jsx":"5","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\submitButton.jsx":"6","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\addInputBox.jsx":"7","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\filter.js":"8","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\imageSlider.jsx":"9","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\imageLoader.jsx":"10","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\searchBox.jsx":"11","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\addTextBox.jsx":"12","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\addSelectBox.jsx":"13","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\errorMessage.jsx":"14","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\protectedRoute.jsx":"15","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\modal.jsx":"16","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\imageInput.jsx":"17","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\board\\addBoard.jsx":"18","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\board\\boardCards.jsx":"19","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\board\\models\\board.js":"20","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\shop\\productDetails.jsx":"21","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\shop\\addProduct.jsx":"22","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\shop\\productCards.jsx":"23","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\user\\login.jsx":"24","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\user\\register.jsx":"25","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\other\\home.jsx":"26","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\other\\add.jsx":"27","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\save.js":"28","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\data.js":"29","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\delete.js":"30","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\load.js":"31","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\forms.jsx":"32","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\shop\\models\\product.js":"33","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\user\\models\\register.js":"34","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\user\\models\\login.js":"35","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\images.js":"36","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\client.js":"37","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\auth.js":"38","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\users.js":"39","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\products.js":"40","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\notices.js":"41","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\categories.js":"42","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\buttonBack.jsx":"43","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\spinner.jsx":"44","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\cubby.js":"45","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\time.js":"46","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\spinnerWait.jsx":"47","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\user\\forms\\loginForm.jsx":"48","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\shop\\card.jsx":"49","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\board\\post.jsx":"50"},{"size":584,"mtime":1610028171592,"results":"51","hashOfConfig":"52"},{"size":7818,"mtime":1610796545972,"results":"53","hashOfConfig":"52"},{"size":375,"mtime":1609170866605,"results":"54","hashOfConfig":"52"},{"size":403,"mtime":1610540348146,"results":"55","hashOfConfig":"52"},{"size":243,"mtime":1610478312634,"results":"56","hashOfConfig":"52"},{"size":508,"mtime":1610542594452,"results":"57","hashOfConfig":"52"},{"size":885,"mtime":1609937439304,"results":"58","hashOfConfig":"52"},{"size":708,"mtime":1610700624572,"results":"59","hashOfConfig":"52"},{"size":1272,"mtime":1609937500950,"results":"60","hashOfConfig":"52"},{"size":656,"mtime":1610479745754,"results":"61","hashOfConfig":"52"},{"size":2535,"mtime":1610654275623,"results":"62","hashOfConfig":"52"},{"size":889,"mtime":1609937455142,"results":"63","hashOfConfig":"52"},{"size":1141,"mtime":1609937448844,"results":"64","hashOfConfig":"52"},{"size":206,"mtime":1609944407243,"results":"65","hashOfConfig":"52"},{"size":945,"mtime":1609954568934,"results":"66","hashOfConfig":"52"},{"size":787,"mtime":1610638652075,"results":"67","hashOfConfig":"52"},{"size":2246,"mtime":1610367707677,"results":"68","hashOfConfig":"52"},{"size":4004,"mtime":1610796327295,"results":"69","hashOfConfig":"52"},{"size":1842,"mtime":1610792895395,"results":"70","hashOfConfig":"52"},{"size":203,"mtime":1609837678454,"results":"71","hashOfConfig":"52"},{"size":5329,"mtime":1610796345319,"results":"72","hashOfConfig":"52"},{"size":6735,"mtime":1610658111251,"results":"73","hashOfConfig":"52"},{"size":2943,"mtime":1610808404718,"results":"74","hashOfConfig":"52"},{"size":2419,"mtime":1610650095739,"results":"75","hashOfConfig":"52"},{"size":3255,"mtime":1610638652080,"results":"76","hashOfConfig":"52"},{"size":69,"mtime":1609937653822,"results":"77","hashOfConfig":"52"},{"size":737,"mtime":1610388263530,"results":"78","hashOfConfig":"52"},{"size":2974,"mtime":1610796174965,"results":"79","hashOfConfig":"52"},{"size":414,"mtime":1610143323055,"results":"80","hashOfConfig":"52"},{"size":1322,"mtime":1610796355139,"results":"81","hashOfConfig":"52"},{"size":1998,"mtime":1610700508309,"results":"82","hashOfConfig":"52"},{"size":315,"mtime":1609956839822,"results":"83","hashOfConfig":"52"},{"size":610,"mtime":1610100651960,"results":"84","hashOfConfig":"52"},{"size":622,"mtime":1610392173107,"results":"85","hashOfConfig":"52"},{"size":242,"mtime":1609940423641,"results":"86","hashOfConfig":"52"},{"size":223,"mtime":1610382520850,"results":"87","hashOfConfig":"52"},{"size":676,"mtime":1610808379355,"results":"88","hashOfConfig":"52"},{"size":649,"mtime":1610638652082,"results":"89","hashOfConfig":"52"},{"size":438,"mtime":1610389943788,"results":"90","hashOfConfig":"52"},{"size":477,"mtime":1610751322002,"results":"91","hashOfConfig":"52"},{"size":478,"mtime":1610448089908,"results":"92","hashOfConfig":"52"},{"size":329,"mtime":1610284824281,"results":"93","hashOfConfig":"52"},{"size":273,"mtime":1610638652074,"results":"94","hashOfConfig":"52"},{"size":339,"mtime":1610536345499,"results":"95","hashOfConfig":"52"},{"size":235,"mtime":1610143610517,"results":"96","hashOfConfig":"52"},{"size":858,"mtime":1610746222943,"results":"97","hashOfConfig":"52"},{"size":368,"mtime":1610486161711,"results":"98","hashOfConfig":"52"},{"size":3060,"mtime":1610568230038,"results":"99","hashOfConfig":"52"},{"size":635,"mtime":1610652198612,"results":"100","hashOfConfig":"52"},{"size":4009,"mtime":1610793914093,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1sxluq7",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"104"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"104"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"104"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"104"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"104"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"104"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"104"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"104"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"104"},"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\index.js",[],["218","219"],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\App.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\reportWebVitals.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\buttons.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\header.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\submitButton.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\addInputBox.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\filter.js",["220","221"],"const dataFilter = (filterData, category = null, text = null, user = null) => {\r\n    if (!filterData) return [];\r\n\r\n    if (user)\r\n        filterData = filterData.filter(\r\n            (card) => user === (card.author && card.author._id)\r\n        );\r\n\r\n    if (category != 0) {\r\n        filterData = filterData.filter(\r\n            (card) => category === (card.category && card.category._id)\r\n        );\r\n    }\r\n\r\n    if (text != 0)\r\n        filterData = filterData.filter(\r\n            (card) =>\r\n                card.title.toLowerCase().includes(text.toLowerCase()) ||\r\n                card.text.toLowerCase().includes(text.toLowerCase())\r\n        );\r\n\r\n    return filterData;\r\n};\r\n\r\nexport { dataFilter };\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\imageSlider.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\imageLoader.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\searchBox.jsx",["222","223"],"import React from \"react\";\r\n\r\nimport { BsFilterLeft } from \"react-icons/bs\";\r\nimport { BiSearchAlt } from \"react-icons/bi\";\r\nimport { IoFilterCircleOutline } from \"react-icons/io5\";\r\nimport { AiOutlineFileSearch } from \"react-icons/ai\";\r\n\r\nconst SearchBox = ({\r\n    categories = null,\r\n    handleSearch = null,\r\n    handleCategorySearch = null,\r\n    status,\r\n    search = true,\r\n}) => {\r\n    const searchOpen = () => {\r\n        document.getElementById(\"searchBox\").focus();\r\n    };\r\n\r\n    const CategoryOpen = () => {\r\n        document.getElementById(\"categoryBox\").focus();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {categories &&\r\n                ((status.category == 0 && (\r\n                    <BsFilterLeft\r\n                        className=\"icon icon--category\"\r\n                        onClick={CategoryOpen}\r\n                    />\r\n                )) || (\r\n                    <IoFilterCircleOutline\r\n                        className=\"icon icon--category\"\r\n                        onClick={CategoryOpen}\r\n                    />\r\n                ))}\r\n\r\n            {search &&\r\n                ((status.text == 0 && (\r\n                    <BiSearchAlt\r\n                        className=\"icon icon--search\"\r\n                        onClick={searchOpen}\r\n                    />\r\n                )) || (\r\n                    <AiOutlineFileSearch\r\n                        className=\"icon icon--search\"\r\n                        onClick={searchOpen}\r\n                    />\r\n                ))}\r\n\r\n            {categories && (\r\n                <select\r\n                    className=\"searchBox searchBox--select\"\r\n                    id=\"categoryBox\"\r\n                    onChange={(e) =>\r\n                        handleCategorySearch(e.currentTarget.value)\r\n                    }\r\n                    defaultValue={\"0\"}\r\n                    onSelect={() =>\r\n                        document.getElementById(\"searchBox\").focus()\r\n                    }\r\n                >\r\n                    {categories &&\r\n                        categories.map((cat) => (\r\n                            <option value={cat._id}>{cat.name}</option>\r\n                        ))}\r\n                </select>\r\n            )}\r\n\r\n            {search && (\r\n                <input\r\n                    id=\"searchBox\"\r\n                    className=\"searchBox searchBox--select\"\r\n                    onChange={(e) => handleSearch(e.currentTarget.value)}\r\n                ></input>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SearchBox;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\addTextBox.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\addSelectBox.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\errorMessage.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\protectedRoute.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\modal.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\imageInput.jsx",["224"],"import React from \"react\";\r\n\r\nimport { BiImageAdd } from \"react-icons/bi\";\r\n\r\nimport * as imagesBase from \"../../../../services/images\";\r\n\r\nconst ImageInput = ({ handleChange, preview, handleDelete }) => {\r\n    const imageArr = (arr) => {\r\n        const files = [];\r\n\r\n        for (let key in arr) {\r\n            if (key > 5) {\r\n                alert(\"Max 6 images accepted.\");\r\n                break;\r\n            }\r\n            if (arr[key][\"lastModified\"]) {\r\n                files.push(arr[key]);\r\n            }\r\n        }\r\n\r\n        const result = preview ? preview.concat(files) : files;\r\n        if (result.length > 6) alert(\"Maksymalna liczba zdjeć: 6\");\r\n        handleChange(result.slice(0, 6));\r\n    };\r\n\r\n    return (\r\n        <div className=\"imageInput\">\r\n            <div className=\"imageInput__images\">\r\n                {preview &&\r\n                    preview.map((prev) => (\r\n                        <img\r\n                            id={typeof prev === \"string\" ? prev : prev.name}\r\n                            src={\r\n                                typeof prev === \"string\"\r\n                                    ? imagesBase.get(prev)\r\n                                    : URL.createObjectURL(prev)\r\n                            }\r\n                            onClick={(e) => handleDelete(e.target.id)}\r\n                        ></img>\r\n                    ))}\r\n            </div>\r\n\r\n            <div className=\"imageInput__label\">\r\n                <label\r\n                    htmlFor=\"asd\"\r\n                    onClick={() =>\r\n                        document\r\n                            .getElementById(\"asd\")\r\n                            .setAttribute(\"checked\", true)\r\n                    }\r\n                >\r\n                    {preview.length < 6 && <BiImageAdd />}\r\n                </label>\r\n            </div>\r\n\r\n            <input\r\n                className=\"imageInput--input\"\r\n                checked={false}\r\n                id=\"asd\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                multiple\r\n                onChange={(e) => imageArr(e.target.files)}\r\n                accept=\"image/png, image/jpeg, image/jpg\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageInput;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\board\\addBoard.jsx",["225","226","227","228"],"import React, { useEffect, useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport config from \"../../config/config.json\";\r\n\r\nimport { validationSchema } from \"./models/board\";\r\nimport * as Forms from \"../common/form/forms\";\r\nimport * as base from \"../../../methods/data\";\r\nimport Spinner from \"../common/spinner\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst AddBoard = (props, toast) => {\r\n    const [image, setImage] = useState([]);\r\n    const [edit, setEdit] = useState(null);\r\n    const [load, setLoad] = useState(true);\r\n\r\n    const { title, history, match } = props;\r\n    const back = useHistory();\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            title(config.headers.newPost);\r\n            await base.getOneNotice(match.params.id, setEdit, setImage);\r\n            setLoad(false);\r\n        } catch (ex) {\r\n            return back.push(props.location.back, props.location.state);\r\n        }\r\n    }, []);\r\n\r\n    const handleSave = async (values) => {\r\n        try {\r\n            await base.noticeSave(values, edit, image);\r\n            if (props.location.back)\r\n                back.push(props.location.back, props.location.state);\r\n            else back.push(\"/board\");\r\n        } catch (ex) {\r\n            setLoad(false);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        const result = image.filter((img) => img !== id && img.name !== id);\r\n        setImage(result);\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            {load && <Spinner />}\r\n            <div className=\"screen__container\">\r\n                <div className=\"addBoard\">\r\n                    <div className=\"addBoard__images\">\r\n                        <Forms.Image\r\n                            handleChange={setImage}\r\n                            preview={image}\r\n                            handleDelete={handleDelete}\r\n                        />\r\n                    </div>\r\n\r\n                    <Formik\r\n                        enableReinitialize={true}\r\n                        initialValues={\r\n                            edit\r\n                                ? {\r\n                                      text: edit.text,\r\n                                      title: edit.title,\r\n                                  }\r\n                                : {\r\n                                      text: \"\",\r\n                                      title: \"\",\r\n                                  }\r\n                        }\r\n                        onSubmit={(values) => {\r\n                            handleSave(values);\r\n                            setLoad(true);\r\n                        }}\r\n                        validationSchema={validationSchema}\r\n                    >\r\n                        {({}) => (\r\n                            <>\r\n                                <Forms.Input\r\n                                    className=\"addBoard__title\"\r\n                                    name=\"title\"\r\n                                    placeholder={config.info.title}\r\n                                    defaultValue={edit ? edit.title : null}\r\n                                />\r\n                                <Forms.Text\r\n                                    className=\"addBoard__text\"\r\n                                    name=\"text\"\r\n                                    placeholder={config.info.description}\r\n                                    defaultValue={edit ? edit.text : null}\r\n                                />\r\n                                <div className=\"addBoard__buttons\">\r\n                                    <Forms.Submit\r\n                                        className=\"actionBtn\"\r\n                                        title={config.actions.save}\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddBoard;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\board\\boardCards.jsx",["229","230","231","232","233","234","235","236"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport config from \"../../config/config.json\";\r\n\r\nimport SearchBox from \"../common/searchBox\";\r\n\r\nimport { dataFilter } from \"../../../methods/filter\";\r\nimport * as base from \"../../../methods/data\";\r\nimport * as Forms from \"../common/form/forms\";\r\nimport Spinner from \"../common/spinner\";\r\nimport Post from \"./post\";\r\n\r\nconst BoardCards = (props, toast) => {\r\n    const [data, setData] = useState(null);\r\n    const [category, setCategory] = useState(0);\r\n    const [text, setText] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [load, setLoad] = useState(true);\r\n\r\n    const { user, renderImage, title, history, match } = props;\r\n\r\n    useEffect(() => {\r\n        title(\r\n            `${config.headers.board} ${\r\n                category == 0 ? \"\" : \"| \" + category.toLowerCase()\r\n            } ${text == 0 ? \"\" : \" ~ \" + text.toLowerCase()}`\r\n        );\r\n    }, [category, text]);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            await base.getNotices(setData);\r\n        } catch (ex) {\r\n            setError(\"Cant load data, plese try again\");\r\n        }\r\n        setLoad(false);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            {load && <Spinner />}\r\n\r\n            {error && <Forms.Error error={error} visible={error} />}\r\n\r\n            <div>\r\n                <SearchBox\r\n                    filtr={false}\r\n                    handleSearch={setText}\r\n                    status={{ category: category, text: text }}\r\n                />\r\n\r\n                {dataFilter(data, category, text, match.params.id).map(\r\n                    (card) => (\r\n                        <Post card={card} {...props} />\r\n                    )\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BoardCards;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\board\\models\\board.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\shop\\productDetails.jsx",["237","238","239"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport ImageSlider from \"../common/imageSlider\";\r\nimport AcceptModal from \"../common/modal\";\r\n\r\nimport * as Forms from \"../common/form/forms\";\r\nimport * as time from \"../../../methods/time\";\r\nimport * as base from \"../../../methods/data\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Spinner from \"./../common/spinner\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport config from \"../../config/config.json\";\r\n\r\nfunction ProductDetails(props) {\r\n    const { user, renderImage, title, match, history } = props;\r\n    const [card, setCard] = useState(null);\r\n    const [modal, setModal] = useState(false);\r\n    const [load, setLoad] = useState(true);\r\n    const back = useHistory();\r\n\r\n    useEffect(async () => {\r\n        if (!(await base.getOneProduct(match.params.id, setCard, null)))\r\n            back.push(props.location.back, props.location.state);\r\n        setLoad(false);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (card) title(card.title);\r\n    }, [card]);\r\n\r\n    const handleDelete = async (card) => {\r\n        try {\r\n            await base.productDelete(card);\r\n            back.push(props.location.back, props.location.state);\r\n        } catch (ex) {\r\n            setModal(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            {load && <Spinner />}\r\n\r\n            {history.location.back && (\r\n                <NavLink\r\n                    to={{\r\n                        pathname: history.location.back,\r\n                        state: history.location.state,\r\n                    }}\r\n                >\r\n                    <Forms.Back />\r\n                </NavLink>\r\n            )}\r\n            {card && (\r\n                <div className=\"screen__container\">\r\n                    <div className=\"productDetails__image\">\r\n                        <ImageSlider\r\n                            images={card.images}\r\n                            handleClick={(i, index, arr) =>\r\n                                renderImage(arr, index)\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div className=\"productDetails__details\">\r\n                        {card.author && (\r\n                            <p>\r\n                                {card.author.login\r\n                                    ? card.author.login\r\n                                    : \"Undefined\"}\r\n                            </p>\r\n                        )}\r\n                        <p>{time.getDate(card.date)}</p>\r\n                    </div>\r\n                    {card.price !== 0 && (\r\n                        <div className=\"productDetails__image--price\">\r\n                            <span>{card.price} zł</span>\r\n                        </div>\r\n                    )}\r\n                    <div className=\"productDetails__text\">\r\n                        <p> {card.text}</p>\r\n                    </div>\r\n                    <div className=\"\">\r\n                        {card.author && card.author.phone && (\r\n                            <a href={`tel:${card.author.phone}`}>\r\n                                CLICK TO CALL\r\n                            </a>\r\n                        )}\r\n                    </div>\r\n\r\n                    {modal && (\r\n                        <AcceptModal\r\n                            close={setModal}\r\n                            accept={() => {\r\n                                handleDelete(card);\r\n                                setLoad(true);\r\n                            }}\r\n                            title={`Potwierdź operację usunięcia ${card.title}`}\r\n                        />\r\n                    )}\r\n                    {card.author &&\r\n                        user &&\r\n                        user._id === card.author._id &&\r\n                        !modal && (\r\n                            <div className=\"productDetails__buttons\">\r\n                                <NavLink\r\n                                    className=\"buttonLink\"\r\n                                    to={{\r\n                                        pathname: `edit/${card._id}`,\r\n                                        state: history.location.state,\r\n                                        back: history.location.back,\r\n                                    }}\r\n                                >\r\n                                    <button\r\n                                        className=\"actionBtn edit\"\r\n                                        // onClick={() =>\r\n                                        //     history.push(`edit/${card._id}`)\r\n                                        // }\r\n                                    >\r\n                                        {config.buttons.edit}\r\n                                    </button>\r\n                                </NavLink>\r\n                                <button\r\n                                    className=\"actionBtn delete\"\r\n                                    onClick={() => setModal(true)}\r\n                                >\r\n                                    {config.buttons.remove}\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductDetails;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\shop\\addProduct.jsx",["240","241","242"],"import React, { useState, useEffect } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { validationSchema } from \"./models/product\";\r\nimport config from \"../../config/config.json\";\r\n\r\nimport * as Forms from \"../common/form/forms\";\r\nimport * as base from \"../../../methods/data\";\r\nimport Spinner from \"./../common/spinner\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst AddProduct = (props) => {\r\n    const { title, history, match } = props;\r\n    const [image, setImage] = useState([]);\r\n    const [categories, setCategories] = useState(null);\r\n    const [edit, setEdit] = useState(null);\r\n    const [load, setLoad] = useState(true);\r\n\r\n    const back = useHistory();\r\n\r\n    useEffect(async () => {\r\n        title(config.headers.newSell);\r\n        const cat = await base.getCategories();\r\n        if (!cat) return history.push(\"/add\");\r\n        setCategories(cat);\r\n\r\n        if (!(await base.getOneProduct(match.params.id, setEdit, setImage)))\r\n            history.push(\"/add\");\r\n\r\n        setLoad(false);\r\n    }, []);\r\n\r\n    const handleSave = async (values) => {\r\n        try {\r\n            await base.productSave(values, edit, image);\r\n            if (props.location.back)\r\n                return back.push(props.location.back, props.location.state);\r\n            back.push(\"/bazar\");\r\n        } catch (ex) {\r\n            setLoad(false);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        const result = image.filter((img) => img !== id && img.name !== id);\r\n        setImage(result);\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            {load && <Spinner />}\r\n            {categories && (\r\n                <div className=\"screen__container\">\r\n                    <div className=\"addBoard\">\r\n                        <ToastContainer />\r\n\r\n                        <div className=\"addBoard__images\">\r\n                            <Forms.Image\r\n                                handleChange={setImage}\r\n                                preview={image}\r\n                                handleDelete={handleDelete}\r\n                            />\r\n                        </div>\r\n\r\n                        <Formik\r\n                            enableReinitialize={true}\r\n                            initialValues={\r\n                                edit\r\n                                    ? {\r\n                                          text: edit.text,\r\n                                          title: edit.title,\r\n                                          price: edit.price,\r\n                                          category: edit.category._id,\r\n                                      }\r\n                                    : {\r\n                                          text: \"\",\r\n                                          title: \"\",\r\n                                          price: \"\",\r\n                                          category: \"5fd8b9b913047e50104c37bd\",\r\n                                      }\r\n                            }\r\n                            onSubmit={(values) => {\r\n                                handleSave(values, image);\r\n                                setLoad(true);\r\n                            }}\r\n                            validationSchema={validationSchema}\r\n                        >\r\n                            {({}) => (\r\n                                <>\r\n                                    <Forms.Input\r\n                                        className=\"addBoard__title\"\r\n                                        name=\"title\"\r\n                                        placeholder={config.info.title}\r\n                                        defaultValue={edit ? edit.title : null}\r\n                                    />\r\n\r\n                                    <Forms.Text\r\n                                        className=\"addBoard__text\"\r\n                                        name=\"text\"\r\n                                        placeholder={config.info.description}\r\n                                        defaultValue={edit ? edit.text : null}\r\n                                    />\r\n\r\n                                    <div className=\"addBoard__details\">\r\n                                        <div>\r\n                                            <Forms.Input\r\n                                                label={config.info.price}\r\n                                                placeholder={config.info.price.toLowerCase()}\r\n                                                name=\"price\"\r\n                                                id=\"price\"\r\n                                                className=\"addBoard__details--price\"\r\n                                                defaultValue={\r\n                                                    edit ? edit.price : null\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div>\r\n                                            {categories && (\r\n                                                <Forms.Select\r\n                                                    label={config.info.category}\r\n                                                    arr={categories}\r\n                                                    id=\"category\"\r\n                                                    name=\"category\"\r\n                                                    className=\"addBoard__details--category\"\r\n                                                    defaultValue={\r\n                                                        edit\r\n                                                            ? edit.category._id\r\n                                                            : \"5fd8b9b913047e50104c37bd\"\r\n                                                    }\r\n                                                />\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"addBoard__buttons\">\r\n                                        <Forms.Submit\r\n                                            className=\"actionBtn\"\r\n                                            title={config.actions.save}\r\n                                        />\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                        </Formik>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddProduct;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\shop\\productCards.jsx",["243","244","245","246","247"],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\user\\login.jsx",["248","249","250"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport config from \"../../config/config.json\";\r\n\r\nimport * as auth from \"../../../services/auth\";\r\nimport * as base from \"../../../methods/data\";\r\n\r\nimport LoginForm from \"./forms/loginForm\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n    const { user, title, location } = props;\r\n\r\n    function redirect() {\r\n        window.location = location.state\r\n            ? location.state.from.pathname\r\n            : \"/login\";\r\n    }\r\n\r\n    useEffect(() => {\r\n        title(user ? config.headers.user : config.headers.login);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            <div className=\"login\">\r\n                {user && (\r\n                    <>\r\n                        <div className=\"login__info\">\r\n                            <div>{config.info.loggedAs}</div>\r\n                            <div>{user.login}</div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <NavLink\r\n                                to={{\r\n                                    pathname: \"/bazar/\" + user._id,\r\n                                    redirect: \"/login\",\r\n                                }}\r\n                            >\r\n                                <button className=\"actionBtn\">\r\n                                    {config.user.sell}\r\n                                </button>\r\n                            </NavLink>\r\n\r\n                            <NavLink\r\n                                to={{\r\n                                    pathname: \"/board/\" + user._id,\r\n                                    redirect: \"/login\",\r\n                                }}\r\n                            >\r\n                                <button className=\"actionBtn\">\r\n                                    {config.user.posts}\r\n                                </button>\r\n                            </NavLink>\r\n                        </div>\r\n\r\n                        <button\r\n                            className=\"actionBtn\"\r\n                            onClick={() => auth.logout()}\r\n                        >\r\n                            {config.actions.logout}\r\n                        </button>\r\n                    </>\r\n                )}\r\n\r\n                {!user && <LoginForm redirect={redirect} />}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\user\\register.jsx",["251","252"],"import React, { useEffect, useState } from \"react\";\r\nimport { pick } from \"lodash\";\r\nimport { Formik } from \"formik\";\r\nimport config from \"../../config/config.json\";\r\n\r\nimport { validationSchema } from \"./models/register\";\r\n\r\nimport AddInputBox from \"../common/form/addInputBox.jsx\";\r\nimport AddSubmitButton from \"../common/form/submitButton.jsx\";\r\n\r\nimport * as userBase from \"../../../services/users\";\r\nimport Spinner from \"../common/spinner\";\r\n\r\nconst Register = (props) => {\r\n    const { title } = props;\r\n    const [load, setLoad] = useState(false);\r\n\r\n    useEffect(() => {\r\n        title(config.headers.register);\r\n    }, []);\r\n\r\n    const handleRegister = async (user) => {\r\n        setLoad(true);\r\n\r\n        user.email = user.email.trim().toLowerCase();\r\n        user.login = user.login.trim();\r\n\r\n        user = pick(user, [\"login\", \"email\", \"password\"]);\r\n        const response = await userBase.add(user);\r\n\r\n        if (response.ok) {\r\n            localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\r\n            window.location = \"/login\";\r\n        } else setLoad(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            {load && <Spinner />}\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    email: \"\",\r\n                    login: \"\",\r\n                    password: \"\",\r\n                    confirmPassword: \"\",\r\n                }}\r\n                onSubmit={(values) => handleRegister(values)}\r\n                validationSchema={validationSchema}\r\n            >\r\n                {({}) => (\r\n                    <>\r\n                        <div className=\"login\">\r\n                            <div className=\"login__buttons\">\r\n                                <AddInputBox\r\n                                    name=\"email\"\r\n                                    label={config.info.email}\r\n                                    placeholder=\"Email...\"\r\n                                />\r\n\r\n                                <AddInputBox\r\n                                    label={config.info.login}\r\n                                    name=\"login\"\r\n                                    placeholder=\"Login...\"\r\n                                />\r\n                                <AddInputBox\r\n                                    label={config.info.password}\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                />\r\n                                <AddInputBox\r\n                                    label={config.info.password}\r\n                                    name=\"confirmPassword\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"Confirm password...\"\r\n                                />\r\n                            </div>\r\n\r\n                            <AddSubmitButton\r\n                                className=\"actionBtn\"\r\n                                title={config.actions.register}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\other\\home.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\other\\add.jsx",["253"],"import React, { useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Add = (props) => {\r\n    useEffect(() => {\r\n        props.title(\"dodaj\");\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"screen screen--center\">\r\n            <div className=\"add\">\r\n                <div className=\"add__buttons\">\r\n                    <NavLink to={\"/bazar/add\"}>\r\n                        <button className=\"actionBtn\">sprzedaj</button>\r\n                    </NavLink>\r\n                    <NavLink to={\"/board/add\"}>\r\n                        <button className=\"actionBtn\">ogłoszenie</button>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Add;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\save.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\data.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\delete.js",["254"],"import { set } from \"lodash\";\r\nimport { toast, Flip } from \"react-toastify\";\r\nimport * as noticeBase from \"../services/notices\";\r\nimport * as productBase from \"../services/products\";\r\nimport { cubby } from \"./cubby\";\r\n\r\nconst noticeDelete = async (item, setData = false) => {\r\n    return await dlt(item, noticeBase, cubby.notices, setData);\r\n};\r\n\r\nconst productDelete = async (item, setData = false) => {\r\n    return dlt(item, productBase, cubby.products, setData);\r\n};\r\n\r\nconst dlt = async (item, base, cubby, setData) => {\r\n    const result = await base.remove(item._id);\r\n    if (!result.ok)\r\n        throw toast.error(\r\n            \"Delete error - please chceck internet connection and try again! \" +\r\n                {\r\n                    position: \"top-right\",\r\n                    autoClose: 2500,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    transition: Flip,\r\n                }\r\n        );\r\n    if (cubby.data)\r\n        cubby.data = cubby.data.filter((old) => old._id !== item._id);\r\n    if (setData) setData(cubby.data);\r\n\r\n    toast.success(\"deleted\");\r\n\r\n    return cubby.data;\r\n};\r\n\r\nexport { noticeDelete, productDelete };\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\load.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\forms.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\shop\\models\\product.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\user\\models\\register.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\user\\models\\login.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\images.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\client.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\auth.js",["255"],"import { apiClient as client } from \"./client\";\r\nimport jwtDecode, { InvalidTokenError } from \"jwt-decode\";\r\n\r\nconst endpoint = \"/auth\";\r\n\r\nconst login = (body) => client.post(endpoint, body);\r\n\r\nconst getUser = (token = localStorage.getItem(\"token\")) => {\r\n    try {\r\n        const user = jwtDecode(token);\r\n        return user;\r\n    } catch (ex) {\r\n        return null;\r\n    }\r\n};\r\n\r\nconst setToken = (token = localStorage.getItem(\"token\")) => {\r\n    client.setHeader(\"x-auth-token\", token);\r\n};\r\n\r\nconst logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    window.location = \"/login\";\r\n};\r\n\r\nexport { login, getUser, setToken, logout };\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\users.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\products.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\notices.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\categories.js",[],["256","257"],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\buttonBack.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\spinner.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\cubby.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\time.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\spinnerWait.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\user\\forms\\loginForm.jsx",["258"],"import { validationSchema } from \"../models/login\";\r\nimport { RiUserAddLine } from \"react-icons/ri\";\r\nimport React, { useState } from \"react\";\r\nimport { pick } from \"lodash\";\r\nimport Spinner from \"../../common/spinner\";\r\nimport * as auth from \"../../../../services/auth\";\r\nimport config from \"../../../config/config.json\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport AddInputBox from \"../../common/form/addInputBox.jsx\";\r\nimport AddSubmitButton from \"../../common/form/submitButton.jsx\";\r\nimport Buttons from \"../../common/buttons.jsx\";\r\n\r\nconst LoginForm = ({ redirect }) => {\r\n    const [load, setLoad] = useState(false);\r\n\r\n    const handleLogin = async (user) => {\r\n        setLoad(true);\r\n        user.email = user.email.trim().toLowerCase();\r\n        user = pick(user, [\"email\", \"password\"]);\r\n        const response = await auth.login(user);\r\n\r\n        if (response.ok) {\r\n            localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\r\n            console.log(\"ok\");\r\n            redirect();\r\n        } else setLoad(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {load && <Spinner />}\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    email: \"\",\r\n                    password: \"\",\r\n                }}\r\n                onSubmit={(values) => handleLogin(values)}\r\n                validationSchema={validationSchema}\r\n            >\r\n                {({}) => (\r\n                    <>\r\n                        <div className=\"login__buttons\">\r\n                            <NavLink to=\"/register\">\r\n                                <RiUserAddLine className=\"specialBtn\" />\r\n                            </NavLink>\r\n\r\n                            <Buttons\r\n                                buttons={[\r\n                                    {\r\n                                        name: <RiUserAddLine />,\r\n                                        ref: \"/register\",\r\n                                    },\r\n                                ]}\r\n                            />\r\n\r\n                            <AddInputBox\r\n                                // className=\"addBoard__title\"\r\n                                name=\"email\"\r\n                                label={config.info.email}\r\n                                placeholder=\"Email\"\r\n                            />\r\n\r\n                            <AddInputBox\r\n                                // className=\"addBoard__title\"\r\n                                label={config.info.password}\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                            />\r\n                        </div>\r\n\r\n                        <AddSubmitButton\r\n                            className=\"actionBtn\"\r\n                            title={config.actions.login}\r\n                        />\r\n                    </>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\shop\\card.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\board\\post.jsx",["259","260","261"],"import ImageSlider from \"../common/imageSlider\";\r\nimport SearchBox from \"../common/searchBox\";\r\nimport { dataFilter } from \"../../../methods/filter\";\r\nimport * as time from \"../../../methods/time\";\r\nimport { useState } from \"react\";\r\nimport AcceptModal from \"../common/modal\";\r\nimport * as base from \"../../../methods/data\";\r\nimport config from \"../../config/config.json\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Post = ({ card, ...props }) => {\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const { user, renderImage, history, location } = props;\r\n\r\n    const handleDelete = async (card) => {\r\n        try {\r\n            document.getElementById(card._id).classList.toggle(\"remove\");\r\n            await base.noticeDelete(card);\r\n            document.getElementById(card._id).remove();\r\n            setModal(false);\r\n        } catch (er) {\r\n            document.getElementById(card._id).classList.toggle(\"remove\");\r\n        }\r\n    };\r\n\r\n    function expand(id) {\r\n        document.getElementById(id).classList.toggle(\"show\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                id={card._id}\r\n                className=\"board\"\r\n                onClick={() => expand(card._id)}\r\n            >\r\n                <div className=\"board__header\">\r\n                    <div className=\"board__header--title\">\r\n                        <p>{card.title}</p>\r\n                    </div>\r\n                    <div className=\"board__header--details\">\r\n                        <p>{card.author ? card.author.login : \"Undefined\"}</p>\r\n                        <p>{time.getDate(card.date)}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"board__content\">\r\n                    <div\r\n                        className=\"board__content--images\"\r\n                        onClick={(e) => e.stopPropagation()}\r\n                    >\r\n                        {card.text && <p>{card.text}</p>}\r\n                        {card.images && (\r\n                            <ImageSlider\r\n                                images={card.images}\r\n                                handleClick={(i, index, arr) =>\r\n                                    renderImage(arr, index)\r\n                                }\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    {card.author && user && user._id === card.author._id && (\r\n                        <div\r\n                            className=\"board__delete\"\r\n                            onClick={(e) => e.stopPropagation()}\r\n                        >\r\n                            <NavLink\r\n                                className=\"buttonLink\"\r\n                                to={{\r\n                                    pathname: `/board/edit/${card._id}`,\r\n                                    state: location.state,\r\n                                    back: location.pathname,\r\n                                }}\r\n                            >\r\n                                <button className=\"actionBtn edit\">\r\n                                    {config.buttons.edit}\r\n                                </button>\r\n                            </NavLink>\r\n                            <button\r\n                                className=\"actionBtn delete\"\r\n                                onClick={() => setModal(card)}\r\n                            >\r\n                                {config.buttons.delete}\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {modal && (\r\n                <div onClick={(e) => e.stopPropagation()}>\r\n                    <AcceptModal\r\n                        close={setModal}\r\n                        accept={() => handleDelete(modal)}\r\n                        title={`Potwierdź operację usunięcia ${modal.title}`}\r\n                    />\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n",{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"267","line":9,"column":18,"nodeType":"268","messageId":"269","endLine":9,"endColumn":20},{"ruleId":"266","severity":1,"message":"267","line":15,"column":14,"nodeType":"268","messageId":"269","endLine":15,"endColumn":16},{"ruleId":"266","severity":1,"message":"270","line":26,"column":35,"nodeType":"268","messageId":"269","endLine":26,"endColumn":37},{"ruleId":"266","severity":1,"message":"270","line":39,"column":31,"nodeType":"268","messageId":"269","endLine":39,"endColumn":33},{"ruleId":"271","severity":1,"message":"272","line":31,"column":25,"nodeType":"273","endLine":39,"endColumn":26},{"ruleId":"274","severity":1,"message":"275","line":17,"column":20,"nodeType":"276","messageId":"277","endLine":17,"endColumn":27},{"ruleId":"278","severity":1,"message":"279","line":20,"column":15,"nodeType":"280","endLine":28,"endColumn":6},{"ruleId":"278","severity":1,"message":"281","line":28,"column":8,"nodeType":"282","endLine":28,"endColumn":10,"suggestions":"283"},{"ruleId":"284","severity":1,"message":"285","line":78,"column":27,"nodeType":"286","messageId":"269","endLine":78,"endColumn":29},{"ruleId":"274","severity":1,"message":"287","line":15,"column":22,"nodeType":"276","messageId":"277","endLine":15,"endColumn":33},{"ruleId":"274","severity":1,"message":"288","line":20,"column":13,"nodeType":"276","messageId":"277","endLine":20,"endColumn":17},{"ruleId":"274","severity":1,"message":"289","line":20,"column":19,"nodeType":"276","messageId":"277","endLine":20,"endColumn":30},{"ruleId":"274","severity":1,"message":"275","line":20,"column":39,"nodeType":"276","messageId":"277","endLine":20,"endColumn":46},{"ruleId":"266","severity":1,"message":"270","line":25,"column":26,"nodeType":"268","messageId":"269","endLine":25,"endColumn":28},{"ruleId":"266","severity":1,"message":"270","line":26,"column":22,"nodeType":"268","messageId":"269","endLine":26,"endColumn":24},{"ruleId":"278","severity":1,"message":"290","line":28,"column":8,"nodeType":"282","endLine":28,"endColumn":24,"suggestions":"291"},{"ruleId":"278","severity":1,"message":"279","line":30,"column":15,"nodeType":"280","endLine":37,"endColumn":6},{"ruleId":"278","severity":1,"message":"279","line":21,"column":15,"nodeType":"280","endLine":25,"endColumn":6},{"ruleId":"278","severity":1,"message":"292","line":25,"column":8,"nodeType":"282","endLine":25,"endColumn":10,"suggestions":"293"},{"ruleId":"278","severity":1,"message":"290","line":29,"column":8,"nodeType":"282","endLine":29,"endColumn":14,"suggestions":"294"},{"ruleId":"278","severity":1,"message":"279","line":23,"column":15,"nodeType":"280","endLine":33,"endColumn":6},{"ruleId":"278","severity":1,"message":"295","line":33,"column":8,"nodeType":"282","endLine":33,"endColumn":10,"suggestions":"296"},{"ruleId":"284","severity":1,"message":"285","line":90,"column":31,"nodeType":"286","messageId":"269","endLine":90,"endColumn":33},{"ruleId":"274","severity":1,"message":"288","line":18,"column":46,"nodeType":"276","messageId":"277","endLine":18,"endColumn":50},{"ruleId":"266","severity":1,"message":"270","line":33,"column":54,"nodeType":"268","messageId":"269","endLine":33,"endColumn":56},{"ruleId":"266","severity":1,"message":"270","line":39,"column":33,"nodeType":"268","messageId":"269","endLine":39,"endColumn":35},{"ruleId":"266","severity":1,"message":"270","line":40,"column":22,"nodeType":"268","messageId":"269","endLine":40,"endColumn":24},{"ruleId":"278","severity":1,"message":"290","line":43,"column":8,"nodeType":"282","endLine":43,"endColumn":36,"suggestions":"297"},{"ruleId":"274","severity":1,"message":"298","line":1,"column":28,"nodeType":"276","messageId":"277","endLine":1,"endColumn":36},{"ruleId":"274","severity":1,"message":"299","line":6,"column":13,"nodeType":"276","messageId":"277","endLine":6,"endColumn":17},{"ruleId":"278","severity":1,"message":"300","line":22,"column":8,"nodeType":"282","endLine":22,"endColumn":10,"suggestions":"301"},{"ruleId":"278","severity":1,"message":"290","line":20,"column":8,"nodeType":"282","endLine":20,"endColumn":10,"suggestions":"302"},{"ruleId":"284","severity":1,"message":"285","line":51,"column":19,"nodeType":"286","messageId":"269","endLine":51,"endColumn":21},{"ruleId":"278","severity":1,"message":"303","line":7,"column":8,"nodeType":"282","endLine":7,"endColumn":10,"suggestions":"304"},{"ruleId":"274","severity":1,"message":"305","line":1,"column":10,"nodeType":"276","messageId":"277","endLine":1,"endColumn":13},{"ruleId":"274","severity":1,"message":"306","line":2,"column":21,"nodeType":"276","messageId":"277","endLine":2,"endColumn":38},{"ruleId":"262","replacedBy":"307"},{"ruleId":"264","replacedBy":"308"},{"ruleId":"284","severity":1,"message":"285","line":44,"column":19,"nodeType":"286","messageId":"269","endLine":44,"endColumn":21},{"ruleId":"274","severity":1,"message":"309","line":2,"column":8,"nodeType":"276","messageId":"277","endLine":2,"endColumn":17},{"ruleId":"274","severity":1,"message":"310","line":3,"column":10,"nodeType":"276","messageId":"277","endLine":3,"endColumn":20},{"ruleId":"274","severity":1,"message":"275","line":14,"column":32,"nodeType":"276","messageId":"277","endLine":14,"endColumn":39},"no-native-reassign",["311"],"no-negated-in-lhs",["312"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'back', 'match.params.id', 'props.location.back', 'props.location.state', and 'title'. Either include them or remove the dependency array.","ArrayExpression",["313"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'setCategory' is assigned a value but never used.","'user' is assigned a value but never used.","'renderImage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'title'. Either include it or remove the dependency array.",["314"],"React Hook useEffect has missing dependencies: 'back', 'match.params.id', 'props.location.back', and 'props.location.state'. Either include them or remove the dependency array.",["315"],["316"],"React Hook useEffect has missing dependencies: 'history', 'match.params.id', and 'title'. Either include them or remove the dependency array.",["317"],["318"],"'useState' is defined but never used.","'base' is defined but never used.","React Hook useEffect has missing dependencies: 'title' and 'user'. Either include them or remove the dependency array.",["319"],["320"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["321"],"'set' is defined but never used.","'InvalidTokenError' is defined but never used.",["311"],["312"],"'SearchBox' is defined but never used.","'dataFilter' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},"Update the dependencies array to be: [back, match.params.id, props.location.back, props.location.state, title]",{"range":"340","text":"341"},"Update the dependencies array to be: [category, text, title]",{"range":"342","text":"343"},"Update the dependencies array to be: [back, match.params.id, props.location.back, props.location.state]",{"range":"344","text":"345"},"Update the dependencies array to be: [card, title]",{"range":"346","text":"347"},"Update the dependencies array to be: [history, match.params.id, title]",{"range":"348","text":"349"},"Update the dependencies array to be: [categories, category, text, title]",{"range":"350","text":"351"},"Update the dependencies array to be: [title, user]",{"range":"352","text":"353"},"Update the dependencies array to be: [title]",{"range":"354","text":"355"},"Update the dependencies array to be: [props]",{"range":"356","text":"357"},[941,943],"[back, match.params.id, props.location.back, props.location.state, title]",[944,960],"[category, text, title]",[955,957],"[back, match.params.id, props.location.back, props.location.state]",[1031,1037],"[card, title]",[1133,1135],"[history, match.params.id, title]",[1449,1477],"[categories, category, text, title]",[615,617],"[title, user]",[629,631],"[title]",[177,179],"[props]"]