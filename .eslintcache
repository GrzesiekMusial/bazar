[{"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\index.js":"1","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\App.js":"2","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\reportWebVitals.js":"3","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\buttons.jsx":"4","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\header.jsx":"5","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\submitButton.jsx":"6","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\addInputBox.jsx":"7","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\filter.js":"8","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\imageSlider.jsx":"9","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\imageLoader.jsx":"10","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\searchBox.jsx":"11","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\addTextBox.jsx":"12","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\addSelectBox.jsx":"13","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\errorMessage.jsx":"14","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\protectedRoute.jsx":"15","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\modal.jsx":"16","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\imageInput.jsx":"17","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\board\\addBoard.jsx":"18","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\board\\boardCards.jsx":"19","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\board\\models\\board.js":"20","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\shop\\productDetails.jsx":"21","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\shop\\addProduct.jsx":"22","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\shop\\productCards.jsx":"23","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\user\\login.jsx":"24","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\user\\register.jsx":"25","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\other\\home.jsx":"26","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\other\\add.jsx":"27","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\save.js":"28","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\data.js":"29","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\delete.js":"30","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\load.js":"31","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\forms.jsx":"32","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\shop\\models\\product.js":"33","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\user\\models\\register.js":"34","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\user\\models\\login.js":"35","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\images.js":"36","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\client.js":"37","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\auth.js":"38","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\users.js":"39","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\products.js":"40","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\notices.js":"41","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\categories.js":"42","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\buttonBack.jsx":"43"},{"size":614,"mtime":1609958134150,"results":"44","hashOfConfig":"45"},{"size":7470,"mtime":1609958210007,"results":"46","hashOfConfig":"45"},{"size":375,"mtime":1609170866605,"results":"47","hashOfConfig":"45"},{"size":403,"mtime":1609937473219,"results":"48","hashOfConfig":"45"},{"size":243,"mtime":1609836884531,"results":"49","hashOfConfig":"45"},{"size":331,"mtime":1609937469366,"results":"50","hashOfConfig":"45"},{"size":885,"mtime":1609937439304,"results":"51","hashOfConfig":"45"},{"size":411,"mtime":1609944265685,"results":"52","hashOfConfig":"45"},{"size":1272,"mtime":1609937500950,"results":"53","hashOfConfig":"45"},{"size":656,"mtime":1609954604243,"results":"54","hashOfConfig":"45"},{"size":2549,"mtime":1609937521892,"results":"55","hashOfConfig":"45"},{"size":889,"mtime":1609937455142,"results":"56","hashOfConfig":"45"},{"size":1141,"mtime":1609937448844,"results":"57","hashOfConfig":"45"},{"size":206,"mtime":1609944407243,"results":"58","hashOfConfig":"45"},{"size":945,"mtime":1609954568934,"results":"59","hashOfConfig":"45"},{"size":533,"mtime":1609549373107,"results":"60","hashOfConfig":"45"},{"size":1915,"mtime":1609954559979,"results":"61","hashOfConfig":"45"},{"size":3212,"mtime":1609939900832,"results":"62","hashOfConfig":"45"},{"size":4810,"mtime":1609947349874,"results":"63","hashOfConfig":"45"},{"size":203,"mtime":1609837678454,"results":"64","hashOfConfig":"45"},{"size":3829,"mtime":1609957937651,"results":"65","hashOfConfig":"45"},{"size":6024,"mtime":1609954903984,"results":"66","hashOfConfig":"45"},{"size":3558,"mtime":1609955705424,"results":"67","hashOfConfig":"45"},{"size":3896,"mtime":1609954578686,"results":"68","hashOfConfig":"45"},{"size":2846,"mtime":1609954587514,"results":"69","hashOfConfig":"45"},{"size":69,"mtime":1609937653822,"results":"70","hashOfConfig":"45"},{"size":626,"mtime":1609839657279,"results":"71","hashOfConfig":"45"},{"size":1778,"mtime":1609954629341,"results":"72","hashOfConfig":"45"},{"size":414,"mtime":1609963051282,"results":"73","hashOfConfig":"45"},{"size":958,"mtime":1609954623357,"results":"74","hashOfConfig":"45"},{"size":1866,"mtime":1609966708641,"results":"75","hashOfConfig":"45"},{"size":315,"mtime":1609956839822,"results":"76","hashOfConfig":"45"},{"size":635,"mtime":1609937249026,"results":"77","hashOfConfig":"45"},{"size":622,"mtime":1609940327656,"results":"78","hashOfConfig":"45"},{"size":242,"mtime":1609940423641,"results":"79","hashOfConfig":"45"},{"size":450,"mtime":1609958064283,"results":"80","hashOfConfig":"45"},{"size":209,"mtime":1609528919360,"results":"81","hashOfConfig":"45"},{"size":656,"mtime":1609528545799,"results":"82","hashOfConfig":"45"},{"size":374,"mtime":1609527226710,"results":"83","hashOfConfig":"45"},{"size":433,"mtime":1609849115466,"results":"84","hashOfConfig":"45"},{"size":420,"mtime":1609849111424,"results":"85","hashOfConfig":"45"},{"size":328,"mtime":1609350230674,"results":"86","hashOfConfig":"45"},{"size":273,"mtime":1609957279400,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sxluq7",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"94"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\index.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\App.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\reportWebVitals.js",[],["185","186"],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\buttons.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\header.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\submitButton.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\addInputBox.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\filter.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\imageSlider.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\imageLoader.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\searchBox.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\addTextBox.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\addSelectBox.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\errorMessage.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\protectedRoute.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\modal.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\imageInput.jsx",["187"],"import React from \"react\";\r\n\r\nimport { BiImageAdd } from \"react-icons/bi\";\r\n\r\nimport * as imagesBase from \"../../../../services/images\";\r\n\r\nconst ImageInput = ({ handleChange, preview }) => {\r\n    const imageArr = (arr) => {\r\n        const result = [];\r\n\r\n        for (let key in arr) {\r\n            if (key > 5) {\r\n                alert(\"Max 6 images accepted.\");\r\n                break;\r\n            }\r\n            if (arr[key][\"lastModified\"]) {\r\n                result.push(arr[key]);\r\n            }\r\n        }\r\n\r\n        handleChange(result);\r\n    };\r\n\r\n    return (\r\n        <div className=\"imageInput\">\r\n            <div className=\"imageInput__images\">\r\n                {preview &&\r\n                    preview.map((prev) => (\r\n                        <img\r\n                            src={\r\n                                typeof prev === \"string\"\r\n                                    ? imagesBase.get(prev)\r\n                                    : URL.createObjectURL(prev)\r\n                            }\r\n                        ></img>\r\n                    ))}\r\n            </div>\r\n\r\n            <div className=\"imageInput__label\">\r\n                <label\r\n                    htmlFor=\"asd\"\r\n                    onClick={() =>\r\n                        document\r\n                            .getElementById(\"asd\")\r\n                            .setAttribute(\"checked\", true)\r\n                    }\r\n                >\r\n                    <BiImageAdd />\r\n                </label>\r\n            </div>\r\n\r\n            <input\r\n                className=\"imageInput--input\"\r\n                checked={false}\r\n                id=\"asd\"\r\n                type=\"file\"\r\n                name=\"images\"\r\n                multiple\r\n                onChange={(e) => imageArr(e.target.files)}\r\n                accept=\"image/png, image/jpeg, image/jpg\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageInput;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\board\\addBoard.jsx",["188","189","190"],"import React, { useEffect, useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { validationSchema } from \"./models/board\";\r\n\r\nimport * as Forms from \"../common/form/forms\";\r\nimport * as base from \"../../../methods/data\";\r\n\r\nconst AddBoard = (props) => {\r\n    const [image, setImage] = useState([]);\r\n    const [edit, setEdit] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            props.title(\"ogłoszenie\");\r\n            await base.getOneNotice(props.match.params.id, setEdit, setImage);\r\n        } catch (ex) {\r\n            props.history.push(\"/add\");\r\n        }\r\n    }, []);\r\n\r\n    const handleSave = async (values) => {\r\n        const result = await base.noticeSave(values, edit, image);\r\n        if (result) props.history.push(\"/board\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            <ToastContainer />\r\n            <div className=\"screen__container\">\r\n                <div className=\"addBoard\">\r\n                    <div className=\"addBoard__images\">\r\n                        <Forms.Image handleChange={setImage} preview={image} />\r\n                    </div>\r\n\r\n                    <Formik\r\n                        enableReinitialize={true}\r\n                        initialValues={\r\n                            edit\r\n                                ? {\r\n                                      text: edit.text,\r\n                                      title: edit.title,\r\n                                  }\r\n                                : {\r\n                                      text: \"\",\r\n                                      title: \"\",\r\n                                  }\r\n                        }\r\n                        onSubmit={(values) => handleSave(values)}\r\n                        validationSchema={validationSchema}\r\n                    >\r\n                        {({}) => (\r\n                            <>\r\n                                <Forms.Input\r\n                                    className=\"addBoard__title\"\r\n                                    name=\"title\"\r\n                                    placeholder=\"Nazwa\"\r\n                                    defaultValue={edit ? edit.title : null}\r\n                                />\r\n                                <Forms.Text\r\n                                    className=\"addBoard__text\"\r\n                                    name=\"text\"\r\n                                    placeholder=\"Opis...\"\r\n                                    defaultValue={edit ? edit.text : null}\r\n                                />\r\n                                <div className=\"addBoard__buttons\">\r\n                                    <Forms.Submit\r\n                                        className=\"actionBtn\"\r\n                                        title={edit ? \"ZAPISZ\" : \"OPUBLIKUJ\"}\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddBoard;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\board\\boardCards.jsx",["191","192","193"],"import React, { useEffect, useState } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport ImageSlider from \"../common/imageSlider\";\r\nimport SearchBox from \"../common/searchBox\";\r\nimport AcceptModal from \"../common/modal\";\r\n\r\nimport { dataFilter } from \"../../../methods/filter\";\r\nimport * as base from \"../../../methods/data\";\r\nimport * as Forms from \"../common/form/forms\";\r\n\r\nconst BoardCards = (props) => {\r\n    const [data, setData] = useState(null);\r\n    const [category, setCategory] = useState(\"0\");\r\n    const [text, setText] = useState(\"\");\r\n    const [modal, setModal] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const { user, renderImage, title, history } = props;\r\n\r\n    useEffect(() => {\r\n        title(\r\n            `tablica ${category === \"0\" ? \"\" : \"| \" + category.toLowerCase()} ${\r\n                text === \"\" ? \"\" : \" ~ \" + text.toLowerCase()\r\n            }`\r\n        );\r\n    }, [category, text]);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            await base.getNotices(setData);\r\n        } catch (ex) {\r\n            setError(\"Cant load data, plese try again\");\r\n        }\r\n    }, []);\r\n\r\n    function expand(e) {\r\n        while (!e.target.classList.contains(\"board\"))\r\n            e.target = e.target.parentElement;\r\n\r\n        const arr = e.target.children;\r\n\r\n        for (let i = 0; i < arr.length; i++) {\r\n            arr[i].classList.toggle(\"show\");\r\n            if (i === arr.length - 1) arr[i].classList.toggle(\"end\");\r\n        }\r\n    }\r\n\r\n    const handleDelete = async (card) => {\r\n        const result = await base.noticeDelete(card);\r\n        if (result) {\r\n            setData(data.filter((notice) => notice._id !== card._id));\r\n            setModal(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            <ToastContainer />\r\n\r\n            {error && <Forms.Error error={error} visible={error} />}\r\n\r\n            <div>\r\n                <SearchBox\r\n                    filtr={false}\r\n                    handleSearch={setText}\r\n                    status={{ category: category, text: text }}\r\n                />\r\n\r\n                {dataFilter(data, category, text).map((card) => (\r\n                    <div className=\"board\">\r\n                        <div\r\n                            className=\"board__title\"\r\n                            onClick={(e) => expand(e)}\r\n                        >\r\n                            <span>{card.title}</span>\r\n                        </div>\r\n\r\n                        <div className=\"board__content\">\r\n                            <div className=\"board__content--images\">\r\n                                {card.images && (\r\n                                    <ImageSlider\r\n                                        images={card.images}\r\n                                        handleClick={(i, index, arr) =>\r\n                                            renderImage(arr, index)\r\n                                        }\r\n                                    />\r\n                                )}\r\n                            </div>\r\n\r\n                            {card.text && <p>{card.text}</p>}\r\n\r\n                            {user && user._id === card.author._id && !modal && (\r\n                                <div className=\"board__delete\">\r\n                                    <button\r\n                                        className=\"actionBtn edit\"\r\n                                        onClick={() =>\r\n                                            history.push(\r\n                                                `/board/edit/${card._id}`\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        EDYTUJ\r\n                                    </button>\r\n                                    <button\r\n                                        className=\"actionBtn delete\"\r\n                                        onClick={() => setModal(true)}\r\n                                    >\r\n                                        USUŃ\r\n                                    </button>\r\n                                </div>\r\n                            )}\r\n\r\n                            {modal && (\r\n                                <AcceptModal\r\n                                    close={setModal}\r\n                                    accept={() => handleDelete(card)}\r\n                                    title={`Potwierdź operację usunięcia ${card.title}`}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BoardCards;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\board\\models\\board.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\shop\\productDetails.jsx",["194","195","196"],"import React, { useEffect, useState } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport ImageSlider from \"../common/imageSlider\";\r\nimport AcceptModal from \"../common/modal\";\r\n\r\nimport * as Forms from \"../common/form/forms\";\r\nimport * as base from \"../../../methods/data\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction ProductDetails(props) {\r\n    const { user, renderImage, title, history, match } = props;\r\n    const [card, setCard] = useState(null);\r\n    const [modal, setModal] = useState(false);\r\n\r\n    useEffect(async () => {\r\n        if (!(await base.getOneProduct(match.params.id, setCard, null)))\r\n            history.push(\"/bazar\");\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (card) title(card.title);\r\n    }, [card]);\r\n\r\n    const handleDelete = async (card) => {\r\n        base.productDelete();\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            <NavLink\r\n                to={{\r\n                    pathname: \"/bazar\",\r\n                    state: history.location.state,\r\n                }}\r\n            >\r\n                <Forms.Back />\r\n            </NavLink>\r\n            <ToastContainer />\r\n            {card && (\r\n                <div className=\"screen__container\">\r\n                    <div className=\"productDetails__image\">\r\n                        <ImageSlider\r\n                            images={card.images}\r\n                            handleClick={(i, index, arr) =>\r\n                                renderImage(arr, index)\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div className=\"productDetails__details\">\r\n                        <p>\r\n                            {card.author.name\r\n                                ? card.author.name\r\n                                : card.author.login}\r\n                        </p>\r\n                        <p>{card.date}</p>\r\n                    </div>\r\n                    {card.price !== 0 && (\r\n                        <div className=\"productDetails__image--price\">\r\n                            <span>{card.price} zł</span>\r\n                        </div>\r\n                    )}\r\n                    <div className=\"productDetails__text\">\r\n                        <p> {card.text}</p>\r\n                    </div>\r\n                    <div className=\"\">\r\n                        {card.author.phone && (\r\n                            <a href={`tel:${card.author.phone}`}>\r\n                                CLICK TO CALL\r\n                            </a>\r\n                        )}\r\n                    </div>\r\n\r\n                    {modal && (\r\n                        <AcceptModal\r\n                            close={setModal}\r\n                            accept={() => handleDelete(card)}\r\n                            title={`Potwierdź operację usunięcia ${card.title}`}\r\n                        />\r\n                    )}\r\n                    {user && user._id === card.author._id && !modal && (\r\n                        <div className=\"productDetails__buttons\">\r\n                            <button\r\n                                className=\"actionBtn edit\"\r\n                                onClick={() => history.push(`edit/${card._id}`)}\r\n                            >\r\n                                EDYTUJ\r\n                            </button>\r\n                            <button\r\n                                className=\"actionBtn delete\"\r\n                                onClick={() => setModal(true)}\r\n                            >\r\n                                USUŃ\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductDetails;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\shop\\addProduct.jsx",["197","198","199"],"import React, { useState, useEffect } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { validationSchema } from \"./models/product\";\r\n\r\nimport * as Forms from \"../common/form/forms\";\r\nimport * as base from \"../../../methods/data\";\r\n\r\nconst AddProduct = (props) => {\r\n    const { title, history, match } = props;\r\n    const [image, setImage] = useState([]);\r\n    const [categories, setCategories] = useState(null);\r\n    const [edit, setEdit] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        title(\"sprzedaj\");\r\n        const cat = await base.getCategories();\r\n        if (!cat) return history.push(\"/add\");\r\n        setCategories(cat);\r\n\r\n        const prod = await base.getOneProduct(\r\n            match.params.id,\r\n            setEdit,\r\n            setImage\r\n        );\r\n        if (!prod) history.push(\"/add\");\r\n    }, []);\r\n\r\n    const handleSave = async (values) => {\r\n        const result = await base.productSave(values, edit, image);\r\n        if (result) return history.push(`/bazar/product/${result._id}`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            {categories && (\r\n                <div className=\"screen__container\">\r\n                    <div className=\"addBoard\">\r\n                        <ToastContainer />\r\n\r\n                        <div className=\"addBoard__images\">\r\n                            <Forms.Image\r\n                                handleChange={setImage}\r\n                                preview={image}\r\n                            />\r\n                        </div>\r\n\r\n                        <Formik\r\n                            enableReinitialize={true}\r\n                            initialValues={\r\n                                edit\r\n                                    ? {\r\n                                          text: edit.text,\r\n                                          title: edit.title,\r\n                                          price: edit.price,\r\n                                          category: edit.category._id,\r\n                                      }\r\n                                    : {\r\n                                          text: \"\",\r\n                                          title: \"\",\r\n                                          price: \"\",\r\n                                          category: categories[0]._id,\r\n                                      }\r\n                            }\r\n                            onSubmit={(values) => handleSave(values, image)}\r\n                            validationSchema={validationSchema}\r\n                        >\r\n                            {({}) => (\r\n                                <>\r\n                                    <Forms.Input\r\n                                        className=\"addBoard__title\"\r\n                                        name=\"title\"\r\n                                        placeholder=\"Nazwa\"\r\n                                        defaultValue={edit ? edit.title : null}\r\n                                    />\r\n\r\n                                    <Forms.Text\r\n                                        className=\"addBoard__text\"\r\n                                        name=\"text\"\r\n                                        placeholder=\"Opis...\"\r\n                                        defaultValue={edit ? edit.text : null}\r\n                                    />\r\n\r\n                                    <div className=\"addBoard__details\">\r\n                                        <div>\r\n                                            <Forms.Input\r\n                                                label=\"CENA\"\r\n                                                placeholder=\"cena\"\r\n                                                name=\"price\"\r\n                                                id=\"price\"\r\n                                                className=\"addBoard__details--price\"\r\n                                                defaultValue={\r\n                                                    edit ? edit.price : null\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div>\r\n                                            {categories && (\r\n                                                <Forms.Select\r\n                                                    label=\"KATEGORIA\"\r\n                                                    arr={categories}\r\n                                                    id=\"category\"\r\n                                                    name=\"category\"\r\n                                                    className=\"addBoard__details--category\"\r\n                                                    defaultValue={\r\n                                                        edit\r\n                                                            ? edit.category._id\r\n                                                            : null\r\n                                                    }\r\n                                                />\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"addBoard__buttons\">\r\n                                        <Forms.Submit\r\n                                            className=\"actionBtn\"\r\n                                            title={\r\n                                                edit ? \"ZAPISZ\" : \"OPUBLIKUJ\"\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                        </Formik>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddProduct;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\shop\\productCards.jsx",["200","201"],"import React, { useState, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport Img from \"../common/imageLoader\";\r\n\r\nimport * as base from \"../../../methods/data\";\r\nimport * as Forms from \"../common/form/forms\";\r\n\r\nimport { dataFilter } from \"../../../methods/filter\";\r\n\r\nimport \"react-dropdown/style.css\";\r\nimport SearchBox from \"../common/searchBox\";\r\n\r\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\r\nfunction ProductCards(props) {\r\n    const { title, history } = props;\r\n    const [data, setData] = useState(null);\r\n    const [categories, setCategories] = useState(null);\r\n    const [category, setCategory] = useState(\r\n        history.location.state ? history.location.state.category : \"0\"\r\n    );\r\n    const [text, setText] = useState(\r\n        history.location.state ? history.location.state.text : \"\"\r\n    );\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const name =\r\n            categories && category\r\n                ? categories.filter((cat) => cat._id == category)[0].name\r\n                : null;\r\n\r\n        title(\r\n            `ogłoszenia ${category === \"0\" ? \"\" : \"| \" + name} ${\r\n                text === \"\" ? \"\" : \" ~ \" + text.toLowerCase()\r\n            }`\r\n        );\r\n    }, [categories, category, text]);\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n\r\n    const loadData = async () => {\r\n        try {\r\n            await base.getProducts(setData);\r\n            await base.getCategories(true, setCategories);\r\n        } catch (ex) {\r\n            setError(\"Cant load data, plese try again\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            {error && <Forms.Error error={error} visible={error} />}\r\n\r\n            {categories && (\r\n                <SearchBox\r\n                    status={{ category: category, text: text }}\r\n                    categories={categories}\r\n                    handleCategorySearch={setCategory}\r\n                    handleSearch={setText}\r\n                />\r\n            )}\r\n\r\n            <div className=\"cards\">\r\n                {dataFilter(data, category, text).map((card) => (\r\n                    <NavLink\r\n                        to={{\r\n                            pathname: \"/bazar/product/\" + card._id,\r\n                            state: { category, text },\r\n                        }}\r\n                    >\r\n                        <div className=\"cards__card\">\r\n                            <div className=\"cards__card__image\">\r\n                                <Img\r\n                                    image={\r\n                                        card.images\r\n                                            ? card.images[0]\r\n                                            : card.images\r\n                                    }\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <h2 className=\"cards__card__title\">\r\n                                    {card.title}\r\n                                </h2>\r\n                                {card.price !== 0 && (\r\n                                    <div className=\"cards__card__price\">\r\n                                        <span>{card.price} zł</span>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </NavLink>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductCards;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\user\\login.jsx",["202","203"],"import React, { useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport { pick } from \"lodash\";\r\n\r\nimport { validationSchema } from \"./models/login\";\r\n\r\nimport { RiUserAddLine } from \"react-icons/ri\";\r\n\r\nimport * as auth from \"../../../services/auth\";\r\n\r\nimport AddInputBox from \"../common/form/addInputBox.jsx\";\r\nimport AddSubmitButton from \"../common/form/submitButton.jsx\";\r\nimport Buttons from \"../common/buttons.jsx\";\r\n\r\nconst Login = (props) => {\r\n    const { user, title, location } = props;\r\n\r\n    useEffect(() => {\r\n        title(\"login\");\r\n    }, []);\r\n\r\n    const handleLogin = async (user) => {\r\n        user = pick(user, [\"email\", \"password\"]);\r\n        const response = await auth.login(user);\r\n\r\n        if (response.ok) {\r\n            localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\r\n\r\n            const { state } = location;\r\n            window.location = state ? state.from.pathname : \"/\";\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            <div className=\"login\">\r\n                {user && (\r\n                    <>\r\n                        <div className=\"login__info\">\r\n                            <div>Zalogowany jako:</div>\r\n                            <div>{user.name}</div>\r\n                        </div>\r\n\r\n                        <button\r\n                            className=\"actionBtn\"\r\n                            onClick={() => auth.logout()}\r\n                        >\r\n                            WYLOGUJ\r\n                        </button>\r\n                    </>\r\n                )}\r\n\r\n                {!user && (\r\n                    <Formik\r\n                        initialValues={{\r\n                            email: \"\",\r\n                            password: \"\",\r\n                        }}\r\n                        onSubmit={(values) => handleLogin(values)}\r\n                        validationSchema={validationSchema}\r\n                    >\r\n                        {({}) => (\r\n                            <>\r\n                                <div className=\"login__buttons\">\r\n                                    <NavLink to=\"/register\">\r\n                                        <RiUserAddLine className=\"specialBtn\" />\r\n                                    </NavLink>\r\n\r\n                                    <Buttons\r\n                                        buttons={[\r\n                                            {\r\n                                                name: <RiUserAddLine />,\r\n                                                ref: \"/register\",\r\n                                            },\r\n                                        ]}\r\n                                    />\r\n\r\n                                    <AddInputBox\r\n                                        // className=\"addBoard__title\"\r\n                                        name=\"email\"\r\n                                        label=\"Email\"\r\n                                        placeholder=\"Email\"\r\n                                    />\r\n\r\n                                    <AddInputBox\r\n                                        // className=\"addBoard__title\"\r\n                                        label=\"Password\"\r\n                                        name=\"password\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <AddSubmitButton\r\n                                    className=\"actionBtn\"\r\n                                    title=\"ZALOGUJ\"\r\n                                />\r\n                            </>\r\n                        )}\r\n                    </Formik>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\user\\register.jsx",["204","205"],"import React, { useEffect } from \"react\";\r\nimport { pick } from \"lodash\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport { validationSchema } from \"./models/register\";\r\n\r\nimport AddInputBox from \"../common/form/addInputBox.jsx\";\r\nimport AddSubmitButton from \"../common/form/submitButton.jsx\";\r\n\r\nimport * as userBase from \"../../../services/users\";\r\n\r\nconst Register = (props) => {\r\n    const { title } = props;\r\n\r\n    useEffect(() => {\r\n        title(\"register\");\r\n    }, []);\r\n\r\n    const handleRegister = async (user) => {\r\n        user = pick(user, [\"login\", \"email\", \"password\"]);\r\n        const response = await userBase.add(user);\r\n\r\n        if (response.ok) {\r\n            localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\r\n            window.location = \"/\";\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            <Formik\r\n                initialValues={{\r\n                    email: \"\",\r\n                    login: \"\",\r\n                    password: \"\",\r\n                    confirmPassword: \"\",\r\n                }}\r\n                onSubmit={(values) => handleRegister(values)}\r\n                validationSchema={validationSchema}\r\n            >\r\n                {({}) => (\r\n                    <>\r\n                        <div className=\"login\">\r\n                            <div className=\"login__buttons\">\r\n                                <AddInputBox\r\n                                    name=\"email\"\r\n                                    label=\"Email\"\r\n                                    placeholder=\"Email...\"\r\n                                />\r\n\r\n                                <AddInputBox\r\n                                    label=\"Login\"\r\n                                    name=\"login\"\r\n                                    placeholder=\"Login...\"\r\n                                />\r\n                                <AddInputBox\r\n                                    label=\"Password\"\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                />\r\n                                <AddInputBox\r\n                                    label=\"Password\"\r\n                                    name=\"confirmPassword\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"Confirm password...\"\r\n                                />\r\n                            </div>\r\n\r\n                            <AddSubmitButton\r\n                                className=\"actionBtn\"\r\n                                title=\"REGISTER\"\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\other\\home.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\other\\add.jsx",["206"],"import React, { useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Add = (props) => {\r\n    useEffect(() => {\r\n        props.title(\"dodaj\");\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            <div className=\"add\">\r\n                <NavLink to={\"/bazar/add\"}>\r\n                    <button className=\"actionBtn\">sprzedaj</button>\r\n                </NavLink>\r\n                <NavLink to={\"/board/add\"}>\r\n                    <button className=\"actionBtn\">ogłoszenie</button>\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Add;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\save.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\data.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\delete.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\load.js",["207"],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\forms.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\shop\\models\\product.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\user\\models\\register.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\user\\models\\login.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\images.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\client.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\auth.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\users.js",["208"],"import { apiClient as client } from \"./client\";\r\n\r\nconst endpoint = \"/users\";\r\n\r\nconst get = () => client.get(endpoint);\r\n\r\nconst me = () => client.get(endpoint + \"/me\");\r\n\r\nconst add = (body) => client.post(endpoint, body);\r\n\r\nconst edit = (body) => client.put(endpoint, body);\r\n\r\nconst remove = (body) => client.put(endpoint, body);\r\n\r\nexport { get, add, edit, remove };\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\products.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\notices.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\categories.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\buttonBack.jsx",[],{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":29,"column":25,"nodeType":"215","endLine":35,"endColumn":26},{"ruleId":"216","severity":1,"message":"217","line":15,"column":15,"nodeType":"218","endLine":22,"endColumn":6},{"ruleId":"216","severity":1,"message":"219","line":22,"column":8,"nodeType":"220","endLine":22,"endColumn":10,"suggestions":"221"},{"ruleId":"222","severity":1,"message":"223","line":54,"column":27,"nodeType":"224","messageId":"225","endLine":54,"endColumn":29},{"ruleId":"226","severity":1,"message":"227","line":15,"column":22,"nodeType":"228","messageId":"229","endLine":15,"endColumn":33},{"ruleId":"216","severity":1,"message":"230","line":28,"column":8,"nodeType":"220","endLine":28,"endColumn":24,"suggestions":"231"},{"ruleId":"216","severity":1,"message":"217","line":30,"column":15,"nodeType":"218","endLine":36,"endColumn":6},{"ruleId":"216","severity":1,"message":"217","line":17,"column":15,"nodeType":"218","endLine":20,"endColumn":6},{"ruleId":"216","severity":1,"message":"232","line":20,"column":8,"nodeType":"220","endLine":20,"endColumn":10,"suggestions":"233"},{"ruleId":"216","severity":1,"message":"230","line":24,"column":8,"nodeType":"220","endLine":24,"endColumn":14,"suggestions":"234"},{"ruleId":"216","severity":1,"message":"217","line":17,"column":15,"nodeType":"218","endLine":29,"endColumn":6},{"ruleId":"216","severity":1,"message":"235","line":29,"column":8,"nodeType":"220","endLine":29,"endColumn":10,"suggestions":"236"},{"ruleId":"222","severity":1,"message":"223","line":70,"column":31,"nodeType":"224","messageId":"225","endLine":70,"endColumn":33},{"ruleId":"237","severity":1,"message":"238","line":30,"column":54,"nodeType":"239","messageId":"225","endLine":30,"endColumn":56},{"ruleId":"216","severity":1,"message":"230","line":38,"column":8,"nodeType":"220","endLine":38,"endColumn":36,"suggestions":"240"},{"ruleId":"216","severity":1,"message":"230","line":21,"column":8,"nodeType":"220","endLine":21,"endColumn":10,"suggestions":"241"},{"ruleId":"222","severity":1,"message":"223","line":63,"column":27,"nodeType":"224","messageId":"225","endLine":63,"endColumn":29},{"ruleId":"216","severity":1,"message":"230","line":17,"column":8,"nodeType":"220","endLine":17,"endColumn":10,"suggestions":"242"},{"ruleId":"222","severity":1,"message":"223","line":41,"column":19,"nodeType":"224","messageId":"225","endLine":41,"endColumn":21},{"ruleId":"216","severity":1,"message":"219","line":7,"column":8,"nodeType":"220","endLine":7,"endColumn":10,"suggestions":"243"},{"ruleId":"226","severity":1,"message":"244","line":5,"column":7,"nodeType":"228","messageId":"229","endLine":5,"endColumn":11},{"ruleId":"226","severity":1,"message":"245","line":7,"column":7,"nodeType":"228","messageId":"229","endLine":7,"endColumn":9},"no-native-reassign",["246"],"no-negated-in-lhs",["247"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["248"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-unused-vars","'setCategory' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'title'. Either include it or remove the dependency array.",["249"],"React Hook useEffect has missing dependencies: 'history' and 'match.params.id'. Either include them or remove the dependency array.",["250"],["251"],"React Hook useEffect has missing dependencies: 'history', 'match.params.id', and 'title'. Either include them or remove the dependency array.",["252"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",["253"],["254"],["255"],["256"],"'data' is assigned a value but never used.","'me' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"269","fix":"271"},{"desc":"257","fix":"272"},"Update the dependencies array to be: [props]",{"range":"273","text":"274"},"Update the dependencies array to be: [category, text, title]",{"range":"275","text":"276"},"Update the dependencies array to be: [history, match.params.id]",{"range":"277","text":"278"},"Update the dependencies array to be: [card, title]",{"range":"279","text":"280"},"Update the dependencies array to be: [history, match.params.id, title]",{"range":"281","text":"282"},"Update the dependencies array to be: [categories, category, text, title]",{"range":"283","text":"284"},"Update the dependencies array to be: [title]",{"range":"285","text":"286"},{"range":"287","text":"286"},{"range":"288","text":"274"},[710,712],"[props]",[998,1014],"[category, text, title]",[734,736],"[history, match.params.id]",[810,816],"[card, title]",[938,940],"[history, match.params.id, title]",[1274,1302],"[categories, category, text, title]",[614,616],"[title]",[470,472],[177,179]]