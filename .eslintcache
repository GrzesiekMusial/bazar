[{"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\index.js":"1","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\App.js":"2","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\reportWebVitals.js":"3","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\buttons.jsx":"4","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\header.jsx":"5","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\submitButton.jsx":"6","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\addInputBox.jsx":"7","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\filter.js":"8","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\imageSlider.jsx":"9","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\imageLoader.jsx":"10","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\searchBox.jsx":"11","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\addTextBox.jsx":"12","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\addSelectBox.jsx":"13","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\errorMessage.jsx":"14","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\protectedRoute.jsx":"15","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\modal.jsx":"16","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\imageInput.jsx":"17","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\board\\addBoard.jsx":"18","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\board\\boardCards.jsx":"19","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\board\\models\\board.js":"20","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\shop\\productDetails.jsx":"21","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\shop\\addProduct.jsx":"22","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\shop\\productCards.jsx":"23","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\user\\login.jsx":"24","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\user\\register.jsx":"25","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\other\\home.jsx":"26","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\other\\add.jsx":"27","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\save.js":"28","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\data.js":"29","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\delete.js":"30","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\load.js":"31","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\forms.jsx":"32","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\shop\\models\\product.js":"33","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\user\\models\\register.js":"34","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\user\\models\\login.js":"35","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\images.js":"36","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\client.js":"37","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\auth.js":"38","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\users.js":"39","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\products.js":"40","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\notices.js":"41","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\categories.js":"42","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\buttonBack.jsx":"43","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\spinner.jsx":"44","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\cubby.js":"45"},{"size":584,"mtime":1610028171592,"results":"46","hashOfConfig":"47"},{"size":7864,"mtime":1610283728600,"results":"48","hashOfConfig":"47"},{"size":375,"mtime":1609170866605,"results":"49","hashOfConfig":"47"},{"size":403,"mtime":1609937473219,"results":"50","hashOfConfig":"47"},{"size":243,"mtime":1609836884531,"results":"51","hashOfConfig":"47"},{"size":331,"mtime":1609937469366,"results":"52","hashOfConfig":"47"},{"size":885,"mtime":1609937439304,"results":"53","hashOfConfig":"47"},{"size":413,"mtime":1610281378331,"results":"54","hashOfConfig":"47"},{"size":1272,"mtime":1609937500950,"results":"55","hashOfConfig":"47"},{"size":697,"mtime":1610365253380,"results":"56","hashOfConfig":"47"},{"size":2549,"mtime":1609937521892,"results":"57","hashOfConfig":"47"},{"size":889,"mtime":1609937455142,"results":"58","hashOfConfig":"47"},{"size":1141,"mtime":1609937448844,"results":"59","hashOfConfig":"47"},{"size":206,"mtime":1609944407243,"results":"60","hashOfConfig":"47"},{"size":945,"mtime":1609954568934,"results":"61","hashOfConfig":"47"},{"size":533,"mtime":1609549373107,"results":"62","hashOfConfig":"47"},{"size":2275,"mtime":1610364802554,"results":"63","hashOfConfig":"47"},{"size":3565,"mtime":1610122706863,"results":"64","hashOfConfig":"47"},{"size":4810,"mtime":1609947349874,"results":"65","hashOfConfig":"47"},{"size":203,"mtime":1609837678454,"results":"66","hashOfConfig":"47"},{"size":3898,"mtime":1610130220317,"results":"67","hashOfConfig":"47"},{"size":6372,"mtime":1610353683247,"results":"68","hashOfConfig":"47"},{"size":3558,"mtime":1609955705424,"results":"69","hashOfConfig":"47"},{"size":3896,"mtime":1609954578686,"results":"70","hashOfConfig":"47"},{"size":2846,"mtime":1609954587514,"results":"71","hashOfConfig":"47"},{"size":69,"mtime":1609937653822,"results":"72","hashOfConfig":"47"},{"size":626,"mtime":1609839657279,"results":"73","hashOfConfig":"47"},{"size":2011,"mtime":1610305125804,"results":"74","hashOfConfig":"47"},{"size":414,"mtime":1610143323055,"results":"75","hashOfConfig":"47"},{"size":781,"mtime":1610230043009,"results":"76","hashOfConfig":"47"},{"size":2121,"mtime":1610144506059,"results":"77","hashOfConfig":"47"},{"size":315,"mtime":1609956839822,"results":"78","hashOfConfig":"47"},{"size":610,"mtime":1610100651960,"results":"79","hashOfConfig":"47"},{"size":622,"mtime":1609940327656,"results":"80","hashOfConfig":"47"},{"size":242,"mtime":1609940423641,"results":"81","hashOfConfig":"47"},{"size":191,"mtime":1610364877294,"results":"82","hashOfConfig":"47"},{"size":272,"mtime":1610296758685,"results":"83","hashOfConfig":"47"},{"size":656,"mtime":1609528545799,"results":"84","hashOfConfig":"47"},{"size":374,"mtime":1609527226710,"results":"85","hashOfConfig":"47"},{"size":443,"mtime":1610223148154,"results":"86","hashOfConfig":"47"},{"size":418,"mtime":1610122939157,"results":"87","hashOfConfig":"47"},{"size":329,"mtime":1610284824281,"results":"88","hashOfConfig":"47"},{"size":273,"mtime":1609957279400,"results":"89","hashOfConfig":"47"},{"size":378,"mtime":1610201850852,"results":"90","hashOfConfig":"47"},{"size":235,"mtime":1610143610517,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1sxluq7",{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"94"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"94"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\index.js",[],["193","194"],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\App.js",["195"],"import React, { Component } from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\n\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\n\r\nimport { FiShoppingBag as Bazar } from \"react-icons/fi\";\r\nimport { TiPinOutline as Board } from \"react-icons/ti\";\r\nimport {\r\n    BiUserX as UserNotLogged,\r\n    BiUserCheck as UserLogged,\r\n} from \"react-icons/bi\";\r\nimport { CgAddR as AddNew } from \"react-icons/cg\";\r\n\r\nimport ProductDetails from \"./app/components/shop/productDetails\";\r\nimport ProductCards from \"./app/components/shop/productCards\";\r\nimport BoardCards from \"./app/components/board/boardCards\";\r\nimport Test from \"./app/components/other/home\";\r\nimport AddProduct from \"./app/components/shop/addProduct\";\r\nimport AddBoard from \"./app/components/board/addBoard\";\r\nimport Header from \"./app/components/common/header\";\r\nimport Add from \"./app/components/other/add\";\r\nimport Buttons from \"./app/components/common/buttons\";\r\nimport Login from \"./app/components/user/login\";\r\nimport Register from \"./app/components/user/register\";\r\nimport ProtectedRoute from \"./app/components/common/protectedRoute\";\r\nimport Spinner from \"./app/components/common/spinner\";\r\n\r\nimport * as auth from \"./services/auth\";\r\nimport * as imagesBase from \"./services/images\";\r\nimport { apiClient } from \"./services/client\";\r\n\r\nimport { ImCheckboxChecked } from \"react-icons/im\";\r\n\r\nclass App extends Component {\r\n    state = {\r\n        images: null,\r\n        photoIndex: 0,\r\n        isOpen: false,\r\n        header: null,\r\n        buttons: null,\r\n        user: null,\r\n        load: false,\r\n        check: false,\r\n    };\r\n\r\n    renderButtons = async () => {\r\n        const userBtn = this.state.user ? <UserLogged /> : <UserNotLogged />;\r\n\r\n        const buttons = [\r\n            { name: <Board />, ref: \"/board\" },\r\n            { name: <Bazar />, ref: \"/bazar\" },\r\n            { name: <AddNew />, ref: \"/add\" },\r\n            { name: userBtn, ref: \"/login\" },\r\n        ];\r\n\r\n        this.setState({ buttons: buttons });\r\n    };\r\n\r\n    renderTitle = (t) => {\r\n        this.setState({ header: t });\r\n    };\r\n\r\n    renderImage = (img, index) => {\r\n        this.setState({ images: img, photoIndex: index, isOpen: true });\r\n    };\r\n\r\n    renderUser = () => {\r\n        const resp = auth.getUser();\r\n        if (resp) this.setState({ user: resp });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.user !== this.state.user) {\r\n            this.renderButtons();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.renderButtons();\r\n        this.renderUser();\r\n    }\r\n\r\n    render(props) {\r\n        const { isOpen, photoIndex } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <Header title={this.state.header} />\r\n                {this.state.load === true && <Spinner />}\r\n                {this.state.check && (\r\n                    <div className=\"spinner check\">\r\n                        <ImCheckboxChecked />\r\n                    </div>\r\n                )}\r\n\r\n                <Switch>\r\n                    <ProtectedRoute\r\n                        path=\"/bazar/add\"\r\n                        title={this.renderTitle}\r\n                        component={AddProduct}\r\n                    />\r\n\r\n                    <Route\r\n                        path=\"/add\"\r\n                        render={() => <Add title={this.renderTitle} />}\r\n                    />\r\n\r\n                    <ProtectedRoute\r\n                        path=\"/board/edit/:id?\"\r\n                        title={this.renderTitle}\r\n                        component={AddBoard}\r\n                    />\r\n\r\n                    <ProtectedRoute\r\n                        path=\"/board/add\"\r\n                        title={this.renderTitle}\r\n                        component={AddBoard}\r\n                    />\r\n\r\n                    <Route\r\n                        path=\"/board\"\r\n                        render={(props) => (\r\n                            <BoardCards\r\n                                user={this.state.user}\r\n                                title={this.renderTitle}\r\n                                renderImage={this.renderImage}\r\n                                {...props}\r\n                            />\r\n                        )}\r\n                    />\r\n\r\n                    <ProtectedRoute\r\n                        path=\"/bazar/product/edit/:id?\"\r\n                        title={this.renderTitle}\r\n                        component={AddProduct}\r\n                    />\r\n\r\n                    <Route\r\n                        path=\"/bazar/product/:id?\"\r\n                        render={(props) => (\r\n                            <ProductDetails\r\n                                title={this.renderTitle}\r\n                                renderImage={this.renderImage}\r\n                                user={this.state.user}\r\n                                {...props}\r\n                            />\r\n                        )}\r\n                    />\r\n\r\n                    <Route\r\n                        path=\"/bazar/:category?/:text?\"\r\n                        render={(props, match) => (\r\n                            <ProductCards title={this.renderTitle} {...props} />\r\n                        )}\r\n                    />\r\n\r\n                    <Route\r\n                        path=\"/login\"\r\n                        user={this.state.user}\r\n                        render={(props) => (\r\n                            <Login\r\n                                {...props}\r\n                                title={this.renderTitle}\r\n                                user={this.state.user}\r\n                            />\r\n                        )}\r\n                    />\r\n\r\n                    <Route\r\n                        path=\"/register\"\r\n                        render={(props) => (\r\n                            <Register {...props} title={this.renderTitle} />\r\n                        )}\r\n                    />\r\n\r\n                    <Redirect to=\"/board\" />\r\n                </Switch>\r\n\r\n                <Test />\r\n\r\n                {this.state.buttons && (\r\n                    <Buttons\r\n                        buttons={this.state.buttons}\r\n                        user={this.state.user}\r\n                    />\r\n                )}\r\n\r\n                {isOpen && (\r\n                    <Lightbox\r\n                        mainSrc={imagesBase.get(this.state.images[photoIndex])}\r\n                        nextSrc={imagesBase.get(\r\n                            this.state.images[\r\n                                (photoIndex + 1) % this.state.images.length\r\n                            ]\r\n                        )}\r\n                        prevSrc={imagesBase.get(\r\n                            this.state.images[\r\n                                (photoIndex + this.state.images.length - 1) %\r\n                                    this.state.images.length\r\n                            ]\r\n                        )}\r\n                        onCloseRequest={() => this.setState({ isOpen: false })}\r\n                        onMovePrevRequest={() =>\r\n                            this.setState({\r\n                                photoIndex:\r\n                                    (photoIndex +\r\n                                        this.state.images.length -\r\n                                        1) %\r\n                                    this.state.images.length,\r\n                            })\r\n                        }\r\n                        onMoveNextRequest={() =>\r\n                            this.setState({\r\n                                photoIndex:\r\n                                    (photoIndex + 1) % this.state.images.length,\r\n                            })\r\n                        }\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\reportWebVitals.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\buttons.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\header.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\submitButton.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\addInputBox.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\filter.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\imageSlider.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\imageLoader.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\searchBox.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\addTextBox.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\addSelectBox.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\errorMessage.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\protectedRoute.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\modal.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\imageInput.jsx",["196"],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\board\\addBoard.jsx",["197","198","199"],"import React, { useEffect, useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { validationSchema } from \"./models/board\";\r\n\r\nimport * as Forms from \"../common/form/forms\";\r\nimport * as base from \"../../../methods/data\";\r\n\r\nconst AddBoard = (props) => {\r\n    const [image, setImage] = useState([]);\r\n    const [edit, setEdit] = useState(null);\r\n\r\n    const { title, history, match } = props;\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            title(\"ogłoszenie\");\r\n            await base.getOneNotice(match.params.id, setEdit, setImage);\r\n        } catch (ex) {\r\n            history.push(\"/add\");\r\n        }\r\n    }, []);\r\n\r\n    const handleSave = async (values) => {\r\n        const result = await base.noticeSave(values, edit, image);\r\n        if (result) history.push(\"/board\");\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        console.log(id);\r\n        const result = image.filter((img) => img !== id && img.name !== id);\r\n        console.log(result);\r\n        setImage(result);\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            <ToastContainer />\r\n            <div className=\"screen__container\">\r\n                <div className=\"addBoard\">\r\n                    <div className=\"addBoard__images\">\r\n                        <Forms.Image\r\n                            handleChange={setImage}\r\n                            preview={image}\r\n                            handleDelete={handleDelete}\r\n                        />\r\n                    </div>\r\n\r\n                    <Formik\r\n                        enableReinitialize={true}\r\n                        initialValues={\r\n                            edit\r\n                                ? {\r\n                                      text: edit.text,\r\n                                      title: edit.title,\r\n                                  }\r\n                                : {\r\n                                      text: \"\",\r\n                                      title: \"\",\r\n                                  }\r\n                        }\r\n                        onSubmit={(values) => handleSave(values)}\r\n                        validationSchema={validationSchema}\r\n                    >\r\n                        {({}) => (\r\n                            <>\r\n                                <Forms.Input\r\n                                    className=\"addBoard__title\"\r\n                                    name=\"title\"\r\n                                    placeholder=\"Nazwa\"\r\n                                    defaultValue={edit ? edit.title : null}\r\n                                />\r\n                                <Forms.Text\r\n                                    className=\"addBoard__text\"\r\n                                    name=\"text\"\r\n                                    placeholder=\"Opis...\"\r\n                                    defaultValue={edit ? edit.text : null}\r\n                                />\r\n                                <div className=\"addBoard__buttons\">\r\n                                    <Forms.Submit\r\n                                        className=\"actionBtn\"\r\n                                        title={edit ? \"ZAPISZ\" : \"OPUBLIKUJ\"}\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddBoard;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\board\\boardCards.jsx",["200","201","202"],"import React, { useEffect, useState } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport ImageSlider from \"../common/imageSlider\";\r\nimport SearchBox from \"../common/searchBox\";\r\nimport AcceptModal from \"../common/modal\";\r\n\r\nimport { dataFilter } from \"../../../methods/filter\";\r\nimport * as base from \"../../../methods/data\";\r\nimport * as Forms from \"../common/form/forms\";\r\n\r\nconst BoardCards = (props) => {\r\n    const [data, setData] = useState(null);\r\n    const [category, setCategory] = useState(\"0\");\r\n    const [text, setText] = useState(\"\");\r\n    const [modal, setModal] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const { user, renderImage, title, history } = props;\r\n\r\n    useEffect(() => {\r\n        title(\r\n            `tablica ${category === \"0\" ? \"\" : \"| \" + category.toLowerCase()} ${\r\n                text === \"\" ? \"\" : \" ~ \" + text.toLowerCase()\r\n            }`\r\n        );\r\n    }, [category, text]);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            await base.getNotices(setData);\r\n        } catch (ex) {\r\n            setError(\"Cant load data, plese try again\");\r\n        }\r\n    }, []);\r\n\r\n    function expand(e) {\r\n        while (!e.target.classList.contains(\"board\"))\r\n            e.target = e.target.parentElement;\r\n\r\n        const arr = e.target.children;\r\n\r\n        for (let i = 0; i < arr.length; i++) {\r\n            arr[i].classList.toggle(\"show\");\r\n            if (i === arr.length - 1) arr[i].classList.toggle(\"end\");\r\n        }\r\n    }\r\n\r\n    const handleDelete = async (card) => {\r\n        const result = await base.noticeDelete(card);\r\n        if (result) {\r\n            setData(data.filter((notice) => notice._id !== card._id));\r\n            setModal(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            <ToastContainer />\r\n\r\n            {error && <Forms.Error error={error} visible={error} />}\r\n\r\n            <div>\r\n                <SearchBox\r\n                    filtr={false}\r\n                    handleSearch={setText}\r\n                    status={{ category: category, text: text }}\r\n                />\r\n\r\n                {dataFilter(data, category, text).map((card) => (\r\n                    <div className=\"board\">\r\n                        <div\r\n                            className=\"board__title\"\r\n                            onClick={(e) => expand(e)}\r\n                        >\r\n                            <span>{card.title}</span>\r\n                        </div>\r\n\r\n                        <div className=\"board__content\">\r\n                            <div className=\"board__content--images\">\r\n                                {card.images && (\r\n                                    <ImageSlider\r\n                                        images={card.images}\r\n                                        handleClick={(i, index, arr) =>\r\n                                            renderImage(arr, index)\r\n                                        }\r\n                                    />\r\n                                )}\r\n                            </div>\r\n\r\n                            {card.text && <p>{card.text}</p>}\r\n\r\n                            {user && user._id === card.author._id && !modal && (\r\n                                <div className=\"board__delete\">\r\n                                    <button\r\n                                        className=\"actionBtn edit\"\r\n                                        onClick={() =>\r\n                                            history.push(\r\n                                                `/board/edit/${card._id}`\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        EDYTUJ\r\n                                    </button>\r\n                                    <button\r\n                                        className=\"actionBtn delete\"\r\n                                        onClick={() => setModal(true)}\r\n                                    >\r\n                                        USUŃ\r\n                                    </button>\r\n                                </div>\r\n                            )}\r\n\r\n                            {modal && (\r\n                                <AcceptModal\r\n                                    close={setModal}\r\n                                    accept={() => handleDelete(card)}\r\n                                    title={`Potwierdź operację usunięcia ${card.title}`}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BoardCards;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\board\\models\\board.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\shop\\productDetails.jsx",["203","204","205"],"import React, { useEffect, useState } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport ImageSlider from \"../common/imageSlider\";\r\nimport AcceptModal from \"../common/modal\";\r\n\r\nimport * as Forms from \"../common/form/forms\";\r\nimport * as base from \"../../../methods/data\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction ProductDetails(props) {\r\n    const { user, renderImage, title, history, match } = props;\r\n    const [card, setCard] = useState(null);\r\n    const [modal, setModal] = useState(false);\r\n\r\n    useEffect(async () => {\r\n        if (!(await base.getOneProduct(match.params.id, setCard, null)))\r\n            history.push(\"/bazar\");\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (card) title(card.title);\r\n    }, [card]);\r\n\r\n    const handleDelete = async (card) => {\r\n        await base.productDelete(card);\r\n        setModal(false);\r\n        history.push(\"/bazar\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            <NavLink\r\n                to={{\r\n                    pathname: \"/bazar\",\r\n                    state: history.location.state,\r\n                }}\r\n            >\r\n                <Forms.Back />\r\n            </NavLink>\r\n            <ToastContainer />\r\n            {card && (\r\n                <div className=\"screen__container\">\r\n                    <div className=\"productDetails__image\">\r\n                        <ImageSlider\r\n                            images={card.images}\r\n                            handleClick={(i, index, arr) =>\r\n                                renderImage(arr, index)\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div className=\"productDetails__details\">\r\n                        <p>\r\n                            {card.author.name\r\n                                ? card.author.name\r\n                                : card.author.login}\r\n                        </p>\r\n                        <p>{card.date}</p>\r\n                    </div>\r\n                    {card.price !== 0 && (\r\n                        <div className=\"productDetails__image--price\">\r\n                            <span>{card.price} zł</span>\r\n                        </div>\r\n                    )}\r\n                    <div className=\"productDetails__text\">\r\n                        <p> {card.text}</p>\r\n                    </div>\r\n                    <div className=\"\">\r\n                        {card.author.phone && (\r\n                            <a href={`tel:${card.author.phone}`}>\r\n                                CLICK TO CALL\r\n                            </a>\r\n                        )}\r\n                    </div>\r\n\r\n                    {modal && (\r\n                        <AcceptModal\r\n                            close={setModal}\r\n                            accept={() => handleDelete(card)}\r\n                            title={`Potwierdź operację usunięcia ${card.title}`}\r\n                        />\r\n                    )}\r\n                    {user && user._id === card.author._id && !modal && (\r\n                        <div className=\"productDetails__buttons\">\r\n                            <button\r\n                                className=\"actionBtn edit\"\r\n                                onClick={() => history.push(`edit/${card._id}`)}\r\n                            >\r\n                                EDYTUJ\r\n                            </button>\r\n                            <button\r\n                                className=\"actionBtn delete\"\r\n                                onClick={() => setModal(true)}\r\n                            >\r\n                                USUŃ\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductDetails;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\shop\\addProduct.jsx",["206","207","208"],"import React, { useState, useEffect } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { validationSchema } from \"./models/product\";\r\n\r\nimport * as Forms from \"../common/form/forms\";\r\nimport * as base from \"../../../methods/data\";\r\n\r\nconst AddProduct = (props) => {\r\n    const { title, history, match } = props;\r\n    const [image, setImage] = useState([]);\r\n    const [categories, setCategories] = useState(null);\r\n    const [edit, setEdit] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        title(\"sprzedaj\");\r\n        const cat = await base.getCategories();\r\n        if (!cat) return history.push(\"/add\");\r\n        setCategories(cat);\r\n\r\n        if (!match.params.id) return;\r\n\r\n        const prod = await base.getOneProduct(\r\n            match.params.id,\r\n            setEdit,\r\n            setImage\r\n        );\r\n        if (!prod) history.push(\"/add\");\r\n    }, []);\r\n\r\n    const handleSave = async (values) => {\r\n        const result = await base.productSave(values, edit, image);\r\n        console.log(result);\r\n        // if (result) return history.push(`/bazar/product/${result._id}`);\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        console.log(id);\r\n        const result = image.filter((img) => img !== id && img.name !== id);\r\n        console.log(result);\r\n        setImage(result);\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            {categories && (\r\n                <div className=\"screen__container\">\r\n                    <div className=\"addBoard\">\r\n                        <ToastContainer />\r\n\r\n                        <div className=\"addBoard__images\">\r\n                            <Forms.Image\r\n                                handleChange={setImage}\r\n                                preview={image}\r\n                                handleDelete={handleDelete}\r\n                            />\r\n                        </div>\r\n\r\n                        <Formik\r\n                            enableReinitialize={true}\r\n                            initialValues={\r\n                                edit\r\n                                    ? {\r\n                                          text: edit.text,\r\n                                          title: edit.title,\r\n                                          price: edit.price,\r\n                                          category: edit.category._id,\r\n                                      }\r\n                                    : {\r\n                                          text: \"\",\r\n                                          title: \"\",\r\n                                          price: \"\",\r\n                                          category: categories[0]._id,\r\n                                      }\r\n                            }\r\n                            onSubmit={(values) => handleSave(values, image)}\r\n                            validationSchema={validationSchema}\r\n                        >\r\n                            {({}) => (\r\n                                <>\r\n                                    <Forms.Input\r\n                                        className=\"addBoard__title\"\r\n                                        name=\"title\"\r\n                                        placeholder=\"Nazwa\"\r\n                                        defaultValue={edit ? edit.title : null}\r\n                                    />\r\n\r\n                                    <Forms.Text\r\n                                        className=\"addBoard__text\"\r\n                                        name=\"text\"\r\n                                        placeholder=\"Opis...\"\r\n                                        defaultValue={edit ? edit.text : null}\r\n                                    />\r\n\r\n                                    <div className=\"addBoard__details\">\r\n                                        <div>\r\n                                            <Forms.Input\r\n                                                label=\"CENA\"\r\n                                                placeholder=\"cena\"\r\n                                                name=\"price\"\r\n                                                id=\"price\"\r\n                                                className=\"addBoard__details--price\"\r\n                                                defaultValue={\r\n                                                    edit ? edit.price : null\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div>\r\n                                            {categories && (\r\n                                                <Forms.Select\r\n                                                    label=\"KATEGORIA\"\r\n                                                    arr={categories}\r\n                                                    id=\"category\"\r\n                                                    name=\"category\"\r\n                                                    className=\"addBoard__details--category\"\r\n                                                    defaultValue={\r\n                                                        edit\r\n                                                            ? edit.category._id\r\n                                                            : null\r\n                                                    }\r\n                                                />\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"addBoard__buttons\">\r\n                                        <Forms.Submit\r\n                                            className=\"actionBtn\"\r\n                                            title={\r\n                                                edit ? \"ZAPISZ\" : \"OPUBLIKUJ\"\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                        </Formik>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddProduct;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\shop\\productCards.jsx",["209","210"],"import React, { useState, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport Img from \"../common/imageLoader\";\r\n\r\nimport * as base from \"../../../methods/data\";\r\nimport * as Forms from \"../common/form/forms\";\r\n\r\nimport { dataFilter } from \"../../../methods/filter\";\r\n\r\nimport \"react-dropdown/style.css\";\r\nimport SearchBox from \"../common/searchBox\";\r\n\r\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\r\nfunction ProductCards(props) {\r\n    const { title, history } = props;\r\n    const [data, setData] = useState(null);\r\n    const [categories, setCategories] = useState(null);\r\n    const [category, setCategory] = useState(\r\n        history.location.state ? history.location.state.category : \"0\"\r\n    );\r\n    const [text, setText] = useState(\r\n        history.location.state ? history.location.state.text : \"\"\r\n    );\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const name =\r\n            categories && category\r\n                ? categories.filter((cat) => cat._id == category)[0].name\r\n                : null;\r\n\r\n        title(\r\n            `ogłoszenia ${category === \"0\" ? \"\" : \"| \" + name} ${\r\n                text === \"\" ? \"\" : \" ~ \" + text.toLowerCase()\r\n            }`\r\n        );\r\n    }, [categories, category, text]);\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n\r\n    const loadData = async () => {\r\n        try {\r\n            await base.getProducts(setData);\r\n            await base.getCategories(true, setCategories);\r\n        } catch (ex) {\r\n            setError(\"Cant load data, plese try again\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            {error && <Forms.Error error={error} visible={error} />}\r\n\r\n            {categories && (\r\n                <SearchBox\r\n                    status={{ category: category, text: text }}\r\n                    categories={categories}\r\n                    handleCategorySearch={setCategory}\r\n                    handleSearch={setText}\r\n                />\r\n            )}\r\n\r\n            <div className=\"cards\">\r\n                {dataFilter(data, category, text).map((card) => (\r\n                    <NavLink\r\n                        to={{\r\n                            pathname: \"/bazar/product/\" + card._id,\r\n                            state: { category, text },\r\n                        }}\r\n                    >\r\n                        <div className=\"cards__card\">\r\n                            <div className=\"cards__card__image\">\r\n                                <Img\r\n                                    image={\r\n                                        card.images\r\n                                            ? card.images[0]\r\n                                            : card.images\r\n                                    }\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <h2 className=\"cards__card__title\">\r\n                                    {card.title}\r\n                                </h2>\r\n                                {card.price !== 0 && (\r\n                                    <div className=\"cards__card__price\">\r\n                                        <span>{card.price} zł</span>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </NavLink>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductCards;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\user\\login.jsx",["211","212"],"import React, { useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport { pick } from \"lodash\";\r\n\r\nimport { validationSchema } from \"./models/login\";\r\n\r\nimport { RiUserAddLine } from \"react-icons/ri\";\r\n\r\nimport * as auth from \"../../../services/auth\";\r\n\r\nimport AddInputBox from \"../common/form/addInputBox.jsx\";\r\nimport AddSubmitButton from \"../common/form/submitButton.jsx\";\r\nimport Buttons from \"../common/buttons.jsx\";\r\n\r\nconst Login = (props) => {\r\n    const { user, title, location } = props;\r\n\r\n    useEffect(() => {\r\n        title(\"login\");\r\n    }, []);\r\n\r\n    const handleLogin = async (user) => {\r\n        user = pick(user, [\"email\", \"password\"]);\r\n        const response = await auth.login(user);\r\n\r\n        if (response.ok) {\r\n            localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\r\n\r\n            const { state } = location;\r\n            window.location = state ? state.from.pathname : \"/\";\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            <div className=\"login\">\r\n                {user && (\r\n                    <>\r\n                        <div className=\"login__info\">\r\n                            <div>Zalogowany jako:</div>\r\n                            <div>{user.name}</div>\r\n                        </div>\r\n\r\n                        <button\r\n                            className=\"actionBtn\"\r\n                            onClick={() => auth.logout()}\r\n                        >\r\n                            WYLOGUJ\r\n                        </button>\r\n                    </>\r\n                )}\r\n\r\n                {!user && (\r\n                    <Formik\r\n                        initialValues={{\r\n                            email: \"\",\r\n                            password: \"\",\r\n                        }}\r\n                        onSubmit={(values) => handleLogin(values)}\r\n                        validationSchema={validationSchema}\r\n                    >\r\n                        {({}) => (\r\n                            <>\r\n                                <div className=\"login__buttons\">\r\n                                    <NavLink to=\"/register\">\r\n                                        <RiUserAddLine className=\"specialBtn\" />\r\n                                    </NavLink>\r\n\r\n                                    <Buttons\r\n                                        buttons={[\r\n                                            {\r\n                                                name: <RiUserAddLine />,\r\n                                                ref: \"/register\",\r\n                                            },\r\n                                        ]}\r\n                                    />\r\n\r\n                                    <AddInputBox\r\n                                        // className=\"addBoard__title\"\r\n                                        name=\"email\"\r\n                                        label=\"Email\"\r\n                                        placeholder=\"Email\"\r\n                                    />\r\n\r\n                                    <AddInputBox\r\n                                        // className=\"addBoard__title\"\r\n                                        label=\"Password\"\r\n                                        name=\"password\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <AddSubmitButton\r\n                                    className=\"actionBtn\"\r\n                                    title=\"ZALOGUJ\"\r\n                                />\r\n                            </>\r\n                        )}\r\n                    </Formik>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\user\\register.jsx",["213","214"],"import React, { useEffect } from \"react\";\r\nimport { pick } from \"lodash\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport { validationSchema } from \"./models/register\";\r\n\r\nimport AddInputBox from \"../common/form/addInputBox.jsx\";\r\nimport AddSubmitButton from \"../common/form/submitButton.jsx\";\r\n\r\nimport * as userBase from \"../../../services/users\";\r\n\r\nconst Register = (props) => {\r\n    const { title } = props;\r\n\r\n    useEffect(() => {\r\n        title(\"register\");\r\n    }, []);\r\n\r\n    const handleRegister = async (user) => {\r\n        user = pick(user, [\"login\", \"email\", \"password\"]);\r\n        const response = await userBase.add(user);\r\n\r\n        if (response.ok) {\r\n            localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\r\n            window.location = \"/\";\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            <Formik\r\n                initialValues={{\r\n                    email: \"\",\r\n                    login: \"\",\r\n                    password: \"\",\r\n                    confirmPassword: \"\",\r\n                }}\r\n                onSubmit={(values) => handleRegister(values)}\r\n                validationSchema={validationSchema}\r\n            >\r\n                {({}) => (\r\n                    <>\r\n                        <div className=\"login\">\r\n                            <div className=\"login__buttons\">\r\n                                <AddInputBox\r\n                                    name=\"email\"\r\n                                    label=\"Email\"\r\n                                    placeholder=\"Email...\"\r\n                                />\r\n\r\n                                <AddInputBox\r\n                                    label=\"Login\"\r\n                                    name=\"login\"\r\n                                    placeholder=\"Login...\"\r\n                                />\r\n                                <AddInputBox\r\n                                    label=\"Password\"\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                />\r\n                                <AddInputBox\r\n                                    label=\"Password\"\r\n                                    name=\"confirmPassword\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"Confirm password...\"\r\n                                />\r\n                            </div>\r\n\r\n                            <AddSubmitButton\r\n                                className=\"actionBtn\"\r\n                                title=\"REGISTER\"\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\other\\home.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\other\\add.jsx",["215"],"import React, { useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Add = (props) => {\r\n    useEffect(() => {\r\n        props.title(\"dodaj\");\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"screen\">\r\n            <div className=\"add\">\r\n                <NavLink to={\"/bazar/add\"}>\r\n                    <button className=\"actionBtn\">sprzedaj</button>\r\n                </NavLink>\r\n                <NavLink to={\"/board/add\"}>\r\n                    <button className=\"actionBtn\">ogłoszenie</button>\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Add;\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\save.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\data.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\delete.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\load.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\forms.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\shop\\models\\product.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\user\\models\\register.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\user\\models\\login.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\images.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\client.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\auth.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\users.js",["216"],"import { apiClient as client } from \"./client\";\r\n\r\nconst endpoint = \"/users\";\r\n\r\nconst get = () => client.get(endpoint);\r\n\r\nconst me = () => client.get(endpoint + \"/me\");\r\n\r\nconst add = (body) => client.post(endpoint, body);\r\n\r\nconst edit = (body) => client.put(endpoint, body);\r\n\r\nconst remove = (body) => client.put(endpoint, body);\r\n\r\nexport { get, add, edit, remove };\r\n","C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\products.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\notices.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\services\\categories.js",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\form\\buttonBack.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\app\\components\\common\\spinner.jsx",[],"C:\\dev\\TESTY\\TEST NATIVE\\bazar\\src\\methods\\cubby.js",[],{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":31,"column":10,"nodeType":"223","messageId":"224","endLine":31,"endColumn":19},{"ruleId":"225","severity":1,"message":"226","line":33,"column":25,"nodeType":"227","endLine":41,"endColumn":26},{"ruleId":"228","severity":1,"message":"229","line":17,"column":15,"nodeType":"230","endLine":24,"endColumn":6},{"ruleId":"228","severity":1,"message":"231","line":24,"column":8,"nodeType":"232","endLine":24,"endColumn":10,"suggestions":"233"},{"ruleId":"234","severity":1,"message":"235","line":67,"column":27,"nodeType":"236","messageId":"237","endLine":67,"endColumn":29},{"ruleId":"221","severity":1,"message":"238","line":15,"column":22,"nodeType":"223","messageId":"224","endLine":15,"endColumn":33},{"ruleId":"228","severity":1,"message":"239","line":28,"column":8,"nodeType":"232","endLine":28,"endColumn":24,"suggestions":"240"},{"ruleId":"228","severity":1,"message":"229","line":30,"column":15,"nodeType":"230","endLine":36,"endColumn":6},{"ruleId":"228","severity":1,"message":"229","line":17,"column":15,"nodeType":"230","endLine":20,"endColumn":6},{"ruleId":"228","severity":1,"message":"241","line":20,"column":8,"nodeType":"232","endLine":20,"endColumn":10,"suggestions":"242"},{"ruleId":"228","severity":1,"message":"239","line":24,"column":8,"nodeType":"232","endLine":24,"endColumn":14,"suggestions":"243"},{"ruleId":"228","severity":1,"message":"229","line":17,"column":15,"nodeType":"230","endLine":31,"endColumn":6},{"ruleId":"228","severity":1,"message":"231","line":31,"column":8,"nodeType":"232","endLine":31,"endColumn":10,"suggestions":"244"},{"ruleId":"234","severity":1,"message":"235","line":81,"column":31,"nodeType":"236","messageId":"237","endLine":81,"endColumn":33},{"ruleId":"245","severity":1,"message":"246","line":30,"column":54,"nodeType":"247","messageId":"237","endLine":30,"endColumn":56},{"ruleId":"228","severity":1,"message":"239","line":38,"column":8,"nodeType":"232","endLine":38,"endColumn":36,"suggestions":"248"},{"ruleId":"228","severity":1,"message":"239","line":21,"column":8,"nodeType":"232","endLine":21,"endColumn":10,"suggestions":"249"},{"ruleId":"234","severity":1,"message":"235","line":63,"column":27,"nodeType":"236","messageId":"237","endLine":63,"endColumn":29},{"ruleId":"228","severity":1,"message":"239","line":17,"column":8,"nodeType":"232","endLine":17,"endColumn":10,"suggestions":"250"},{"ruleId":"234","severity":1,"message":"235","line":41,"column":19,"nodeType":"236","messageId":"237","endLine":41,"endColumn":21},{"ruleId":"228","severity":1,"message":"251","line":7,"column":8,"nodeType":"232","endLine":7,"endColumn":10,"suggestions":"252"},{"ruleId":"221","severity":1,"message":"253","line":7,"column":7,"nodeType":"223","messageId":"224","endLine":7,"endColumn":9},"no-native-reassign",["254"],"no-negated-in-lhs",["255"],"no-unused-vars","'apiClient' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'history', 'match.params.id', and 'title'. Either include them or remove the dependency array.","ArrayExpression",["256"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'setCategory' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'title'. Either include it or remove the dependency array.",["257"],"React Hook useEffect has missing dependencies: 'history' and 'match.params.id'. Either include them or remove the dependency array.",["258"],["259"],["260"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",["261"],["262"],["263"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["264"],"'me' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"265","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"276","fix":"278"},{"desc":"279","fix":"280"},"Update the dependencies array to be: [history, match.params.id, title]",{"range":"281","text":"282"},"Update the dependencies array to be: [category, text, title]",{"range":"283","text":"284"},"Update the dependencies array to be: [history, match.params.id]",{"range":"285","text":"286"},"Update the dependencies array to be: [card, title]",{"range":"287","text":"288"},{"range":"289","text":"282"},"Update the dependencies array to be: [categories, category, text, title]",{"range":"290","text":"291"},"Update the dependencies array to be: [title]",{"range":"292","text":"293"},{"range":"294","text":"293"},"Update the dependencies array to be: [props]",{"range":"295","text":"296"},[740,742],"[history, match.params.id, title]",[998,1014],"[category, text, title]",[734,736],"[history, match.params.id]",[810,816],"[card, title]",[979,981],[1274,1302],"[categories, category, text, title]",[614,616],"[title]",[470,472],[177,179],"[props]"]